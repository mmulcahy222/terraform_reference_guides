{"resource-aws-api-gateway-stage": "<h1 id=\"resource-aws_api_gateway_stage\">Resource: aws_api_gateway_stage</h1><p>Manages an API Gateway Stage. A stage is a named reference to a deployment, which can be done via the <a href=\"api_gateway_deployment.html\"><code>aws_api_gateway_deployment</code> resource</a>. Stages can be optionally managed further with the <a href=\"api_gateway_base_path_mapping.html\"><code>aws_api_gateway_base_path_mapping</code> resource</a>, <a href=\"api_gateway_domain_name.html\"><code>aws_api_gateway_domain_name</code> resource</a>, and <a href=\"api_gateway_method_settings.html\"><code>aws_api_method_settings</code> resource</a>. For more information, see the <a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/set-up-stages.html\">API Gateway Developer Guide</a>.</p>", "example-usage": "<h2 id=\"example-usage\">Example Usage</h2><p>An end-to-end example of a REST API configured with OpenAPI can be found in the <a href=\"https://github.com/hashicorp/terraform-provider-aws/tree/main/examples/api-gateway-rest-api-openapi\"><code>/examples/api-gateway-rest-api-openapi</code> directory within the GitHub repository</a>.</p><br /><p>terraform<br />resource \"aws_api_gateway_rest_api\" \"example\" {<br />  body = jsonencode({<br />    openapi = \"3.0.1\"<br />    info = {<br />      title   = \"example\"<br />      version = \"1.0\"<br />    }<br />    paths = {<br />      \"/path1\" = {<br />        get = {<br />          x-amazon-apigateway-integration = {<br />            httpMethod           = \"GET\"<br />            payloadFormatVersion = \"1.0\"<br />            type                 = \"HTTP_PROXY\"<br />            uri                  = \"https://ip-ranges.amazonaws.com/ip-ranges.json\"<br />          }<br />        }<br />      }<br />    }<br />  })</p><br /><p>name = \"example\"<br />}</p><br /><p>resource \"aws_api_gateway_deployment\" \"example\" {<br />  rest_api_id = aws_api_gateway_rest_api.example.id</p><br /><p>triggers = {<br />    redeployment = sha1(jsonencode(aws_api_gateway_rest_api.example.body))<br />  }</p><br /><p>lifecycle {<br />    create_before_destroy = true<br />  }<br />}</p><br /><p>resource \"aws_api_gateway_stage\" \"example\" {<br />  deployment_id = aws_api_gateway_deployment.example.id<br />  rest_api_id   = aws_api_gateway_rest_api.example.id<br />  stage_name    = \"example\"<br />}</p><br /><p>resource \"aws_api_gateway_method_settings\" \"example\" {<br />  rest_api_id = aws_api_gateway_rest_api.example.id<br />  stage_name  = aws_api_gateway_stage.example.stage_name<br />  method_path = \"<em>/</em>\"</p><br /><p>settings {<br />    metrics_enabled = true<br />    logging_level   = \"INFO\"<br />  }<br />}</p><br /><h3 id=\"managing-the-api-logging-cloudwatch-log-group\">Managing the API Logging CloudWatch Log Group</h3><br /><p>API Gateway provides the ability to <a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/set-up-logging.html\">enable CloudWatch API logging</a>. To manage the CloudWatch Log Group when this feature is enabled, the <a href=\"/docs/providers/aws/r/cloudwatch_log_group.html\"><code>aws_cloudwatch_log_group</code> resource</a> can be used where the name matches the API Gateway naming convention. If the CloudWatch Log Group previously exists, import the <a href=\"/docs/providers/aws/r/cloudwatch_log_group.html#import\"><code>aws_cloudwatch_log_group</code> resource into Terraform</a> as a one time operation. You can recreate the environment without import.</p><br /><p>-&gt; The below configuration uses <a href=\"https://www.terraform.io/language/meta-arguments/depends_on\"><code>depends_on</code></a> to prevent ordering issues with API Gateway automatically creating the log group first and a variable for naming consistency. Other ordering and naming methodologies may be more appropriate for your environment.</p><br /><p>terraform<br />variable \"stage_name\" {<br />  default = \"example\"<br />  type    = string<br />}</p><br /><p>resource \"aws_api_gateway_rest_api\" \"example\" {<br />  # ... other configuration ...<br />}</p><br /><p>resource \"aws_api_gateway_stage\" \"example\" {<br />  depends_on = [aws_cloudwatch_log_group.example]</p><br /><p>stage_name = var.stage_name<br />  # ... other configuration ...<br />}</p><br /><p>resource \"aws_cloudwatch_log_group\" \"example\" {<br />  name              = \"API-Gateway-Execution-Logs_${aws_api_gateway_rest_api.example.id}/${var.stage_name}\"<br />  retention_in_days = 7<br />  # ... potentially other configuration ...<br />}</p><br />", "argument-reference": "<h2 id=\"argument-reference\">Argument Reference</h2><p>This resource supports the following arguments:</p><ul><li><code>rest_api_id</code> - (Required) ID of the associated REST API</li><li><code>stage_name</code> - (Required) Name of the stage</li><li><code>deployment_id</code> - (Required) ID of the deployment that the stage points to</li><li><code>access_log_settings</code> - (Optional) Enables access logs for the API stage. See <a href=\"#access-log-settings\">Access Log Settings</a> below.</li><li><code>cache_cluster_enabled</code> - (Optional) Whether a cache cluster is enabled for the stage</li><li><code>cache_cluster_size</code> - (Optional) Size of the cache cluster for the stage, if enabled. Allowed values include <code>0.5</code>, <code>1.6</code>, <code>6.1</code>, <code>13.5</code>, <code>28.4</code>, <code>58.2</code>, <code>118</code> and <code>237</code>.</li><li><code>canary_settings</code> - (Optional) Configuration settings of a canary deployment. See <a href=\"#canary-settings\">Canary Settings</a> below.</li><li><code>client_certificate_id</code> - (Optional) Identifier of a client certificate for the stage.</li><li><code>description</code> - (Optional) Description of the stage.</li><li><code>documentation_version</code> - (Optional) Version of the associated API documentation</li><li><code>variables</code> - (Optional) Map that defines the stage variables</li><li><code>tags</code> - (Optional) Map of tags to assign to the resource. If configured with a provider <a href=\"https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block\"><code>default_tags</code> configuration block</a> present, tags with matching keys will overwrite those defined at the provider-level.</li><li><code>xray_tracing_enabled</code> - (Optional) Whether active tracing with X-ray is enabled. Defaults to <code>false</code>.</li></ul><h3 id=\"access-log-settings\">Access Log Settings</h3><ul><li><code>destination_arn</code> - (Required) ARN of the CloudWatch Logs log group or Kinesis Data Firehose delivery stream to receive access logs. If you specify a Kinesis Data Firehose delivery stream, the stream name must begin with <code>amazon-apigateway-</code>. Automatically removes trailing <code>:*</code> if present.</li><li><code>format</code> - (Required) Formatting and values recorded in the logs.<br />For more information on configuring the log format rules visit the AWS <a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/set-up-logging.html\">documentation</a></li></ul><h3 id=\"canary-settings\">Canary Settings</h3><ul><li><code>percent_traffic</code> - (Optional) Percent <code>0.0</code> - <code>100.0</code> of traffic to divert to the canary deployment.</li><li><code>stage_variable_overrides</code> - (Optional) Map of overridden stage <code>variables</code> (including new variables) for the canary deployment.</li><li><code>use_stage_cache</code> - (Optional) Whether the canary deployment uses the stage cache. Defaults to false.</li></ul>", "attribute-reference": "<h2 id=\"attribute-reference\">Attribute Reference</h2><p>This resource exports the following attributes in addition to the arguments above:</p><ul><li><code>arn</code> - ARN</li><li><code>id</code> - ID of the stage</li><li><code>invoke_url</code> - URL to invoke the API pointing to the stage,<br />  e.g., <code>https://z4675bid1j.execute-api.eu-west-2.amazonaws.com/prod</code></li><li><code>execution_arn</code> - Execution ARN to be used in <a href=\"/docs/providers/aws/r/lambda_permission.html\"><code>lambda_permission</code></a>'s <code>source_arn</code><br />  when allowing API Gateway to invoke a Lambda function,<br />  e.g., <code>arn:aws:execute-api:eu-west-2:123456789012:z4675bid1j/prod</code></li><li><code>tags_all</code> - Map of tags assigned to the resource, including those inherited from the provider <a href=\"https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block\"><code>default_tags</code> configuration block</a>.</li><li><code>web_acl_arn</code> - ARN of the WebAcl associated with the Stage.</li></ul>", "import": "<h2 id=\"import\">Import</h2><p>In Terraform v1.5.0 and later, use an <a href=\"https://developer.hashicorp.com/terraform/language/import\"><code>import</code> block</a> to import <code>aws_api_gateway_stage</code> using <code>REST-API-ID/STAGE-NAME</code>. For example:</p><p>terraform<br />import {<br />  to = aws_api_gateway_stage.example<br />  id = \"12345abcde/example\"<br />}</p><p>Using <code>terraform import</code>, import <code>aws_api_gateway_stage</code> using <code>REST-API-ID/STAGE-NAME</code>. For example:</p><p>console<br />% terraform import aws_api_gateway_stage.example 12345abcde/example</p>", "description": "<h1 id=\"resource-aws_api_gateway_stage\">Resource: aws_api_gateway_stage</h1><p>Manages an API Gateway Stage. A stage is a named reference to a deployment, which can be done via the <a href=\"api_gateway_deployment.html\"><code>aws_api_gateway_deployment</code> resource</a>. Stages can be optionally managed further with the <a href=\"api_gateway_base_path_mapping.html\"><code>aws_api_gateway_base_path_mapping</code> resource</a>, <a href=\"api_gateway_domain_name.html\"><code>aws_api_gateway_domain_name</code> resource</a>, and <a href=\"api_gateway_method_settings.html\"><code>aws_api_method_settings</code> resource</a>. For more information, see the <a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/set-up-stages.html\">API Gateway Developer Guide</a>.</p>"}