{"resource-aws-lex-intent": "<h1 id=\"resource-aws_lex_intent\">Resource: aws_lex_intent</h1><p>Provides an Amazon Lex Intent resource. For more information see<br /><a href=\"https://docs.aws.amazon.com/lex/latest/dg/how-it-works.html\">Amazon Lex: How It Works</a></p>", "example-usage": "<h2 id=\"example-usage\">Example Usage</h2><p>terraform<br />resource \"aws_lex_intent\" \"order_flowers_intent\" {<br />  confirmation_prompt {<br />    max_attempts = 2</p><pre><code>message {  content      = \"Okay, your {FlowerType} will be ready for pickup by {PickupTime} on {PickupDate}.  Does this sound okay?\"  content_type = \"PlainText\"}</code></pre><p>}</p><p>create_version = false<br />  name           = \"OrderFlowers\"<br />  description    = \"Intent to order a bouquet of flowers for pick up\"</p><p>fulfillment_activity {<br />    type = \"ReturnIntent\"<br />  }</p><p>rejection_statement {<br />    message {<br />      content      = \"Okay, I will not place your order.\"<br />      content_type = \"PlainText\"<br />    }<br />  }</p><p>sample_utterances = [<br />    \"I would like to order some flowers\",<br />    \"I would like to pick up flowers\",<br />  ]</p><p>slot {<br />    description = \"The type of flowers to pick up\"<br />    name        = \"FlowerType\"<br />    priority    = 1</p><pre><code>sample_utterances = [  \"I would like to order {FlowerType}\",]slot_constraint   = \"Required\"slot_type         = \"FlowerTypes\"slot_type_version = \"$$LATEST\"value_elicitation_prompt {  max_attempts = 2  message {    content      = \"What type of flowers would you like to order?\"    content_type = \"PlainText\"  }}</code></pre><p>}</p><p>slot {<br />    description = \"The date to pick up the flowers\"<br />    name        = \"PickupDate\"<br />    priority    = 2</p><pre><code>sample_utterances = [  \"I would like to order {FlowerType}\",]slot_constraint   = \"Required\"slot_type         = \"AMAZON.DATE\"slot_type_version = \"$$LATEST\"value_elicitation_prompt {  max_attempts = 2  message {    content      = \"What day do you want the {FlowerType} to be picked up?\"    content_type = \"PlainText\"  }}</code></pre><p>}</p><p>slot {<br />    description = \"The time to pick up the flowers\"<br />    name        = \"PickupTime\"<br />    priority    = 3</p><pre><code>sample_utterances = [  \"I would like to order {FlowerType}\",]slot_constraint   = \"Required\"slot_type         = \"AMAZON.TIME\"slot_type_version = \"$$LATEST\"value_elicitation_prompt {  max_attempts = 2  message {    content      = \"Pick up the {FlowerType} at what time on {PickupDate}?\"    content_type = \"PlainText\"  }}</code></pre><p>}<br />}<br /></p>", "argument-reference": "<h2 id=\"argument-reference\">Argument Reference</h2><p>This resource supports the following arguments:</p><ul><li><code>conclusion_statement</code> - (Optional) The statement that you want Amazon Lex to convey to the user<br />after the intent is successfully fulfilled by the Lambda function. This element is relevant only if<br />you provide a Lambda function in the <code>fulfillment_activity</code>. If you return the intent to the client<br />application, you can't specify this element. The <code>follow_up_prompt</code> and <code>conclusion_statement</code> are<br />mutually exclusive. You can specify only one. Attributes are documented under <a href=\"#statement\">statement</a>.</li><li><code>confirmation_prompt</code> - (Optional) Prompts the user to confirm the intent. This question should<br />have a yes or no answer. You you must provide both the <code>rejection_statement</code> and <code>confirmation_prompt</code>,<br />or neither. Attributes are documented under <a href=\"#prompt\">prompt</a>.</li><li><code>create_version</code> - (Optional) Determines if a new slot type version is created when the initial<br />resource is created and on each update. Defaults to <code>false</code>.</li><li><code>description</code> - (Optional) A description of the intent. Must be less than or equal to 200 characters in length.</li><li><code>dialog_code_hook</code> - (Optional) Specifies a Lambda function to invoke for each user input. You can<br />invoke this Lambda function to personalize user interaction. Attributes are documented under <a href=\"#code_hook\">code_hook</a>.</li><li><code>follow_up_prompt</code> - (Optional) Amazon Lex uses this prompt to solicit additional activity after<br />fulfilling an intent. For example, after the OrderPizza intent is fulfilled, you might prompt the<br />user to order a drink. The <code>follow_up_prompt</code> field and the <code>conclusion_statement</code> field are mutually<br />exclusive. You can specify only one. Attributes are documented under <a href=\"#follow_up_prompt\">follow_up_prompt</a>.</li><li><code>fulfillment_activity</code> - (Required) Describes how the intent is fulfilled. For example, after a<br />user provides all of the information for a pizza order, <code>fulfillment_activity</code> defines how the bot<br />places an order with a local pizza store. Attributes are documented under <a href=\"#fulfillment_activity\">fulfillment_activity</a>.</li><li><code>name</code> - (Required) The name of the intent, not case sensitive. Must be less than or equal to 100 characters in length.</li><li><code>parent_intent_signature</code> - (Optional) A unique identifier for the built-in intent to base this<br />intent on. To find the signature for an intent, see<br /><a href=\"https://developer.amazon.com/public/solutions/alexa/alexa-skills-kit/docs/built-in-intent-ref/standard-intents\">Standard Built-in Intents</a><br />in the Alexa Skills Kit.</li><li><code>rejection_statement</code> - (Optional) When the user answers \"no\" to the question defined in<br /><code>confirmation_prompt</code>, Amazon Lex responds with this statement to acknowledge that the intent was<br />canceled. You must provide both the <code>rejection_statement</code> and the <code>confirmation_prompt</code>, or neither.<br />Attributes are documented under <a href=\"#statement\">statement</a>.</li><li><code>sample_utterances</code> - (Optional) An array of utterances (strings) that a user might say to signal<br />the intent. For example, \"I want {PizzaSize} pizza\", \"Order {Quantity} {PizzaSize} pizzas\".<br />In each utterance, a slot name is enclosed in curly braces. Must have between 1 and 10 items in the list, and each item must be less than or equal to 200 characters in length.</li><li><code>slot</code> - (Optional) An list of intent slots. At runtime, Amazon Lex elicits required slot values<br />from the user using prompts defined in the slots. Attributes are documented under <a href=\"#slot\">slot</a>.</li></ul><h3 id=\"code_hook\">code_hook</h3><p>Specifies a Lambda function that verifies requests to a bot or fulfills the user's request to a bot.</p><ul><li><code>message_version</code> - (Required) The version of the request-response that you want Amazon Lex to use<br />to invoke your Lambda function. For more information, see<br /><a href=\"https://docs.aws.amazon.com/lex/latest/dg/using-lambda.html\">Using Lambda Functions</a>. Must be less than or equal to 5 characters in length.</li><li><code>uri</code> - (Required) The Amazon Resource Name (ARN) of the Lambda function.</li></ul><h3 id=\"follow_up_prompt\">follow_up_prompt</h3><p>A prompt for additional activity after an intent is fulfilled. For example, after the OrderPizza<br />intent is fulfilled, you might prompt the user to find out whether the user wants to order drinks.</p><ul><li><code>prompt</code> - (Required) Prompts for information from the user. Attributes are documented under <a href=\"#prompt\">prompt</a>.</li><li><code>rejection_statement</code> - (Optional) If the user answers \"no\" to the question defined in the prompt field,<br />Amazon Lex responds with this statement to acknowledge that the intent was canceled. Attributes are<br />documented below under <a href=\"#statement\">statement</a>.</li></ul><h3 id=\"fulfillment_activity\">fulfillment_activity</h3><p>Describes how the intent is fulfilled after the user provides all of the information required for the intent.</p><ul><li><code>type</code> - (Required) How the intent should be fulfilled, either by running a Lambda function or by<br />returning the slot data to the client application. Type can be either <code>ReturnIntent</code> or <code>CodeHook</code>, as documented <a href=\"https://docs.aws.amazon.com/lex/latest/dg/API_FulfillmentActivity.html\">here</a>.</li><li><code>code_hook</code> - (Optional) A description of the Lambda function that is run to fulfill the intent.<br />Required if type is CodeHook. Attributes are documented under <a href=\"#code_hook\">code_hook</a>.</li></ul><h3 id=\"message\">message</h3><p>The message object that provides the message text and its type.</p><ul><li><code>content</code> - (Required) The text of the message. Must be less than or equal to 1000 characters in length.</li><li><code>content_type</code> - (Required) The content type of the message string.</li><li><code>group_number</code> - (Optional) Identifies the message group that the message belongs to. When a group<br />is assigned to a message, Amazon Lex returns one message from each group in the response. Must be a number between 1 and 5 (inclusive).</li></ul><h3 id=\"prompt\">prompt</h3><p>Obtains information from the user. To define a prompt, provide one or more messages and specify the<br />number of attempts to get information from the user. If you provide more than one message, Amazon<br />Lex chooses one of the messages to use to prompt the user.</p><ul><li><code>max_attempts</code> - (Required) The number of times to prompt the user for information. Must be a number between 1 and 5 (inclusive).</li><li><code>message</code> - (Required) A set of messages, each of which provides a message string and its type.<br />You can specify the message string in plain text or in Speech Synthesis Markup Language (SSML).<br />Attributes are documented under <a href=\"#message\">message</a>. Must contain between 1 and 15 messages.</li><li><code>response_card</code> - (Optional) The response card. Amazon Lex will substitute session attributes and<br />slot values into the response card. For more information, see<br /><a href=\"https://docs.aws.amazon.com/lex/latest/dg/ex-resp-card.html\">Example: Using a Response Card</a>. Must be less than or equal to 50000 characters in length.</li></ul><h3 id=\"slot\">slot</h3><p>Identifies the version of a specific slot.</p><ul><li><code>name</code> - (Required) The name of the intent slot that you want to create. The name is case sensitive. Must be less than or equal to 100 characters in length.</li><li><code>slot_constraint</code> - (Required) Specifies whether the slot is required or optional.</li><li><code>description</code> - (Optional) A description of the bot. Must be less than or equal to 200 characters in length.</li><li><code>priority</code> - (Optional) Directs Lex the order in which to elicit this slot value from the user.<br />For example, if the intent has two slots with priorities 1 and 2, AWS Lex first elicits a value for<br />the slot with priority 1. If multiple slots share the same priority, the order in which Lex elicits<br />values is arbitrary. Must be between 1 and 100.</li><li><code>response_card</code> - (Optional) The response card. Amazon Lex will substitute session attributes and<br />slot values into the response card. For more information, see<br /><a href=\"https://docs.aws.amazon.com/lex/latest/dg/ex-resp-card.html\">Example: Using a Response Card</a>. Must be less than or equal to 50000 characters in length.</li><li><code>sample_utterances</code> - (Optional) If you know a specific pattern with which users might respond to<br />an Amazon Lex request for a slot value, you can provide those utterances to improve accuracy. This<br />is optional. In most cases, Amazon Lex is capable of understanding user utterances. Must have between 1 and 10 items in the list, and each item must be less than or equal to 200 characters in length.</li><li><code>slot_type</code> - (Optional) The type of the slot, either a custom slot type that you defined or one of<br />the built-in slot types. Must be less than or equal to 100 characters in length.</li><li><code>slot_type_version</code> - (Optional) The version of the slot type. Must be less than or equal to 64 characters in length.</li><li><code>value_elicitation_prompt</code> - (Optional) The prompt that Amazon Lex uses to elicit the slot value<br />from the user. Attributes are documented under <a href=\"#prompt\">prompt</a>.</li></ul><h3 id=\"statement\">statement</h3><p>A statement is a map with a set of message maps and an optional response card string. Messages<br />convey information to the user. At runtime, Amazon Lex selects the message to convey.</p><ul><li><code>message</code> - (Required) A set of messages, each of which provides a message string and its type.<br />You can specify the message string in plain text or in Speech Synthesis Markup Language (SSML).<br />Attributes are documented under <a href=\"#message\">message</a>. Must contain between 1 and 15 messages.</li><li><code>response_card</code> - (Optional) The response card. Amazon Lex will substitute session attributes and<br />slot values into the response card. For more information, see<br /><a href=\"https://docs.aws.amazon.com/lex/latest/dg/ex-resp-card.html\">Example: Using a Response Card</a>. Must be less than or equal to 50000 characters in length.</li></ul>", "attribute-reference": "<h2 id=\"attribute-reference\">Attribute Reference</h2><p>This resource exports the following attributes in addition to the arguments above:</p><ul><li><code>arn</code> - The ARN of the Lex intent.</li><li><code>checksum</code> - Checksum identifying the version of the intent that was created. The checksum is not<br />included as an argument because the resource will add it automatically when updating the intent.</li><li><code>created_date</code> - The date when the intent version was created.</li><li><code>last_updated_date</code> - The date when the $LATEST version of this intent was updated.</li><li><code>version</code> - The version of the bot.</li></ul>", "timeouts": "<h2 id=\"timeouts\">Timeouts</h2><p><a href=\"https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts\">Configuration options</a>:</p><ul><li><code>create</code> - (Default <code>1m</code>)</li><li><code>update</code> - (Default <code>1m</code>)</li><li><code>delete</code> - (Default <code>5m</code>)</li></ul>", "import": "<h2 id=\"import\">Import</h2><p>In Terraform v1.5.0 and later, use an <a href=\"https://developer.hashicorp.com/terraform/language/import\"><code>import</code> block</a> to import intents using their name. For example:</p><p><code>terraformimport {  to = aws_lex_intent.order_flowers_intent  id = \"OrderFlowers\"}</code></p><p>Using <code>terraform import</code>, import intents using their name. For example:</p><p><code>console% terraform import aws_lex_intent.order_flowers_intent OrderFlowers</code></p>", "description": "<h1 id=\"resource-aws_lex_intent\">Resource: aws_lex_intent</h1><p>Provides an Amazon Lex Intent resource. For more information see<br /><a href=\"https://docs.aws.amazon.com/lex/latest/dg/how-it-works.html\">Amazon Lex: How It Works</a></p>"}