{"resource-aws-default-route-table": "<h1 id=\"resource-aws_default_route_table\">Resource: aws_default_route_table</h1><p>Provides a resource to manage a default route table of a VPC. This resource can manage the default route table of the default or a non-default VPC.</p><p>~&gt; <strong>NOTE:</strong> This is an advanced resource with special caveats. Please read this document in its entirety before using this resource. The <code>aws_default_route_table</code> resource behaves differently from normal resources. Terraform does not <em>create</em> this resource but instead attempts to \"adopt\" it into management. <strong>Do not</strong> use both <code>aws_default_route_table</code> to manage a default route table <strong>and</strong> <code>aws_main_route_table_association</code> with the same VPC due to possible route conflicts. See <a href=\"/docs/providers/aws/r/main_route_table_association.html\">aws_main_route_table_association</a> documentation for more details.</p><p>Every VPC has a default route table that can be managed but not destroyed. When Terraform first adopts a default route table, it <strong>immediately removes all defined routes</strong>. It then proceeds to create any routes specified in the configuration. This step is required so that only the routes specified in the configuration exist in the default route table.</p><p>For more information, see the Amazon VPC User Guide on <a href=\"https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Route_Tables.html\">Route Tables</a>. For information about managing normal route tables in Terraform, see <a href=\"/docs/providers/aws/r/route_table.html\"><code>aws_route_table</code></a>.</p>", "example-usage": "<h2 id=\"example-usage\">Example Usage</h2><p>terraform<br />resource \"aws_default_route_table\" \"example\" {<br />  default_route_table_id = aws_vpc.example.default_route_table_id</p><p>route {<br />    cidr_block = \"10.0.1.0/24\"<br />    gateway_id = aws_internet_gateway.example.id<br />  }</p><p>route {<br />    ipv6_cidr_block        = \"::/0\"<br />    egress_only_gateway_id = aws_egress_only_internet_gateway.example.id<br />  }</p><p>tags = {<br />    Name = \"example\"<br />  }<br />}<br /></p><p>To subsequently remove all managed routes:</p><p>terraform<br />resource \"aws_default_route_table\" \"example\" {<br />  default_route_table_id = aws_vpc.example.default_route_table_id</p><p>route = []</p><p>tags = {<br />    Name = \"example\"<br />  }<br />}<br /></p>", "argument-reference": "<h2 id=\"argument-reference\">Argument Reference</h2><p>The following arguments are required:</p><ul><li><code>default_route_table_id</code> - (Required) ID of the default route table.</li></ul><p>The following arguments are optional:</p><ul><li><code>propagating_vgws</code> - (Optional) List of virtual gateways for propagation.</li><li><code>route</code> - (Optional) Configuration block of routes. Detailed below. This argument is processed in <a href=\"https://www.terraform.io/docs/configuration/attr-as-blocks.html\">attribute-as-blocks mode</a>. This means that omitting this argument is interpreted as ignoring any existing routes. To remove all managed routes an empty list should be specified. See the example above.</li><li><code>tags</code> - (Optional) Map of tags to assign to the resource. If configured with a provider <a href=\"https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block\"><code>default_tags</code> configuration block</a> present, tags with matching keys will overwrite those defined at the provider-level.</li></ul><h3 id=\"route\">route</h3><p>This argument is processed in <a href=\"https://www.terraform.io/docs/configuration/attr-as-blocks.html\">attribute-as-blocks mode</a>.</p><p>One of the following destination arguments must be supplied:</p><ul><li><code>cidr_block</code> - (Required) The CIDR block of the route.</li><li><code>ipv6_cidr_block</code> - (Optional) The Ipv6 CIDR block of the route</li><li><code>destination_prefix_list_id</code> - (Optional) The ID of a <a href=\"ec2_managed_prefix_list.html\">managed prefix list</a> destination of the route.</li></ul><p>One of the following target arguments must be supplied:</p><ul><li><code>core_network_arn</code> - (Optional) The Amazon Resource Name (ARN) of a core network.</li><li><code>egress_only_gateway_id</code> - (Optional) Identifier of a VPC Egress Only Internet Gateway.</li><li><code>gateway_id</code> - (Optional) Identifier of a VPC internet gateway or a virtual private gateway.</li><li><code>instance_id</code> - (Optional) Identifier of an EC2 instance.</li><li><code>nat_gateway_id</code> - (Optional) Identifier of a VPC NAT gateway.</li><li><code>network_interface_id</code> - (Optional) Identifier of an EC2 network interface.</li><li><code>transit_gateway_id</code> - (Optional) Identifier of an EC2 Transit Gateway.</li><li><code>vpc_endpoint_id</code> - (Optional) Identifier of a VPC Endpoint. This route must be removed prior to VPC Endpoint deletion.</li><li><code>vpc_peering_connection_id</code> - (Optional) Identifier of a VPC peering connection.</li></ul><p>Note that the default route, mapping the VPC's CIDR block to \"local\", is created implicitly and cannot be specified.</p>", "attribute-reference": "<h2 id=\"attribute-reference\">Attribute Reference</h2><p>This resource exports the following attributes in addition to the arguments above:</p><ul><li><code>id</code> - ID of the route table.</li><li><code>arn</code> - The ARN of the route table.</li><li><code>owner_id</code> - ID of the AWS account that owns the route table.</li><li><code>tags_all</code> - A map of tags assigned to the resource, including those inherited from the provider <a href=\"https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block\"><code>default_tags</code> configuration block</a>.</li><li><code>vpc_id</code> - ID of the VPC.</li></ul>", "timeouts": "<h2 id=\"timeouts\">Timeouts</h2><p><a href=\"https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts\">Configuration options</a>:</p><ul><li><code>create</code> - (Default <code>2m</code>)</li><li><code>update</code> - (Default <code>2m</code>)</li></ul>", "import": "<h2 id=\"import\">Import</h2><p>In Terraform v1.5.0 and later, use an <a href=\"https://developer.hashicorp.com/terraform/language/import\"><code>import</code> block</a> to import Default VPC route tables using the <code>vpc_id</code>. For example:</p><p><code>terraformimport {  to = aws_default_route_table.example  id = \"vpc-33cc44dd\"}</code></p><p>Using <code>terraform import</code>, import Default VPC route tables using the <code>vpc_id</code>. For example:</p><p><code>console% terraform import aws_default_route_table.example vpc-33cc44dd</code></p>", "description": "<h1 id=\"resource-aws_default_route_table\">Resource: aws_default_route_table</h1><p>Provides a resource to manage a default route table of a VPC. This resource can manage the default route table of the default or a non-default VPC.</p><p>~&gt; <strong>NOTE:</strong> This is an advanced resource with special caveats. Please read this document in its entirety before using this resource. The <code>aws_default_route_table</code> resource behaves differently from normal resources. Terraform does not <em>create</em> this resource but instead attempts to \"adopt\" it into management. <strong>Do not</strong> use both <code>aws_default_route_table</code> to manage a default route table <strong>and</strong> <code>aws_main_route_table_association</code> with the same VPC due to possible route conflicts. See <a href=\"/docs/providers/aws/r/main_route_table_association.html\">aws_main_route_table_association</a> documentation for more details.</p><p>Every VPC has a default route table that can be managed but not destroyed. When Terraform first adopts a default route table, it <strong>immediately removes all defined routes</strong>. It then proceeds to create any routes specified in the configuration. This step is required so that only the routes specified in the configuration exist in the default route table.</p><p>For more information, see the Amazon VPC User Guide on <a href=\"https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Route_Tables.html\">Route Tables</a>. For information about managing normal route tables in Terraform, see <a href=\"/docs/providers/aws/r/route_table.html\"><code>aws_route_table</code></a>.</p>"}