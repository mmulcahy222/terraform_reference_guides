{"resource-aws-autoscaling-policy": "<h1 id=\"resource-aws_autoscaling_policy\">Resource: aws_autoscaling_policy</h1><p>Provides an AutoScaling Scaling Policy resource.</p><p>~&gt; <strong>NOTE:</strong> You may want to omit <code>desired_capacity</code> attribute from attached <code>aws_autoscaling_group</code><br />when using autoscaling policies. It's good practice to pick either<br /><a href=\"https://docs.aws.amazon.com/AutoScaling/latest/DeveloperGuide/as-manual-scaling.html\">manual</a><br />or <a href=\"https://docs.aws.amazon.com/AutoScaling/latest/DeveloperGuide/as-scale-based-on-demand.html\">dynamic</a><br />(policy-based) scaling.</p><blockquote><p><strong>Hands-on:</strong> Try the <a href=\"https://learn.hashicorp.com/tutorials/terraform/aws-asg?utm_source=WEBSITE&amp;utm_medium=WEB_IO&amp;utm_offer=ARTICLE_PAGE&amp;utm_content=DOCS\">Manage AWS Auto Scaling Groups</a> tutorial on HashiCorp Learn.</p></blockquote>", "example-usage": "<h2 id=\"example-usage\">Example Usage</h2><p>terraform<br />resource \"aws_autoscaling_policy\" \"bat\" {<br />  name                   = \"foobar3-terraform-test\"<br />  scaling_adjustment     = 4<br />  adjustment_type        = \"ChangeInCapacity\"<br />  cooldown               = 300<br />  autoscaling_group_name = aws_autoscaling_group.bar.name<br />}</p><br /><p>resource \"aws_autoscaling_group\" \"bar\" {<br />  availability_zones        = [\"us-east-1a\"]<br />  name                      = \"foobar3-terraform-test\"<br />  max_size                  = 5<br />  min_size                  = 2<br />  health_check_grace_period = 300<br />  health_check_type         = \"ELB\"<br />  force_delete              = true<br />  launch_configuration      = aws_launch_configuration.foo.name<br />}</p><br /><h3 id=\"create-target-tracking-scaling-policy-using-metric-math\">Create target tracking scaling policy using metric math</h3><br /><p>terraform<br />resource \"aws_autoscaling_policy\" \"example\" {<br />  autoscaling_group_name = \"my-test-asg\"<br />  name                   = \"foo\"<br />  policy_type            = \"TargetTrackingScaling\"<br />  target_tracking_configuration {<br />    target_value = 100<br />    customized_metric_specification {<br />      metrics {<br />        label = \"Get the queue size (the number of messages waiting to be processed)\"<br />        id    = \"m1\"<br />        metric_stat {<br />          metric {<br />            namespace   = \"AWS/SQS\"<br />            metric_name = \"ApproximateNumberOfMessagesVisible\"<br />            dimensions {<br />              name  = \"QueueName\"<br />              value = \"my-queue\"<br />            }<br />          }<br />          stat = \"Sum\"<br />        }<br />        return_data = false<br />      }<br />      metrics {<br />        label = \"Get the group size (the number of InService instances)\"<br />        id    = \"m2\"<br />        metric_stat {<br />          metric {<br />            namespace   = \"AWS/AutoScaling\"<br />            metric_name = \"GroupInServiceInstances\"<br />            dimensions {<br />              name  = \"AutoScalingGroupName\"<br />              value = \"my-asg\"<br />            }<br />          }<br />          stat = \"Average\"<br />        }<br />        return_data = false<br />      }<br />      metrics {<br />        label       = \"Calculate the backlog per instance\"<br />        id          = \"e1\"<br />        expression  = \"m1 / m2\"<br />        return_data = true<br />      }<br />    }<br />  }<br />}</p><br /><h3 id=\"create-predictive-scaling-policy-using-customized-metrics\">Create predictive scaling policy using customized metrics</h3><br /><p>terraform<br />resource \"aws_autoscaling_policy\" \"example\" {<br />  autoscaling_group_name = \"my-test-asg\"<br />  name                   = \"foo\"<br />  policy_type            = \"PredictiveScaling\"<br />  predictive_scaling_configuration {<br />    metric_specification {<br />      target_value = 10<br />      customized_load_metric_specification {<br />        metric_data_queries {<br />          id         = \"load_sum\"<br />          expression = \"SUM(SEARCH('{AWS/EC2,AutoScalingGroupName} MetricName=\\\"CPUUtilization\\\" my-test-asg', 'Sum', 3600))\"<br />        }<br />      }<br />      customized_capacity_metric_specification {<br />        metric_data_queries {<br />          id         = \"capacity_sum\"<br />          expression = \"SUM(SEARCH('{AWS/AutoScaling,AutoScalingGroupName} MetricName=\\\"GroupInServiceIntances\\\" my-test-asg', 'Average', 300))\"<br />        }<br />      }<br />      customized_scaling_metric_specification {<br />        metric_data_queries {<br />          id          = \"capacity_sum\"<br />          expression  = \"SUM(SEARCH('{AWS/AutoScaling,AutoScalingGroupName} MetricName=\\\"GroupInServiceIntances\\\" my-test-asg', 'Average', 300))\"<br />          return_data = false<br />        }<br />        metric_data_queries {<br />          id          = \"load_sum\"<br />          expression  = \"SUM(SEARCH('{AWS/EC2,AutoScalingGroupName} MetricName=\\\"CPUUtilization\\\" my-test-asg', 'Sum', 300))\"<br />          return_data = false<br />        }<br />        metric_data_queries {<br />          id         = \"weighted_average\"<br />          expression = \"load_sum / (capacity_sum * PERIOD(capacity_sum) / 60)\"<br />        }<br />      }<br />    }<br />  }<br />}</p><br /><h3 id=\"create-predictive-scaling-policy-using-customized-scaling-and-predefined-load-metric\">Create predictive scaling policy using customized scaling and predefined load metric</h3><br /><p>terraform<br />resource \"aws_autoscaling_policy\" \"example\" {<br />  autoscaling_group_name = \"my-test-asg\"<br />  name                   = \"foo\"<br />  policy_type            = \"PredictiveScaling\"<br />  predictive_scaling_configuration {<br />    metric_specification {<br />      target_value = 10<br />      predefined_load_metric_specification {<br />        predefined_metric_type = \"ASGTotalCPUUtilization\"<br />        resource_label         = \"testLabel\"<br />      }<br />      customized_scaling_metric_specification {<br />        metric_data_queries {<br />          id = \"scaling\"<br />          metric_stat {<br />            metric {<br />              metric_name = \"CPUUtilization\"<br />              namespace   = \"AWS/EC2\"<br />              dimensions {<br />                name  = \"AutoScalingGroupName\"<br />                value = \"my-test-asg\"<br />              }<br />            }<br />            stat = \"Average\"<br />          }<br />        }<br />      }<br />    }<br />  }<br />}</p><br />", "argument-reference": "<h2 id=\"argument-reference\">Argument Reference</h2><ul><li><code>name</code> - (Required) Name of the policy.</li><li><code>autoscaling_group_name</code> - (Required) Name of the autoscaling group.</li><li><code>adjustment_type</code> - (Optional) Whether the adjustment is an absolute number or a percentage of the current capacity. Valid values are <code>ChangeInCapacity</code>, <code>ExactCapacity</code>, and <code>PercentChangeInCapacity</code>.</li><li><code>policy_type</code> - (Optional) Policy type, either \"SimpleScaling\", \"StepScaling\", \"TargetTrackingScaling\", or \"PredictiveScaling\". If this value isn't provided, AWS will default to \"SimpleScaling.\"</li><li><code>predictive_scaling_configuration</code> - (Optional) Predictive scaling policy configuration to use with Amazon EC2 Auto Scaling.</li><li><code>estimated_instance_warmup</code> - (Optional) Estimated time, in seconds, until a newly launched instance will contribute CloudWatch metrics. Without a value, AWS will default to the group's specified cooldown period.</li><li><code>enabled</code> - (Optional) Whether the scaling policy is enabled or disabled. Default: <code>true</code>.</li></ul><p>The following argument is only available to \"SimpleScaling\" and \"StepScaling\" type policies:</p><ul><li><code>min_adjustment_magnitude</code> - (Optional) Minimum value to scale by when <code>adjustment_type</code> is set to <code>PercentChangeInCapacity</code>.</li></ul><p>The following arguments are only available to \"SimpleScaling\" type policies:</p><ul><li><code>cooldown</code> - (Optional) Amount of time, in seconds, after a scaling activity completes and before the next scaling activity can start.</li><li><code>scaling_adjustment</code> - (Optional) Number of instances by which to scale. <code>adjustment_type</code> determines the interpretation of this number (e.g., as an absolute number or as a percentage of the existing Auto Scaling group size). A positive increment adds to the current capacity and a negative value removes from the current capacity.</li></ul><p>The following arguments are only available to \"StepScaling\" type policies:</p><ul><li><code>metric_aggregation_type</code> - (Optional) Aggregation type for the policy's metrics. Valid values are \"Minimum\", \"Maximum\", and \"Average\". Without a value, AWS will treat the aggregation type as \"Average\".</li><li><code>step_adjustment</code> - (Optional) Set of adjustments that manage<br />group scaling. These have the following structure:</li></ul><p>terraform<br />resource \"aws_autoscaling_policy\" \"example\" {<br />  # ... other configuration ...</p><p>step_adjustment {<br />    scaling_adjustment          = -1<br />    metric_interval_lower_bound = 1.0<br />    metric_interval_upper_bound = 2.0<br />  }</p><p>step_adjustment {<br />    scaling_adjustment          = 1<br />    metric_interval_lower_bound = 2.0<br />    metric_interval_upper_bound = 3.0<br />  }<br />}</p><p>The following fields are available in step adjustments:</p><ul><li><code>scaling_adjustment</code> - (Required) Number of members by which to<br />scale, when the adjustment bounds are breached. A positive value scales<br />up. A negative value scales down.</li><li><code>metric_interval_lower_bound</code> - (Optional) Lower bound for the<br />difference between the alarm threshold and the CloudWatch metric.<br />Without a value, AWS will treat this bound as negative infinity.</li><li><code>metric_interval_upper_bound</code> - (Optional) Upper bound for the<br />difference between the alarm threshold and the CloudWatch metric.<br />Without a value, AWS will treat this bound as positive infinity. The upper bound<br />must be greater than the lower bound.</li></ul><p>Notice the bounds are <strong>relative</strong> to the alarm threshold, meaning that the starting point is not 0%, but the alarm threshold. Check the official <a href=\"https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-scaling-simple-step.html#as-scaling-steps\">docs</a> for a detailed example.</p><p>The following arguments are only available to \"TargetTrackingScaling\" type policies:</p><ul><li><code>target_tracking_configuration</code> - (Optional) Target tracking policy. These have the following structure:</li></ul><p>terraform<br />resource \"aws_autoscaling_policy\" \"example\" {<br />  # ... other configuration ...</p><p>target_tracking_configuration {<br />    predefined_metric_specification {<br />      predefined_metric_type = \"ASGAverageCPUUtilization\"<br />    }</p><pre><code>target_value = 40.0</code></pre><p>}<br />}</p><p>The following fields are available in target tracking configuration:</p><ul><li><code>predefined_metric_specification</code> - (Optional) Predefined metric. Conflicts with <code>customized_metric_specification</code>.</li><li><code>customized_metric_specification</code> - (Optional) Customized metric. Conflicts with <code>predefined_metric_specification</code>.</li><li><code>target_value</code> - (Required) Target value for the metric.</li><li><code>disable_scale_in</code> - (Optional, Default: false) Whether scale in by the target tracking policy is disabled.</li></ul><h3 id=\"predefined_metric_specification\">predefined_metric_specification</h3><p>This argument supports the following arguments:</p><ul><li><code>predefined_metric_type</code> - (Required) Metric type.</li><li><code>resource_label</code> - (Optional) Identifies the resource associated with the metric type.</li></ul><h3 id=\"customized_metric_specification\">customized_metric_specification</h3><p>This argument supports the following arguments:</p><ul><li><code>metric_dimension</code> - (Optional) Dimensions of the metric.</li><li><code>metric_name</code> - (Optional) Name of the metric.</li><li><code>namespace</code> - (Optional) Namespace of the metric.</li><li><code>statistic</code> - (Optional) Statistic of the metric.</li><li><code>unit</code> - (Optional) Unit of the metric.</li><li><code>metrics</code> - (Optional) Metrics to include, as a metric data query.</li></ul><h4 id=\"metric_dimension\">metric_dimension</h4><p>This argument supports the following arguments:</p><ul><li><code>name</code> - (Required) Name of the dimension.</li><li><code>value</code> - (Required) Value of the dimension.</li></ul><h4 id=\"metrics\">metrics</h4><p>This argument supports the following arguments:</p><ul><li><code>expression</code> - (Optional) Math expression used on the returned metric. You must specify either <code>expression</code> or <code>metric_stat</code>, but not both.</li><li><code>id</code> - (Required) Short name for the metric used in target tracking scaling policy.</li><li><code>label</code> - (Optional) Human-readable label for this metric or expression.</li><li><code>metric_stat</code> - (Optional) Structure that defines CloudWatch metric to be used in target tracking scaling policy. You must specify either <code>expression</code> or <code>metric_stat</code>, but not both.</li><li><code>return_data</code> - (Optional) Boolean that indicates whether to return the timestamps and raw data values of this metric, the default is true</li></ul><h5 id=\"metric_stat\">metric_stat</h5><p>This argument supports the following arguments:</p><ul><li><code>metric</code> - (Required) Structure that defines the CloudWatch metric to return, including the metric name, namespace, and dimensions.</li><li><code>stat</code> - (Required) Statistic of the metrics to return.</li><li><code>unit</code> - (Optional) Unit of the metrics to return.</li></ul><h5 id=\"metric\">metric</h5><p>This argument supports the following arguments:</p><ul><li><code>dimensions</code> - (Optional) Dimensions of the metric.</li><li><code>metric_name</code> - (Required) Name of the metric.</li><li><code>namespace</code> - (Required) Namespace of the metric.</li></ul><h6 id=\"dimensions\">dimensions</h6><p>This argument supports the following arguments:</p><ul><li><code>name</code> - (Required) Name of the dimension.</li><li><code>value</code> - (Required) Value of the dimension.</li></ul><h3 id=\"predictive_scaling_configuration\">predictive_scaling_configuration</h3><p>This argument supports the following arguments:</p><ul><li><code>max_capacity_breach_behavior</code> - (Optional) Defines the behavior that should be applied if the forecast capacity approaches or exceeds the maximum capacity of the Auto Scaling group. Valid values are <code>HonorMaxCapacity</code> or <code>IncreaseMaxCapacity</code>. Default is <code>HonorMaxCapacity</code>.</li><li><code>max_capacity_buffer</code> - (Optional) Size of the capacity buffer to use when the forecast capacity is close to or exceeds the maximum capacity. Valid range is <code>0</code> to <code>100</code>. If set to <code>0</code>, Amazon EC2 Auto Scaling may scale capacity higher than the maximum capacity to equal but not exceed forecast capacity.</li><li><code>metric_specification</code> - (Required) This structure includes the metrics and target utilization to use for predictive scaling.</li><li><code>mode</code> - (Optional) Predictive scaling mode. Valid values are <code>ForecastAndScale</code> and <code>ForecastOnly</code>. Default is <code>ForecastOnly</code>.</li><li><code>scheduling_buffer_time</code> - (Optional) Amount of time, in seconds, by which the instance launch time can be advanced. Minimum is <code>0</code>.</li></ul><h4 id=\"metric_specification\">metric_specification</h4><p>This argument supports the following arguments:</p><ul><li><code>customized_capacity_metric_specification</code> - (Optional) Customized capacity metric specification. The field is only valid when you use <code>customized_load_metric_specification</code></li><li><code>customized_load_metric_specification</code> - (Optional) Customized load metric specification.</li><li><code>customized_scaling_metric_specification</code> - (Optional) Customized scaling metric specification.</li><li><code>predefined_load_metric_specification</code> - (Optional) Predefined load metric specification.</li><li><code>predefined_metric_pair_specification</code> - (Optional) Metric pair specification from which Amazon EC2 Auto Scaling determines the appropriate scaling metric and load metric to use.</li><li><code>predefined_scaling_metric_specification</code> - (Optional) Predefined scaling metric specification.</li></ul><h5 id=\"predefined_load_metric_specification\">predefined_load_metric_specification</h5><p>This argument supports the following arguments:</p><ul><li><code>predefined_metric_type</code> - (Required) Metric type. Valid values are <code>ASGTotalCPUUtilization</code>, <code>ASGTotalNetworkIn</code>, <code>ASGTotalNetworkOut</code>, or <code>ALBTargetGroupRequestCount</code>.</li><li><code>resource_label</code> - (Required) Label that uniquely identifies a specific Application Load Balancer target group from which to determine the request count served by your Auto Scaling group.</li></ul><h5 id=\"predefined_metric_pair_specification\">predefined_metric_pair_specification</h5><p>This argument supports the following arguments:</p><ul><li><code>predefined_metric_type</code> - (Required) Which metrics to use. There are two different types of metrics for each metric type: one is a load metric and one is a scaling metric. For example, if the metric type is <code>ASGCPUUtilization</code>, the Auto Scaling group's total CPU metric is used as the load metric, and the average CPU metric is used for the scaling metric. Valid values are <code>ASGCPUUtilization</code>, <code>ASGNetworkIn</code>, <code>ASGNetworkOut</code>, or <code>ALBRequestCount</code>.</li><li><code>resource_label</code> - (Required) Label that uniquely identifies a specific Application Load Balancer target group from which to determine the request count served by your Auto Scaling group.</li></ul><h5 id=\"predefined_scaling_metric_specification\">predefined_scaling_metric_specification</h5><p>This argument supports the following arguments:</p><ul><li><code>predefined_metric_type</code> - (Required) Describes a scaling metric for a predictive scaling policy. Valid values are <code>ASGAverageCPUUtilization</code>, <code>ASGAverageNetworkIn</code>, <code>ASGAverageNetworkOut</code>, or <code>ALBRequestCountPerTarget</code>.</li><li><code>resource_label</code> - (Required) Label that uniquely identifies a specific Application Load Balancer target group from which to determine the request count served by your Auto Scaling group.</li></ul><h5 id=\"customized_scaling_metric_specification\">customized_scaling_metric_specification</h5><p>This argument supports the following arguments:</p><ul><li><code>metric_data_queries</code> - (Required) List of up to 10 structures that defines custom scaling metric in predictive scaling policy</li></ul><h5 id=\"customized_load_metric_specification\">customized_load_metric_specification</h5><p>This argument supports the following arguments:</p><ul><li><code>metric_data_queries</code> - (Required) List of up to 10 structures that defines custom load metric in predictive scaling policy</li></ul><h5 id=\"customized_capacity_metric_specification\">customized_capacity_metric_specification</h5><p>This argument supports the following arguments:</p><ul><li><code>metric_data_queries</code> - (Required) List of up to 10 structures that defines custom capacity metric in predictive scaling policy</li></ul><h5 id=\"metric_data_queries\">metric_data_queries</h5><p>This argument supports the following arguments:</p><ul><li><code>expression</code> - (Optional) Math expression used on the returned metric. You must specify either <code>expression</code> or <code>metric_stat</code>, but not both.</li><li><code>id</code> - (Required) Short name for the metric used in predictive scaling policy.</li><li><code>label</code> - (Optional) Human-readable label for this metric or expression.</li><li><code>metric_stat</code> - (Optional) Structure that defines CloudWatch metric to be used in predictive scaling policy. You must specify either <code>expression</code> or <code>metric_stat</code>, but not both.</li><li><code>return_data</code> - (Optional) Boolean that indicates whether to return the timestamps and raw data values of this metric, the default is true</li></ul><h5 id=\"metric_stat_1\">metric_stat</h5><p>This argument supports the following arguments:</p><ul><li><code>metric</code> - (Required) Structure that defines the CloudWatch metric to return, including the metric name, namespace, and dimensions.</li><li><code>stat</code> - (Required) Statistic of the metrics to return.</li><li><code>unit</code> - (Optional) Unit of the metrics to return.</li></ul><h5 id=\"metric_1\">metric</h5><p>This argument supports the following arguments:</p><ul><li><code>dimensions</code> - (Optional) Dimensions of the metric.</li><li><code>metric_name</code> - (Required) Name of the metric.</li><li><code>namespace</code> - (Required) Namespace of the metric.</li></ul><h5 id=\"dimensions_1\">dimensions</h5><p>This argument supports the following arguments:</p><ul><li><code>name</code> - (Required) Name of the dimension.</li><li><code>value</code> - (Required) Value of the dimension.</li></ul>", "attribute-reference": "<h2 id=\"attribute-reference\">Attribute Reference</h2><p>This resource exports the following attributes in addition to the arguments above:</p><ul><li><code>arn</code> - ARN assigned by AWS to the scaling policy.</li><li><code>name</code> - Scaling policy's name.</li><li><code>autoscaling_group_name</code> - The scaling policy's assigned autoscaling group.</li><li><code>adjustment_type</code> - Scaling policy's adjustment type.</li><li><code>policy_type</code> - Scaling policy's type.</li></ul>", "import": "<h2 id=\"import\">Import</h2><p>In Terraform v1.5.0 and later, use an <a href=\"https://developer.hashicorp.com/terraform/language/import\"><code>import</code> block</a> to import AutoScaling scaling policy using the role autoscaling_group_name and name separated by <code>/</code>. For example:</p><p>terraform<br />import {<br />  to = aws_autoscaling_policy.test-policy<br />  id = \"asg-name/policy-name\"<br />}</p><p>Using <code>terraform import</code>, import AutoScaling scaling policy using the role autoscaling_group_name and name separated by <code>/</code>. For example:</p><p>console<br />% terraform import aws_autoscaling_policy.test-policy asg-name/policy-name</p>", "description": "<h1 id=\"resource-aws_autoscaling_policy\">Resource: aws_autoscaling_policy</h1><p>Provides an AutoScaling Scaling Policy resource.</p><p>~&gt; <strong>NOTE:</strong> You may want to omit <code>desired_capacity</code> attribute from attached <code>aws_autoscaling_group</code><br />when using autoscaling policies. It's good practice to pick either<br /><a href=\"https://docs.aws.amazon.com/AutoScaling/latest/DeveloperGuide/as-manual-scaling.html\">manual</a><br />or <a href=\"https://docs.aws.amazon.com/AutoScaling/latest/DeveloperGuide/as-scale-based-on-demand.html\">dynamic</a><br />(policy-based) scaling.</p><blockquote><p><strong>Hands-on:</strong> Try the <a href=\"https://learn.hashicorp.com/tutorials/terraform/aws-asg?utm_source=WEBSITE&amp;utm_medium=WEB_IO&amp;utm_offer=ARTICLE_PAGE&amp;utm_content=DOCS\">Manage AWS Auto Scaling Groups</a> tutorial on HashiCorp Learn.</p></blockquote>"}