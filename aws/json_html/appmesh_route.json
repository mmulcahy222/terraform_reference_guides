{"resource-aws-appmesh-route": "<h1 id=\"resource-aws_appmesh_route\">Resource: aws_appmesh_route</h1><p>Provides an AWS App Mesh route resource.</p>", "example-usage": "<h2 id=\"example-usage\">Example Usage</h2><h3 id=\"http-routing\">HTTP Routing</h3><p>terraform<br />resource \"aws_appmesh_route\" \"serviceb\" {<br />  name                = \"serviceB-route\"<br />  mesh_name           = aws_appmesh_mesh.simple.id<br />  virtual_router_name = aws_appmesh_virtual_router.serviceb.name</p><p>spec {<br />    http_route {<br />      match {<br />        prefix = \"/\"<br />      }</p><pre><code>  action {    weighted_target {      virtual_node = aws_appmesh_virtual_node.serviceb1.name      weight       = 90    }    weighted_target {      virtual_node = aws_appmesh_virtual_node.serviceb2.name      weight       = 10    }  }}</code></pre><p>}<br />}<br /></p><h3 id=\"http-header-routing\">HTTP Header Routing</h3><p>terraform<br />resource \"aws_appmesh_route\" \"serviceb\" {<br />  name                = \"serviceB-route\"<br />  mesh_name           = aws_appmesh_mesh.simple.id<br />  virtual_router_name = aws_appmesh_virtual_router.serviceb.name</p><p>spec {<br />    http_route {<br />      match {<br />        method = \"POST\"<br />        prefix = \"/\"<br />        scheme = \"https\"</p><pre><code>    header {      name = \"clientRequestId\"      match {        prefix = \"123\"      }    }  }  action {    weighted_target {      virtual_node = aws_appmesh_virtual_node.serviceb.name      weight       = 100    }  }}</code></pre><p>}<br />}<br /></p><h3 id=\"retry-policy\">Retry Policy</h3><p>terraform<br />resource \"aws_appmesh_route\" \"serviceb\" {<br />  name                = \"serviceB-route\"<br />  mesh_name           = aws_appmesh_mesh.simple.id<br />  virtual_router_name = aws_appmesh_virtual_router.serviceb.name</p><p>spec {<br />    http_route {<br />      match {<br />        prefix = \"/\"<br />      }</p><pre><code>  retry_policy {    http_retry_events = [      \"server-error\",    ]    max_retries = 1    per_retry_timeout {      unit  = \"s\"      value = 15    }  }  action {    weighted_target {      virtual_node = aws_appmesh_virtual_node.serviceb.name      weight       = 100    }  }}</code></pre><p>}<br />}<br /></p><h3 id=\"tcp-routing\">TCP Routing</h3><p>terraform<br />resource \"aws_appmesh_route\" \"serviceb\" {<br />  name                = \"serviceB-route\"<br />  mesh_name           = aws_appmesh_mesh.simple.id<br />  virtual_router_name = aws_appmesh_virtual_router.serviceb.name</p><p>spec {<br />    tcp_route {<br />      action {<br />        weighted_target {<br />          virtual_node = aws_appmesh_virtual_node.serviceb1.name<br />          weight       = 100<br />        }<br />      }<br />    }<br />  }<br />}<br /></p>", "argument-reference": "<h2 id=\"argument-reference\">Argument Reference</h2><p>This resource supports the following arguments:</p><ul><li><code>name</code> - (Required) Name to use for the route. Must be between 1 and 255 characters in length.</li><li><code>mesh_name</code> - (Required) Name of the service mesh in which to create the route. Must be between 1 and 255 characters in length.</li><li><code>mesh_owner</code> - (Optional) AWS account ID of the service mesh's owner. Defaults to the account ID the <a href=\"/docs/providers/aws/index.html\">AWS provider</a> is currently connected to.</li><li><code>virtual_router_name</code> - (Required) Name of the virtual router in which to create the route. Must be between 1 and 255 characters in length.</li><li><code>spec</code> - (Required) Route specification to apply.</li><li><code>tags</code> - (Optional) Map of tags to assign to the resource. If configured with a provider <a href=\"https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block\"><code>default_tags</code> configuration block</a> present, tags with matching keys will overwrite those defined at the provider-level.</li></ul><p>The <code>spec</code> object supports the following:</p><ul><li><code>grpc_route</code> - (Optional) GRPC routing information for the route.</li><li><code>http2_route</code> - (Optional) HTTP/2 routing information for the route.</li><li><code>http_route</code> - (Optional) HTTP routing information for the route.</li><li><code>priority</code> - (Optional) Priority for the route, between <code>0</code> and <code>1000</code>.<br />Routes are matched based on the specified value, where <code>0</code> is the highest priority.</li><li><code>tcp_route</code> - (Optional) TCP routing information for the route.</li></ul><p>The <code>grpc_route</code> object supports the following:</p><ul><li><code>action</code> - (Required) Action to take if a match is determined.</li><li><code>match</code> - (Required) Criteria for determining an gRPC request match.</li><li><code>retry_policy</code> - (Optional) Retry policy.</li><li><code>timeout</code> - (Optional) Types of timeouts.</li></ul><p>The <code>http2_route</code> and <code>http_route</code> objects supports the following:</p><ul><li><code>action</code> - (Required) Action to take if a match is determined.</li><li><code>match</code> - (Required) Criteria for determining an HTTP request match.</li><li><code>retry_policy</code> - (Optional) Retry policy.</li><li><code>timeout</code> - (Optional) Types of timeouts.</li></ul><p>The <code>tcp_route</code> object supports the following:</p><ul><li><code>action</code> - (Required) Action to take if a match is determined.</li><li><code>timeout</code> - (Optional) Types of timeouts.</li></ul><p>The <code>action</code> object supports the following:</p><ul><li><code>weighted_target</code> - (Required) Targets that traffic is routed to when a request matches the route.<br />You can specify one or more targets and their relative weights with which to distribute traffic.</li></ul><p>The <code>timeout</code> object supports the following:</p><ul><li><code>idle</code> - (Optional) Idle timeout. An idle timeout bounds the amount of time that a connection may be idle.</li></ul><p>The <code>idle</code> object supports the following:</p><ul><li><code>unit</code> - (Required) Unit of time. Valid values: <code>ms</code>, <code>s</code>.</li><li><code>value</code> - (Required) Number of time units. Minimum value of <code>0</code>.</li></ul><p>The <code>grpc_route</code>'s <code>match</code> object supports the following:</p><ul><li><code>metadata</code> - (Optional) Data to match from the gRPC request.</li><li><code>method_name</code> - (Optional) Method name to match from the request. If you specify a name, you must also specify a <code>service_name</code>.</li><li><code>service_name</code> - (Optional) Fully qualified domain name for the service to match from the request.</li><li><code>port</code>- (Optional) The port number to match from the request.</li></ul><p>The <code>metadata</code> object supports the following:</p><ul><li><code>name</code> - (Required) Name of the route. Must be between 1 and 50 characters in length.</li><li><code>invert</code> - (Optional) If <code>true</code>, the match is on the opposite of the <code>match</code> criteria. Default is <code>false</code>.</li><li><code>match</code> - (Optional) Data to match from the request.</li></ul><p>The <code>metadata</code>'s <code>match</code> object supports the following:</p><ul><li><code>exact</code> - (Optional) Value sent by the client must match the specified value exactly. Must be between 1 and 255 characters in length.</li><li><code>prefix</code> - (Optional) Value sent by the client must begin with the specified characters. Must be between 1 and 255 characters in length.</li><li><code>port</code>- (Optional) The port number to match from the request.</li><li><code>range</code>- (Optional) Object that specifies the range of numbers that the value sent by the client must be included in.</li><li><code>regex</code> - (Optional) Value sent by the client must include the specified characters. Must be between 1 and 255 characters in length.</li><li><code>suffix</code> - (Optional) Value sent by the client must end with the specified characters. Must be between 1 and 255 characters in length.</li></ul><p>The <code>grpc_route</code>'s <code>retry_policy</code> object supports the following:</p><ul><li><code>grpc_retry_events</code> - (Optional) List of gRPC retry events.<br />Valid values: <code>cancelled</code>, <code>deadline-exceeded</code>, <code>internal</code>, <code>resource-exhausted</code>, <code>unavailable</code>.</li><li><code>http_retry_events</code> - (Optional) List of HTTP retry events.<br />Valid values: <code>client-error</code> (HTTP status code 409), <code>gateway-error</code> (HTTP status codes 502, 503, and 504), <code>server-error</code> (HTTP status codes 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, and 511), <code>stream-error</code> (retry on refused stream).</li><li><code>max_retries</code> - (Required) Maximum number of retries.</li><li><code>per_retry_timeout</code> - (Required) Per-retry timeout.</li><li><code>tcp_retry_events</code> - (Optional) List of TCP retry events. The only valid value is <code>connection-error</code>.</li></ul><p>The <code>grpc_route</code>'s <code>timeout</code> object supports the following:</p><ul><li><code>idle</code> - (Optional) Idle timeout. An idle timeout bounds the amount of time that a connection may be idle.</li><li><code>per_request</code> - (Optional) Per request timeout.</li></ul><p>The <code>idle</code> and <code>per_request</code> objects support the following:</p><ul><li><code>unit</code> - (Required) Unit of time. Valid values: <code>ms</code>, <code>s</code>.</li><li><code>value</code> - (Required) Number of time units. Minimum value of <code>0</code>.</li></ul><p>The <code>http2_route</code> and <code>http_route</code>'s <code>match</code> object supports the following:</p><ul><li><code>prefix</code> - (Optional) Path with which to match requests.<br />This parameter must always start with /, which by itself matches all requests to the virtual router service name.</li><li><code>port</code>- (Optional) The port number to match from the request.</li><li><code>header</code> - (Optional) Client request headers to match on.</li><li><code>method</code> - (Optional) Client request header method to match on. Valid values: <code>GET</code>, <code>HEAD</code>, <code>POST</code>, <code>PUT</code>, <code>DELETE</code>, <code>CONNECT</code>, <code>OPTIONS</code>, <code>TRACE</code>, <code>PATCH</code>.</li><li><code>path</code> - (Optional) Client request path to match on.</li><li><code>query_parameter</code> - (Optional) Client request query parameters to match on.</li><li><code>scheme</code> - (Optional) Client request header scheme to match on. Valid values: <code>http</code>, <code>https</code>.</li></ul><p>The <code>match</code>'s <code>path</code> object supports the following:</p><ul><li><code>exact</code> - (Optional) The exact path to match on.</li><li><code>regex</code> - (Optional) The regex used to match the path.</li></ul><p>The <code>match</code>'s <code>query_parameter</code> object supports the following:</p><ul><li><code>name</code> - (Required) Name for the query parameter that will be matched on.</li><li><code>match</code> - (Optional) The query parameter to match on.</li></ul><p>The <code>query_parameter</code>'s <code>match</code> object supports the following:</p><ul><li><code>exact</code> - (Optional) The exact query parameter to match on.</li></ul><p>The <code>http2_route</code> and <code>http_route</code>'s <code>retry_policy</code> object supports the following:</p><ul><li><code>http_retry_events</code> - (Optional) List of HTTP retry events.<br />Valid values: <code>client-error</code> (HTTP status code 409), <code>gateway-error</code> (HTTP status codes 502, 503, and 504), <code>server-error</code> (HTTP status codes 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, and 511), <code>stream-error</code> (retry on refused stream).</li><li><code>max_retries</code> - (Required) Maximum number of retries.</li><li><code>per_retry_timeout</code> - (Required) Per-retry timeout.</li><li><code>tcp_retry_events</code> - (Optional) List of TCP retry events. The only valid value is <code>connection-error</code>.</li></ul><p>You must specify at least one value for <code>http_retry_events</code>, or at least one value for <code>tcp_retry_events</code>.</p><p>The <code>http2_route</code> and <code>http_route</code>'s <code>timeout</code> object supports the following:</p><ul><li><code>idle</code> - (Optional) Idle timeout. An idle timeout bounds the amount of time that a connection may be idle.</li><li><code>per_request</code> - (Optional) Per request timeout.</li></ul><p>The <code>idle</code> and <code>per_request</code> objects support the following:</p><ul><li><code>unit</code> - (Required) Unit of time. Valid values: <code>ms</code>, <code>s</code>.</li><li><code>value</code> - (Required) Number of time units. Minimum value of <code>0</code>.</li></ul><p>The <code>per_retry_timeout</code> object supports the following:</p><ul><li><code>unit</code> - (Required) Retry unit. Valid values: <code>ms</code>, <code>s</code>.</li><li><code>value</code> - (Required) Retry value.</li></ul><p>The <code>weighted_target</code> object supports the following:</p><ul><li><code>virtual_node</code> - (Required) Virtual node to associate with the weighted target. Must be between 1 and 255 characters in length.</li><li><code>weight</code> - (Required) Relative weight of the weighted target. An integer between 0 and 100.</li><li><code>port</code> - (Optional) The targeted port of the weighted object.</li></ul><p>The <code>header</code> object supports the following:</p><ul><li><code>name</code> - (Required) Name for the HTTP header in the client request that will be matched on.</li><li><code>invert</code> - (Optional) If <code>true</code>, the match is on the opposite of the <code>match</code> method and value. Default is <code>false</code>.</li><li><code>match</code> - (Optional) Method and value to match the header value sent with a request. Specify one match method.</li></ul><p>The <code>header</code>'s <code>match</code> object supports the following:</p><ul><li><code>exact</code> - (Optional) Header value sent by the client must match the specified value exactly.</li><li><code>prefix</code> - (Optional) Header value sent by the client must begin with the specified characters.</li><li><code>port</code>- (Optional) The port number to match from the request.</li><li><code>range</code>- (Optional) Object that specifies the range of numbers that the header value sent by the client must be included in.</li><li><code>regex</code> - (Optional) Header value sent by the client must include the specified characters.</li><li><code>suffix</code> - (Optional) Header value sent by the client must end with the specified characters.</li></ul><p>The <code>range</code> object supports the following:</p><ul><li><code>end</code> - (Required) End of the range.</li><li><code>start</code> - (Requited) Start of the range.</li></ul>", "attribute-reference": "<h2 id=\"attribute-reference\">Attribute Reference</h2><p>This resource exports the following attributes in addition to the arguments above:</p><ul><li><code>id</code> - ID of the route.</li><li><code>arn</code> - ARN of the route.</li><li><code>created_date</code> - Creation date of the route.</li><li><code>last_updated_date</code> - Last update date of the route.</li><li><code>resource_owner</code> - Resource owner's AWS account ID.</li><li><code>tags_all</code> - Map of tags assigned to the resource, including those inherited from the provider <a href=\"https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block\"><code>default_tags</code> configuration block</a>.</li></ul>", "import": "<h2 id=\"import\">Import</h2><p>In Terraform v1.5.0 and later, use an <a href=\"https://developer.hashicorp.com/terraform/language/import\"><code>import</code> block</a> to import App Mesh virtual routes using <code>mesh_name</code> and <code>virtual_router_name</code> together with the route's <code>name</code>. For example:</p><p><code>terraformimport {  to = aws_appmesh_route.serviceb  id = \"simpleapp/serviceB/serviceB-route\"}</code></p><p>Using <code>terraform import</code>, import App Mesh virtual routes using <code>mesh_name</code> and <code>virtual_router_name</code> together with the route's <code>name</code>. For example:</p><p><code>console% terraform import aws_appmesh_route.serviceb simpleapp/serviceB/serviceB-route</code></p>", "description": "<h1 id=\"resource-aws_appmesh_route\">Resource: aws_appmesh_route</h1><p>Provides an AWS App Mesh route resource.</p>"}