{"resource-aws-s3-access-point": "<h1 id=\"resource-aws_s3_access_point\">Resource: aws_s3_access_point</h1><p>Provides a resource to manage an S3 Access Point.</p><p>~&gt; <strong>NOTE on Access Points and Access Point Policies:</strong> Terraform provides both a standalone <a href=\"s3control_access_point_policy.html\">Access Point Policy</a> resource and an Access Point resource with a resource policy defined in-line. You cannot use an Access Point with in-line resource policy in conjunction with an Access Point Policy resource. Doing so will cause a conflict of policies and will overwrite the access point's resource policy.</p><p>-&gt; Advanced usage: To use a custom API endpoint for this Terraform resource, use the <a href=\"/docs/providers/aws/index.html#s3control\"><code>s3control</code> endpoint provider configuration</a>, not the <code>s3</code> endpoint provider configuration.</p>", "example-usage": "<h2 id=\"example-usage\">Example Usage</h2><h3 id=\"aws-partition-bucket\">AWS Partition Bucket</h3><p>terraform<br />resource \"aws_s3_bucket\" \"example\" {<br />  bucket = \"example\"<br />}</p><p>resource \"aws_s3_access_point\" \"example\" {<br />  bucket = aws_s3_bucket.example.id<br />  name   = \"example\"<br />}<br /></p><h3 id=\"s3-on-outposts-bucket\">S3 on Outposts Bucket</h3><p>terraform<br />resource \"aws_s3control_bucket\" \"example\" {<br />  bucket = \"example\"<br />}</p><p>resource \"aws_s3_access_point\" \"example\" {<br />  bucket = aws_s3control_bucket.example.arn<br />  name   = \"example\"</p><p># VPC must be specified for S3 on Outposts<br />  vpc_configuration {<br />    vpc_id = aws_vpc.example.id<br />  }<br />}</p><p>resource \"aws_vpc\" \"example\" {<br />  cidr_block = \"10.0.0.0/16\"<br />}<br /></p>", "argument-reference": "<h2 id=\"argument-reference\">Argument Reference</h2><p>The following arguments are required:</p><ul><li><code>bucket</code> - (Required) Name of an AWS Partition S3 Bucket or the ARN of S3 on Outposts Bucket that you want to associate this access point with.</li><li><code>name</code> - (Required) Name you want to assign to this access point.</li></ul><p>The following arguments are optional:</p><ul><li><code>account_id</code> - (Optional) AWS account ID for the owner of the bucket for which you want to create an access point. Defaults to automatically determined account ID of the Terraform AWS provider.</li><li><code>bucket_account_id</code> - (Optional) AWS account ID associated with the S3 bucket associated with this access point.</li><li><code>policy</code> - (Optional) Valid JSON document that specifies the policy that you want to apply to this access point. Removing <code>policy</code> from your configuration or setting <code>policy</code> to null or an empty string (i.e., <code>policy = \"\"</code>) <em>will not</em> delete the policy since it could have been set by <code>aws_s3control_access_point_policy</code>. To remove the <code>policy</code>, set it to <code>\"{}\"</code> (an empty JSON document).</li><li><code>public_access_block_configuration</code> - (Optional) Configuration block to manage the <code>PublicAccessBlock</code> configuration that you want to apply to this Amazon S3 bucket. You can enable the configuration options in any combination. Detailed below.</li><li><code>vpc_configuration</code> - (Optional) Configuration block to restrict access to this access point to requests from the specified Virtual Private Cloud (VPC). Required for S3 on Outposts. Detailed below.</li></ul><h3 id=\"public_access_block_configuration-configuration-block\">public_access_block_configuration Configuration Block</h3><p>The following arguments are optional:</p><ul><li><code>block_public_acls</code> - (Optional) Whether Amazon S3 should block public ACLs for buckets in this account. Defaults to <code>true</code>. Enabling this setting does not affect existing policies or ACLs. When set to <code>true</code> causes the following behavior:<ul><li>PUT Bucket acl and PUT Object acl calls fail if the specified ACL is public.</li><li>PUT Object calls fail if the request includes a public ACL.</li><li>PUT Bucket calls fail if the request includes a public ACL.</li></ul></li><li><code>block_public_policy</code> - (Optional) Whether Amazon S3 should block public bucket policies for buckets in this account. Defaults to <code>true</code>. Enabling this setting does not affect existing bucket policies. When set to <code>true</code> causes Amazon S3 to:<ul><li>Reject calls to PUT Bucket policy if the specified bucket policy allows public access.</li></ul></li><li><code>ignore_public_acls</code> - (Optional) Whether Amazon S3 should ignore public ACLs for buckets in this account. Defaults to <code>true</code>. Enabling this setting does not affect the persistence of any existing ACLs and doesn't prevent new public ACLs from being set. When set to <code>true</code> causes Amazon S3 to:<ul><li>Ignore all public ACLs on buckets in this account and any objects that they contain.</li></ul></li><li><code>restrict_public_buckets</code> - (Optional) Whether Amazon S3 should restrict public bucket policies for buckets in this account. Defaults to <code>true</code>. Enabling this setting does not affect previously stored bucket policies, except that public and cross-account access within any public bucket policy, including non-public delegation to specific accounts, is blocked. When set to <code>true</code>:<ul><li>Only the bucket owner and AWS Services can access buckets with public policies.</li></ul></li></ul><h3 id=\"vpc_configuration-configuration-block\">vpc_configuration Configuration Block</h3><p>The following arguments are required:</p><ul><li><code>vpc_id</code> - (Required)  This access point will only allow connections from the specified VPC ID.</li></ul>", "attribute-reference": "<h2 id=\"attribute-reference\">Attribute Reference</h2><p>This resource exports the following attributes in addition to the arguments above:</p><ul><li><code>alias</code> - Alias of the S3 Access Point.</li><li><code>arn</code> - ARN of the S3 Access Point.</li><li><code>domain_name</code> - DNS domain name of the S3 Access Point in the format <em><code>name</code></em>-<em><code>account_id</code></em>.s3-accesspoint.<em>region</em>.amazonaws.com.<br />Note: S3 access points only support secure access by HTTPS. HTTP isn't supported.</li><li><code>endpoints</code> - VPC endpoints for the S3 Access Point.</li><li><code>has_public_access_policy</code> - Indicates whether this access point currently has a policy that allows public access.</li><li><code>id</code> - For Access Point of an AWS Partition S3 Bucket, the AWS account ID and access point name separated by a colon (<code>:</code>). For S3 on Outposts Bucket, the ARN of the Access Point.</li><li><code>network_origin</code> - Indicates whether this access point allows access from the public Internet. Values are <code>VPC</code> (the access point doesn't allow access from the public Internet) and <code>Internet</code> (the access point allows access from the public Internet, subject to the access point and bucket access policies).</li></ul>", "import": "<h2 id=\"import\">Import</h2><p>In Terraform v1.5.0 and later, use an <a href=\"https://developer.hashicorp.com/terraform/language/import\"><code>import</code> block</a> to import this resource using the <code>account_id</code> and <code>name</code> separated by a colon (<code>:</code>) for Access Points associated with an AWS Partition S3 Bucket or the ARN for Access Points associated with an S3 on Outposts Bucket. For example:</p><p>Import using the <code>account_id</code> and <code>name</code> separated by a colon (<code>:</code>) for Access Points associated with an AWS Partition S3 Bucket:</p><p><code>terraformimport {  to = aws_s3_access_point.example  id = \"123456789012:example\"}</code></p><p>Import using the ARN for Access Points associated with an S3 on Outposts Bucket:</p><p><code>terraformimport {  to = aws_s3_access_point.example  id = \"arn:aws:s3-outposts:us-east-1:123456789012:outpost/op-1234567890123456/accesspoint/example\"}</code></p><p><strong>Using <code>terraform import</code> to import.</strong> For example:</p><p>Import using the <code>account_id</code> and <code>name</code> separated by a colon (<code>:</code>) for Access Points associated with an AWS Partition S3 Bucket:</p><p><code>console% terraform import aws_s3_access_point.example 123456789012:example</code></p><p>Import using the ARN for Access Points associated with an S3 on Outposts Bucket:</p><p><code>console% terraform import aws_s3_access_point.example arn:aws:s3-outposts:us-east-1:123456789012:outpost/op-1234567890123456/accesspoint/example</code></p>", "description": "<h1 id=\"resource-aws_s3_access_point\">Resource: aws_s3_access_point</h1><p>Provides a resource to manage an S3 Access Point.</p><p>~&gt; <strong>NOTE on Access Points and Access Point Policies:</strong> Terraform provides both a standalone <a href=\"s3control_access_point_policy.html\">Access Point Policy</a> resource and an Access Point resource with a resource policy defined in-line. You cannot use an Access Point with in-line resource policy in conjunction with an Access Point Policy resource. Doing so will cause a conflict of policies and will overwrite the access point's resource policy.</p><p>-&gt; Advanced usage: To use a custom API endpoint for this Terraform resource, use the <a href=\"/docs/providers/aws/index.html#s3control\"><code>s3control</code> endpoint provider configuration</a>, not the <code>s3</code> endpoint provider configuration.</p>"}