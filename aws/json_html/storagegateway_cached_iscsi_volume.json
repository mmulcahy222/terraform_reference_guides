{"resource-aws-storagegateway-cached-iscsi-volume": "<h1 id=\"resource-aws_storagegateway_cached_iscsi_volume\">Resource: aws_storagegateway_cached_iscsi_volume</h1><p>Manages an AWS Storage Gateway cached iSCSI volume.</p><p>~&gt; <strong>NOTE:</strong> The gateway must have cache added (e.g., via the <a href=\"/docs/providers/aws/r/storagegateway_cache.html\"><code>aws_storagegateway_cache</code></a> resource) before creating volumes otherwise the Storage Gateway API will return an error.</p><p>~&gt; <strong>NOTE:</strong> The gateway must have an upload buffer added (e.g., via the <a href=\"/docs/providers/aws/r/storagegateway_upload_buffer.html\"><code>aws_storagegateway_upload_buffer</code></a> resource) before the volume is operational to clients, however the Storage Gateway API will allow volume creation without error in that case and return volume status as <code>UPLOAD BUFFER NOT CONFIGURED</code>.</p>", "example-usage": "<h2 id=\"example-usage\">Example Usage</h2><p>~&gt; <strong>NOTE:</strong> These examples are referencing the <a href=\"/docs/providers/aws/r/storagegateway_cache.html\"><code>aws_storagegateway_cache</code></a> resource <code>gateway_arn</code> attribute to ensure Terraform properly adds cache before creating the volume. If you are not using this method, you may need to declare an expicit dependency (e.g., via <code>depends_on = [aws_storagegateway_cache.example]</code>) to ensure proper ordering.</p><h3 id=\"create-empty-cached-iscsi-volume\">Create Empty Cached iSCSI Volume</h3><p><code>terraformresource \"aws_storagegateway_cached_iscsi_volume\" \"example\" {  gateway_arn          = aws_storagegateway_cache.example.gateway_arn  network_interface_id = aws_instance.example.private_ip  target_name          = \"example\"  volume_size_in_bytes = 5368709120 # 5 GB}</code></p><h3 id=\"create-cached-iscsi-volume-from-snapshot\">Create Cached iSCSI Volume From Snapshot</h3><p><code>terraformresource \"aws_storagegateway_cached_iscsi_volume\" \"example\" {  gateway_arn          = aws_storagegateway_cache.example.gateway_arn  network_interface_id = aws_instance.example.private_ip  snapshot_id          = aws_ebs_snapshot.example.id  target_name          = \"example\"  volume_size_in_bytes = aws_ebs_snapshot.example.volume_size * 1024 * 1024 * 1024}</code></p><h3 id=\"create-cached-iscsi-volume-from-source-volume\">Create Cached iSCSI Volume From Source Volume</h3><p><code>terraformresource \"aws_storagegateway_cached_iscsi_volume\" \"example\" {  gateway_arn          = aws_storagegateway_cache.example.gateway_arn  network_interface_id = aws_instance.example.private_ip  source_volume_arn    = aws_storagegateway_cached_iscsi_volume.existing.arn  target_name          = \"example\"  volume_size_in_bytes = aws_storagegateway_cached_iscsi_volume.existing.volume_size_in_bytes}</code></p>", "argument-reference": "<h2 id=\"argument-reference\">Argument Reference</h2><p>This resource supports the following arguments:</p><ul><li><code>gateway_arn</code> - (Required) The Amazon Resource Name (ARN) of the gateway.</li><li><code>network_interface_id</code> - (Required) The network interface of the gateway on which to expose the iSCSI target. Only IPv4 addresses are accepted.</li><li><code>target_name</code> - (Required) The name of the iSCSI target used by initiators to connect to the target and as a suffix for the target ARN. The target name must be unique across all volumes of a gateway.</li><li><code>volume_size_in_bytes</code> - (Required) The size of the volume in bytes.</li><li><code>snapshot_id</code> - (Optional) The snapshot ID of the snapshot to restore as the new cached volumeE.g., <code>snap-1122aabb</code>.</li><li><code>source_volume_arn</code> - (Optional) The ARN for an existing volume. Specifying this ARN makes the new volume into an exact copy of the specified existing volume's latest recovery point. The <code>volume_size_in_bytes</code> value for this new volume must be equal to or larger than the size of the existing volume, in bytes.</li><li><code>kms_encrypted</code> - (Optional) Set to <code>true</code> to use Amazon S3 server side encryption with your own AWS KMS key, or <code>false</code> to use a key managed by Amazon S3.</li><li><code>kms_key</code> - (Optional) The Amazon Resource Name (ARN) of the AWS KMS key used for Amazon S3 server side encryption. Is required when <code>kms_encrypted</code> is set.</li><li><code>tags</code> - (Optional) Key-value map of resource tags. If configured with a provider <a href=\"https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block\"><code>default_tags</code> configuration block</a> present, tags with matching keys will overwrite those defined at the provider-level.</li></ul>", "attribute-reference": "<h2 id=\"attribute-reference\">Attribute Reference</h2><p>This resource exports the following attributes in addition to the arguments above:</p><ul><li><code>arn</code> - Volume Amazon Resource Name (ARN), e.g., <code>arn:aws:storagegateway:us-east-1:123456789012:gateway/sgw-12345678/volume/vol-12345678</code>.</li><li><code>chap_enabled</code> - Whether mutual CHAP is enabled for the iSCSI target.</li><li><code>id</code> - Volume Amazon Resource Name (ARN), e.g., <code>arn:aws:storagegateway:us-east-1:123456789012:gateway/sgw-12345678/volume/vol-12345678</code>.</li><li><code>lun_number</code> - Logical disk number.</li><li><code>network_interface_port</code> - The port used to communicate with iSCSI targets.</li><li><code>tags_all</code> - A map of tags assigned to the resource, including those inherited from the provider <a href=\"https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block\"><code>default_tags</code> configuration block</a>.</li><li><code>target_arn</code> - Target Amazon Resource Name (ARN), e.g., <code>arn:aws:storagegateway:us-east-1:123456789012:gateway/sgw-12345678/target/iqn.1997-05.com.amazon:TargetName</code>.</li><li><code>volume_arn</code> - Volume Amazon Resource Name (ARN), e.g., <code>arn:aws:storagegateway:us-east-1:123456789012:gateway/sgw-12345678/volume/vol-12345678</code>.</li><li><code>volume_id</code> - Volume ID, e.g., <code>vol-12345678</code>.</li></ul>", "import": "<h2 id=\"import\">Import</h2><p>In Terraform v1.5.0 and later, use an <a href=\"https://developer.hashicorp.com/terraform/language/import\"><code>import</code> block</a> to import <code>aws_storagegateway_cached_iscsi_volume</code> using the volume Amazon Resource Name (ARN). For example:</p><p><code>terraformimport {  to = aws_storagegateway_cached_iscsi_volume.example  id = \"arn:aws:storagegateway:us-east-1:123456789012:gateway/sgw-12345678/volume/vol-12345678\"}</code></p><p>Using <code>terraform import</code>, import <code>aws_storagegateway_cached_iscsi_volume</code> using the volume Amazon Resource Name (ARN). For example:</p><p><code>console% terraform import aws_storagegateway_cached_iscsi_volume.example arn:aws:storagegateway:us-east-1:123456789012:gateway/sgw-12345678/volume/vol-12345678</code></p>", "description": "<h1 id=\"resource-aws_storagegateway_cached_iscsi_volume\">Resource: aws_storagegateway_cached_iscsi_volume</h1><p>Manages an AWS Storage Gateway cached iSCSI volume.</p><p>~&gt; <strong>NOTE:</strong> The gateway must have cache added (e.g., via the <a href=\"/docs/providers/aws/r/storagegateway_cache.html\"><code>aws_storagegateway_cache</code></a> resource) before creating volumes otherwise the Storage Gateway API will return an error.</p><p>~&gt; <strong>NOTE:</strong> The gateway must have an upload buffer added (e.g., via the <a href=\"/docs/providers/aws/r/storagegateway_upload_buffer.html\"><code>aws_storagegateway_upload_buffer</code></a> resource) before the volume is operational to clients, however the Storage Gateway API will allow volume creation without error in that case and return volume status as <code>UPLOAD BUFFER NOT CONFIGURED</code>.</p>"}