{"resource-aws-config-configuration-recorder-status": "<h1 id=\"resource-aws_config_configuration_recorder_status\">Resource: aws_config_configuration_recorder_status</h1><p>Manages status (recording / stopped) of an AWS Config Configuration Recorder.</p><p>~&gt; <strong>Note:</strong> Starting Configuration Recorder requires a <a href=\"/docs/providers/aws/r/config_delivery_channel.html\">Delivery Channel</a> to be present. Use of <code>depends_on</code> (as shown below) is recommended to avoid race conditions.</p>", "example-usage": "<h2 id=\"example-usage\">Example Usage</h2><p>terraform<br />resource \"aws_config_configuration_recorder_status\" \"foo\" {<br />  name       = aws_config_configuration_recorder.foo.name<br />  is_enabled = true<br />  depends_on = [aws_config_delivery_channel.foo]<br />}</p><br /><p>resource \"aws_iam_role_policy_attachment\" \"a\" {<br />  role       = aws_iam_role.r.name<br />  policy_arn = \"arn:aws:iam::aws:policy/service-role/AWS_ConfigRole\"<br />}</p><br /><p>resource \"aws_s3_bucket\" \"b\" {<br />  bucket = \"awsconfig-example\"<br />}</p><br /><p>resource \"aws_config_delivery_channel\" \"foo\" {<br />  name           = \"example\"<br />  s3_bucket_name = aws_s3_bucket.b.bucket<br />}</p><br /><p>resource \"aws_config_configuration_recorder\" \"foo\" {<br />  name     = \"example\"<br />  role_arn = aws_iam_role.r.arn<br />}</p><br /><p>data \"aws_iam_policy_document\" \"assume_role\" {<br />  statement {<br />    effect = \"Allow\"</p><br /><pre><code>principals {<br />  type        = \"Service\"<br />  identifiers = [\"config.amazonaws.com\"]<br />}<br /><br />actions = [\"sts:AssumeRole\"]<br /></code></pre><br /><p>}<br />}</p><br /><p>resource \"aws_iam_role\" \"r\" {<br />  name               = \"example-awsconfig\"<br />  assume_role_policy = data.aws_iam_policy_document.assume_role.json<br />}</p><br /><p>data \"aws_iam_policy_document\" \"p\" {<br />  statement {<br />    effect  = \"Allow\"<br />    actions = [\"s3:<em>\"]<br />    resources = [<br />      aws_s3_bucket.b.arn,<br />      \"${aws_s3_bucket.b.arn}/</em>\"<br />    ]<br />  }<br />}</p><br /><p>resource \"aws_iam_role_policy\" \"p\" {<br />  name   = \"awsconfig-example\"<br />  role   = aws_iam_role.r.id<br />  policy = data.aws_iam_policy_document.p.json<br />}</p><br />", "argument-reference": "<h2 id=\"argument-reference\">Argument Reference</h2><p>This resource supports the following arguments:</p><ul><li><code>name</code> - (Required) The name of the recorder</li><li><code>is_enabled</code> - (Required) Whether the configuration recorder should be enabled or disabled.</li></ul>", "attribute-reference": "<h2 id=\"attribute-reference\">Attribute Reference</h2><p>This resource exports no additional attributes.</p>", "import": "<h2 id=\"import\">Import</h2><p>In Terraform v1.5.0 and later, use an <a href=\"https://developer.hashicorp.com/terraform/language/import\"><code>import</code> block</a> to import Configuration Recorder Status using the name of the Configuration Recorder. For example:</p><p>terraform<br />import {<br />  to = aws_config_configuration_recorder_status.foo<br />  id = \"example\"<br />}</p><p>Using <code>terraform import</code>, import Configuration Recorder Status using the name of the Configuration Recorder. For example:</p><p>console<br />% terraform import aws_config_configuration_recorder_status.foo example</p>", "description": "<h1 id=\"resource-aws_config_configuration_recorder_status\">Resource: aws_config_configuration_recorder_status</h1><p>Manages status (recording / stopped) of an AWS Config Configuration Recorder.</p><p>~&gt; <strong>Note:</strong> Starting Configuration Recorder requires a <a href=\"/docs/providers/aws/r/config_delivery_channel.html\">Delivery Channel</a> to be present. Use of <code>depends_on</code> (as shown below) is recommended to avoid race conditions.</p>"}