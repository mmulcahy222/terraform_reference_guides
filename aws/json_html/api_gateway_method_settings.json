{"resource-aws-api-gateway-method-settings": "<h1 id=\"resource-aws_api_gateway_method_settings\">Resource: aws_api_gateway_method_settings</h1><p>Manages API Gateway Stage Method Settings. For example, CloudWatch logging and metrics.</p><p>~&gt; <strong>NOTE:</strong> We recommend using this resource in conjunction with the <a href=\"api_gateway_stage.html\"><code>aws_api_gateway_stage</code> resource</a> instead of a stage managed by the <a href=\"api_gateway_deployment.html\"><code>aws_api_gateway_deployment</code> resource</a> optional <code>stage_name</code> argument. Stages managed by the <code>aws_api_gateway_deployment</code> resource are recreated on redeployment and this resource will require a second apply to recreate the method settings.</p>", "example-usage": "<h2 id=\"example-usage\">Example Usage</h2><h3 id=\"end-to-end\">End-to-end</h3><br /><p>An end-to-end example of a REST API configured with OpenAPI can be found in the <a href=\"https://github.com/hashicorp/terraform-provider-aws/tree/main/examples/api-gateway-rest-api-openapi\"><code>/examples/api-gateway-rest-api-openapi</code> directory within the GitHub repository</a>.</p><br /><h3 id=\"basic-usage\">Basic Usage</h3><br /><p>terraform<br />resource \"aws_api_gateway_rest_api\" \"example\" {<br />  body = jsonencode({<br />    openapi = \"3.0.1\"<br />    info = {<br />      title   = \"example\"<br />      version = \"1.0\"<br />    }<br />    paths = {<br />      \"/path1\" = {<br />        get = {<br />          x-amazon-apigateway-integration = {<br />            httpMethod           = \"GET\"<br />            payloadFormatVersion = \"1.0\"<br />            type                 = \"HTTP_PROXY\"<br />            uri                  = \"https://ip-ranges.amazonaws.com/ip-ranges.json\"<br />          }<br />        }<br />      }<br />    }<br />  })</p><br /><p>name = \"example\"<br />}</p><br /><p>resource \"aws_api_gateway_deployment\" \"example\" {<br />  rest_api_id = aws_api_gateway_rest_api.example.id</p><br /><p>triggers = {<br />    redeployment = sha1(jsonencode(aws_api_gateway_rest_api.example.body))<br />  }</p><br /><p>lifecycle {<br />    create_before_destroy = true<br />  }<br />}</p><br /><p>resource \"aws_api_gateway_stage\" \"example\" {<br />  deployment_id = aws_api_gateway_deployment.example.id<br />  rest_api_id   = aws_api_gateway_rest_api.example.id<br />  stage_name    = \"example\"<br />}</p><br /><p>resource \"aws_api_gateway_method_settings\" \"all\" {<br />  rest_api_id = aws_api_gateway_rest_api.example.id<br />  stage_name  = aws_api_gateway_stage.example.stage_name<br />  method_path = \"<em>/</em>\"</p><br /><p>settings {<br />    metrics_enabled = true<br />    logging_level   = \"ERROR\"<br />  }<br />}</p><br /><p>resource \"aws_api_gateway_method_settings\" \"path_specific\" {<br />  rest_api_id = aws_api_gateway_rest_api.example.id<br />  stage_name  = aws_api_gateway_stage.example.stage_name<br />  method_path = \"path1/GET\"</p><br /><p>settings {<br />    metrics_enabled = true<br />    logging_level   = \"INFO\"<br />  }<br />}</p><br /><h3 id=\"cloudwatch-logging-and-tracing\">CloudWatch Logging and Tracing</h3><br /><p>The AWS Console API Gateway Editor displays multiple options for CloudWatch Logs that don't directly map to the options in the AWS API and Terraform. These examples show the <code>settings</code> blocks that are equivalent to the options the AWS Console gives for CloudWatch Logs.</p><br /><h4 id=\"off\">Off</h4><br /><p>terraform<br />resource \"aws_api_gateway_method_settings\" \"path_specific\" {<br />  rest_api_id = aws_api_gateway_rest_api.example.id<br />  stage_name  = aws_api_gateway_stage.example.stage_name<br />  method_path = \"path1/GET\"</p><br /><p>settings {<br />    logging_level = \"OFF\"<br />  }<br />}</p><br /><h4 id=\"errors-only\">Errors Only</h4><br /><p>terraform<br />resource \"aws_api_gateway_method_settings\" \"path_specific\" {<br />  rest_api_id = aws_api_gateway_rest_api.example.id<br />  stage_name  = aws_api_gateway_stage.example.stage_name<br />  method_path = \"path1/GET\"</p><br /><p>settings {<br />    logging_level      = \"ERROR\"<br />    metrics_enabled    = true<br />    data_trace_enabled = false<br />  }<br />}</p><br /><h4 id=\"errors-and-info-logs\">Errors and Info Logs</h4><br /><p>terraform<br />resource \"aws_api_gateway_method_settings\" \"path_specific\" {<br />  rest_api_id = aws_api_gateway_rest_api.example.id<br />  stage_name  = aws_api_gateway_stage.example.stage_name<br />  method_path = \"path1/GET\"</p><br /><p>settings {<br />    logging_level      = \"INFO\"<br />    metrics_enabled    = true<br />    data_trace_enabled = false<br />  }<br />}</p><br /><h4 id=\"full-request-and-response-logs\">Full Request and Response Logs</h4><br /><p>terraform<br />resource \"aws_api_gateway_method_settings\" \"path_specific\" {<br />  rest_api_id = aws_api_gateway_rest_api.example.id<br />  stage_name  = aws_api_gateway_stage.example.stage_name<br />  method_path = \"path1/GET\"</p><br /><p>settings {<br />    logging_level      = \"INFO\"<br />    metrics_enabled    = true<br />    data_trace_enabled = true<br />  }<br />}</p><br />", "argument-reference": "<h2 id=\"argument-reference\">Argument Reference</h2><p>This resource supports the following arguments:</p><ul><li><code>rest_api_id</code> - (Required) ID of the REST API</li><li><code>stage_name</code> - (Required) Name of the stage</li><li><code>method_path</code> - (Required) Method path defined as <code>{resource_path}/{http_method}</code> for an individual method override, or <code>*/*</code> for overriding all methods in the stage. Ensure to trim any leading forward slashes in the path (e.g., <code>trimprefix(aws_api_gateway_resource.example.path, \"/\")</code>).</li><li><code>settings</code> - (Required) Settings block, see below.</li></ul><h3 id=\"settings\"><code>settings</code></h3><ul><li><code>metrics_enabled</code> - (Optional) Whether Amazon CloudWatch metrics are enabled for this method.</li><li><code>logging_level</code> - (Optional) Logging level for this method, which effects the log entries pushed to Amazon CloudWatch Logs. The available levels are <code>OFF</code>, <code>ERROR</code>, and <code>INFO</code>.</li><li><code>data_trace_enabled</code> - (Optional) Whether data trace logging is enabled for this method, which effects the log entries pushed to Amazon CloudWatch Logs.</li><li><code>throttling_burst_limit</code> - (Optional) Throttling burst limit. Default: <code>-1</code> (throttling disabled).</li><li><code>throttling_rate_limit</code> - (Optional) Throttling rate limit. Default: <code>-1</code> (throttling disabled).</li><li><code>caching_enabled</code> - (Optional) Whether responses should be cached and returned for requests. A cache cluster must be enabled on the stage for responses to be cached.</li><li><code>cache_ttl_in_seconds</code> - (Optional) Time to live (TTL), in seconds, for cached responses. The higher the TTL, the longer the response will be cached.</li><li><code>cache_data_encrypted</code> - (Optional) Whether the cached responses are encrypted.</li><li><code>require_authorization_for_cache_control</code> - (Optional) Whether authorization is required for a cache invalidation request.</li><li><code>unauthorized_cache_control_header_strategy</code> - (Optional) How to handle unauthorized requests for cache invalidation. The available values are <code>FAIL_WITH_403</code>, <code>SUCCEED_WITH_RESPONSE_HEADER</code>, <code>SUCCEED_WITHOUT_RESPONSE_HEADER</code>.</li></ul>", "attribute-reference": "<h2 id=\"attribute-reference\">Attribute Reference</h2><p>This resource exports no additional attributes.</p>", "import": "<h2 id=\"import\">Import</h2><p>In Terraform v1.5.0 and later, use an <a href=\"https://developer.hashicorp.com/terraform/language/import\"><code>import</code> block</a> to import <code>aws_api_gateway_method_settings</code> using <code>REST-API-ID/STAGE-NAME/METHOD-PATH</code>. For example:</p><p>terraform<br />import {<br />  to = aws_api_gateway_method_settings.example<br />  id = \"12345abcde/example/test/GET\"<br />}</p><p>Using <code>terraform import</code>, import <code>aws_api_gateway_method_settings</code> using <code>REST-API-ID/STAGE-NAME/METHOD-PATH</code>. For example:</p><p>console<br />% terraform import aws_api_gateway_method_settings.example 12345abcde/example/test/GET</p>", "description": "<h1 id=\"resource-aws_api_gateway_method_settings\">Resource: aws_api_gateway_method_settings</h1><p>Manages API Gateway Stage Method Settings. For example, CloudWatch logging and metrics.</p><p>~&gt; <strong>NOTE:</strong> We recommend using this resource in conjunction with the <a href=\"api_gateway_stage.html\"><code>aws_api_gateway_stage</code> resource</a> instead of a stage managed by the <a href=\"api_gateway_deployment.html\"><code>aws_api_gateway_deployment</code> resource</a> optional <code>stage_name</code> argument. Stages managed by the <code>aws_api_gateway_deployment</code> resource are recreated on redeployment and this resource will require a second apply to recreate the method settings.</p>"}