{"resource-aws-config-config-rule": "<h1 id=\"resource-aws_config_config_rule\">Resource: aws_config_config_rule</h1><p>Provides an AWS Config Rule.</p><p>~&gt; <strong>Note:</strong> Config Rule requires an existing <a href=\"/docs/providers/aws/r/config_configuration_recorder.html\">Configuration Recorder</a> to be present. Use of <code>depends_on</code> is recommended (as shown below) to avoid race conditions.</p>", "example-usage": "<h2 id=\"example-usage\">Example Usage</h2><h3 id=\"aws-managed-rules\">AWS Managed Rules</h3><p>AWS managed rules can be used by setting the source owner to <code>AWS</code> and the source identifier to the name of the managed rule. More information about AWS managed rules can be found in the <a href=\"https://docs.aws.amazon.com/config/latest/developerguide/evaluate-config_use-managed-rules.html\">AWS Config Developer Guide</a>.</p><p>terraform<br />resource \"aws_config_config_rule\" \"r\" {<br />  name = \"example\"</p><p>source {<br />    owner             = \"AWS\"<br />    source_identifier = \"S3_BUCKET_VERSIONING_ENABLED\"<br />  }</p><p>depends_on = [aws_config_configuration_recorder.foo]<br />}</p><p>resource \"aws_config_configuration_recorder\" \"foo\" {<br />  name     = \"example\"<br />  role_arn = aws_iam_role.r.arn<br />}</p><p>data \"aws_iam_policy_document\" \"assume_role\" {<br />  statement {<br />    effect = \"Allow\"</p><pre><code>principals {  type        = \"Service\"  identifiers = [\"config.amazonaws.com\"]}actions = [\"sts:AssumeRole\"]</code></pre><p>}<br />}</p><p>resource \"aws_iam_role\" \"r\" {<br />  name               = \"my-awsconfig-role\"<br />  assume_role_policy = data.aws_iam_policy_document.assume_role.json<br />}</p><p>data \"aws_iam_policy_document\" \"p\" {<br />  statement {<br />    effect    = \"Allow\"<br />    actions   = [\"config:Put<em>\"]<br />    resources = [\"</em>\"]<br />  }<br />}</p><p>resource \"aws_iam_role_policy\" \"p\" {<br />  name   = \"my-awsconfig-policy\"<br />  role   = aws_iam_role.r.id<br />  policy = data.aws_iam_policy_document.p.json<br />}<br /></p><h3 id=\"custom-rules\">Custom Rules</h3><p>Custom rules can be used by setting the source owner to <code>CUSTOM_LAMBDA</code> and the source identifier to the Amazon Resource Name (ARN) of the Lambda Function. The AWS Config service must have permissions to invoke the Lambda Function, e.g., via the <a href=\"/docs/providers/aws/r/lambda_permission.html\"><code>aws_lambda_permission</code> resource</a>. More information about custom rules can be found in the <a href=\"https://docs.aws.amazon.com/config/latest/developerguide/evaluate-config_develop-rules.html\">AWS Config Developer Guide</a>.</p><p>terraform<br />resource \"aws_config_configuration_recorder\" \"example\" {<br />  # ... other configuration ...<br />}</p><p>resource \"aws_lambda_function\" \"example\" {<br />  # ... other configuration ...<br />}</p><p>resource \"aws_lambda_permission\" \"example\" {<br />  action        = \"lambda:InvokeFunction\"<br />  function_name = aws_lambda_function.example.arn<br />  principal     = \"config.amazonaws.com\"<br />  statement_id  = \"AllowExecutionFromConfig\"<br />}</p><p>resource \"aws_config_config_rule\" \"example\" {<br />  # ... other configuration ...</p><p>source {<br />    owner             = \"CUSTOM_LAMBDA\"<br />    source_identifier = aws_lambda_function.example.arn<br />  }</p><p>depends_on = [<br />    aws_config_configuration_recorder.example,<br />    aws_lambda_permission.example,<br />  ]<br />}<br /></p><h3 id=\"custom-policies\">Custom Policies</h3><p>terraform<br />resource \"aws_config_config_rule\" \"example\" {<br />  name = \"example\"</p><p>source {<br />    owner = \"CUSTOM_POLICY\"</p><pre><code>source_detail {  message_type = \"ConfigurationItemChangeNotification\"}custom_policy_details {  policy_runtime = \"guard-2.x.x\"  policy_text    = &lt;&lt;EOF  rule tableisactive when      resourceType == \"AWS::DynamoDB::Table\" {      configuration.tableStatus == ['ACTIVE']  }  rule checkcompliance when      resourceType == \"AWS::DynamoDB::Table\"      tableisactive {          supplementaryConfiguration.ContinuousBackupsDescription.pointInTimeRecoveryDescription.pointInTimeRecoveryStatus == \"ENABLED\"  }</code></pre><p>EOF               <br />    }<br />  }<br />}<br /></p>", "argument-reference": "<h2 id=\"argument-reference\">Argument Reference</h2><p>This resource supports the following arguments:</p><ul><li><code>name</code> - (Required) The name of the rule</li><li><code>description</code> - (Optional) Description of the rule</li><li><code>input_parameters</code> - (Optional) A string in JSON format that is passed to the AWS Config rule Lambda function.</li><li><code>maximum_execution_frequency</code> - (Optional) The maximum frequency with which AWS Config runs evaluations for a rule.</li><li><code>scope</code> - (Optional) Scope defines which resources can trigger an evaluation for the rule. See <a href=\"#source\">Source</a> Below.</li><li><code>source</code> - (Required) Source specifies the rule owner, the rule identifier, and the notifications that cause the function to evaluate your AWS resources. See <a href=\"#scope\">Scope</a> Below.</li><li><code>tags</code> - (Optional) A map of tags to assign to the resource. If configured with a provider <a href=\"https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block\"><code>default_tags</code> configuration block</a> present, tags with matching keys will overwrite those defined at the provider-level.</li></ul><h3 id=\"scope\">Scope</h3><p>Defines which resources can trigger an evaluation for the rule.<br />If you do not specify a scope, evaluations are triggered when any resource in the recording group changes.</p><ul><li><code>compliance_resource_id</code> - (Optional) The IDs of the only AWS resource that you want to trigger an evaluation for the rule. If you specify a resource ID, you must specify one resource type for <code>compliance_resource_types</code>.</li><li><code>compliance_resource_types</code> - (Optional) A list of resource types of only those AWS resources that you want to trigger an evaluation for the ruleE.g., <code>AWS::EC2::Instance</code>. You can only specify one type if you also specify a resource ID for <code>compliance_resource_id</code>. See <a href=\"http://docs.aws.amazon.com/config/latest/APIReference/API_ResourceIdentifier.html#config-Type-ResourceIdentifier-resourceType\">relevant part of AWS Docs</a> for available types.</li><li><code>tag_key</code> - (Optional, Required if <code>tag_value</code> is specified) The tag key that is applied to only those AWS resources that you want you want to trigger an evaluation for the rule.</li><li><code>tag_value</code> - (Optional) The tag value applied to only those AWS resources that you want to trigger an evaluation for the rule.</li></ul><h3 id=\"source\">Source</h3><p>Provides the rule owner (AWS or customer), the rule identifier, and the notifications that cause the function to evaluate your AWS resources.</p><ul><li><code>owner</code> - (Required) Indicates whether AWS or the customer owns and manages the AWS Config rule. Valid values are <code>AWS</code>, <code>CUSTOM_LAMBDA</code> or <code>CUSTOM_POLICY</code>. For more information about managed rules, see the <a href=\"https://docs.aws.amazon.com/config/latest/developerguide/evaluate-config_use-managed-rules.html\">AWS Config Managed Rules documentation</a>. For more information about custom rules, see the <a href=\"https://docs.aws.amazon.com/config/latest/developerguide/evaluate-config_develop-rules.html\">AWS Config Custom Rules documentation</a>. Custom Lambda Functions require permissions to allow the AWS Config service to invoke them, e.g., via the <a href=\"/docs/providers/aws/r/lambda_permission.html\"><code>aws_lambda_permission</code> resource</a>.</li><li><code>source_identifier</code> - (Optional) For AWS Config managed rules, a predefined identifier, e.g <code>IAM_PASSWORD_POLICY</code>. For custom Lambda rules, the identifier is the ARN of the Lambda Function, such as <code>arn:aws:lambda:us-east-1:123456789012:function:custom_rule_name</code> or the <a href=\"/docs/providers/aws/r/lambda_function.html#arn\"><code>arn</code> attribute of the <code>aws_lambda_function</code> resource</a>.</li><li><code>source_detail</code> - (Optional) Provides the source and type of the event that causes AWS Config to evaluate your AWS resources. Only valid if <code>owner</code> is <code>CUSTOM_LAMBDA</code> or <code>CUSTOM_POLICY</code>. See <a href=\"#source-detail\">Source Detail</a> Below.</li><li><code>custom_policy_details</code> - (Optional) Provides the runtime system, policy definition, and whether debug logging is enabled. Required when owner is set to <code>CUSTOM_POLICY</code>. See <a href=\"#custom-policy-details\">Custom Policy Details</a> Below.</li></ul><h4 id=\"source-detail\">Source Detail</h4><ul><li><code>event_source</code> - (Optional) The source of the event, such as an AWS service, that triggers AWS Config to evaluate your AWSresources. This defaults to <code>aws.config</code> and is the only valid value.</li><li><code>maximum_execution_frequency</code> - (Optional) The frequency that you want AWS Config to run evaluations for a rule that istriggered periodically. If specified, requires <code>message_type</code> to be <code>ScheduledNotification</code>.</li><li><code>message_type</code> - (Optional) The type of notification that triggers AWS Config to run an evaluation for a rule. You canspecify the following notification types:<ul><li><code>ConfigurationItemChangeNotification</code> - Triggers an evaluation when AWS Config delivers a configuration item as a result of a resource change.</li><li><code>OversizedConfigurationItemChangeNotification</code> - Triggers an evaluation when AWS Config delivers an oversized configuration item. AWS Config may generate this notification type when a resource changes and the notification exceeds the maximum size allowed by Amazon SNS.</li><li><code>ScheduledNotification</code> - Triggers a periodic evaluation at the frequency specified for <code>maximum_execution_frequency</code>.</li><li><code>ConfigurationSnapshotDeliveryCompleted</code> - Triggers a periodic evaluation when AWS Config delivers a configuration snapshot.</li></ul></li></ul><h4 id=\"custom-policy-details\">Custom Policy Details</h4><ul><li><code>enable_debug_log_delivery</code> - (Optional) The boolean expression for enabling debug logging for your Config Custom Policy rule. The default value is <code>false</code>.</li><li><code>policy_runtime</code> - (Required) The runtime system for your Config Custom Policy rule. Guard is a policy-as-code language that allows you to write policies that are enforced by Config Custom Policy rules. For more information about Guard, see the <a href=\"https://github.com/aws-cloudformation/cloudformation-guard\">Guard GitHub Repository</a>.</li><li><code>policy_text</code> - (Required) The policy definition containing the logic for your Config Custom Policy rule.</li></ul>", "attribute-reference": "<h2 id=\"attribute-reference\">Attribute Reference</h2><p>This resource exports the following attributes in addition to the arguments above:</p><ul><li><code>arn</code> - The ARN of the config rule</li><li><code>rule_id</code> - The ID of the config rule</li><li><code>tags_all</code> - A map of tags assigned to the resource, including those inherited from the provider <a href=\"https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block\"><code>default_tags</code> configuration block</a>.</li></ul>", "import": "<h2 id=\"import\">Import</h2><p>In Terraform v1.5.0 and later, use an <a href=\"https://developer.hashicorp.com/terraform/language/import\"><code>import</code> block</a> to import Config Rule using the name. For example:</p><p><code>terraformimport {  to = aws_config_config_rule.foo  id = \"example\"}</code></p><p>Using <code>terraform import</code>, import Config Rule using the name. For example:</p><p><code>console% terraform import aws_config_config_rule.foo example</code></p>", "description": "<h1 id=\"resource-aws_config_config_rule\">Resource: aws_config_config_rule</h1><p>Provides an AWS Config Rule.</p><p>~&gt; <strong>Note:</strong> Config Rule requires an existing <a href=\"/docs/providers/aws/r/config_configuration_recorder.html\">Configuration Recorder</a> to be present. Use of <code>depends_on</code> is recommended (as shown below) to avoid race conditions.</p>"}