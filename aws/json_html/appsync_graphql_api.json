{"resource-aws-appsync-graphql-api": "<h1 id=\"resource-aws_appsync_graphql_api\">Resource: aws_appsync_graphql_api</h1><p>Provides an AppSync GraphQL API.</p>", "example-usage": "<h2 id=\"example-usage\">Example Usage</h2><h3 id=\"api-key-authentication\">API Key Authentication</h3><p><code>terraformresource \"aws_appsync_graphql_api\" \"example\" {  authentication_type = \"API_KEY\"  name                = \"example\"}</code></p><h3 id=\"aws-iam-authentication\">AWS IAM Authentication</h3><p><code>terraformresource \"aws_appsync_graphql_api\" \"example\" {  authentication_type = \"AWS_IAM\"  name                = \"example\"}</code></p><h3 id=\"aws-cognito-user-pool-authentication\">AWS Cognito User Pool Authentication</h3><p>terraform<br />resource \"aws_appsync_graphql_api\" \"example\" {<br />  authentication_type = \"AMAZON_COGNITO_USER_POOLS\"<br />  name                = \"example\"</p><p>user_pool_config {<br />    aws_region     = data.aws_region.current.name<br />    default_action = \"DENY\"<br />    user_pool_id   = aws_cognito_user_pool.example.id<br />  }<br />}<br /></p><h3 id=\"openid-connect-authentication\">OpenID Connect Authentication</h3><p>terraform<br />resource \"aws_appsync_graphql_api\" \"example\" {<br />  authentication_type = \"OPENID_CONNECT\"<br />  name                = \"example\"</p><p>openid_connect_config {<br />    issuer = \"https://example.com\"<br />  }<br />}<br /></p><h3 id=\"aws-lambda-authorizer-authentication\">AWS Lambda Authorizer Authentication</h3><p>terraform<br />resource \"aws_appsync_graphql_api\" \"example\" {<br />  authentication_type = \"AWS_LAMBDA\"<br />  name                = \"example\"</p><p>lambda_authorizer_config {<br />    authorizer_uri = \"arn:aws:lambda:us-east-1:123456789012:function:custom_lambda_authorizer\"<br />  }<br />}</p><p>resource \"aws_lambda_permission\" \"appsync_lambda_authorizer\" {<br />  statement_id  = \"appsync_lambda_authorizer\"<br />  action        = \"lambda:InvokeFunction\"<br />  function_name = \"custom_lambda_authorizer\"<br />  principal     = \"appsync.amazonaws.com\"<br />  source_arn    = aws_appsync_graphql_api.example.arn<br />}<br /></p><h3 id=\"with-multiple-authentication-providers\">With Multiple Authentication Providers</h3><p>terraform<br />resource \"aws_appsync_graphql_api\" \"example\" {<br />  authentication_type = \"API_KEY\"<br />  name                = \"example\"</p><p>additional_authentication_provider {<br />    authentication_type = \"AWS_IAM\"<br />  }<br />}<br /></p><h3 id=\"with-schema\">With Schema</h3><p>terraform<br />resource \"aws_appsync_graphql_api\" \"example\" {<br />  authentication_type = \"AWS_IAM\"<br />  name                = \"example\"</p><p>schema = &lt;&lt;EOF<br />schema {<br />    query: Query<br />}<br />type Query {<br />  test: Int<br />}<br />EOF<br />}<br /></p><h3 id=\"enabling-logging\">Enabling Logging</h3><p>terraform<br />data \"aws_iam_policy_document\" \"assume_role\" {<br />  statement {<br />    effect = \"Allow\"</p><pre><code>principals {  type        = \"Service\"  identifiers = [\"appsync.amazonaws.com\"]}actions = [\"sts:AssumeRole\"]</code></pre><p>}<br />}</p><p>resource \"aws_iam_role\" \"example\" {<br />  name               = \"example\"<br />  assume_role_policy = data.aws_iam_policy_document.assume_role.json<br />}</p><p>resource \"aws_iam_role_policy_attachment\" \"example\" {<br />  policy_arn = \"arn:aws:iam::aws:policy/service-role/AWSAppSyncPushToCloudWatchLogs\"<br />  role       = aws_iam_role.example.name<br />}</p><p>resource \"aws_appsync_graphql_api\" \"example\" {<br />  # ... other configuration ...</p><p>log_config {<br />    cloudwatch_logs_role_arn = aws_iam_role.example.arn<br />    field_log_level          = \"ERROR\"<br />  }<br />}<br /></p><h3 id=\"associate-web-acl-v2\">Associate Web ACL (v2)</h3><p>terraform<br />resource \"aws_appsync_graphql_api\" \"example\" {<br />  authentication_type = \"API_KEY\"<br />  name                = \"example\"<br />}</p><p>resource \"aws_wafv2_web_acl_association\" \"example\" {<br />  resource_arn = aws_appsync_graphql_api.example.arn<br />  web_acl_arn  = aws_wafv2_web_acl.example.arn<br />}</p><p>resource \"aws_wafv2_web_acl\" \"example\" {<br />  name        = \"managed-rule-example\"<br />  description = \"Example of a managed rule.\"<br />  scope       = \"REGIONAL\"</p><p>default_action {<br />    allow {}<br />  }</p><p>rule {<br />    name     = \"rule-1\"<br />    priority = 1</p><pre><code>override_action {  block {}}statement {  managed_rule_group_statement {    name        = \"AWSManagedRulesCommonRuleSet\"    vendor_name = \"AWS\"  }}visibility_config {  cloudwatch_metrics_enabled = false  metric_name                = \"friendly-rule-metric-name\"  sampled_requests_enabled   = false}</code></pre><p>}</p><p>visibility_config {<br />    cloudwatch_metrics_enabled = false<br />    metric_name                = \"friendly-metric-name\"<br />    sampled_requests_enabled   = false<br />  }<br />}<br /></p>", "argument-reference": "<h2 id=\"argument-reference\">Argument Reference</h2><p>This resource supports the following arguments:</p><ul><li><code>authentication_type</code> - (Required) Authentication type. Valid values: <code>API_KEY</code>, <code>AWS_IAM</code>, <code>AMAZON_COGNITO_USER_POOLS</code>, <code>OPENID_CONNECT</code>, <code>AWS_LAMBDA</code></li><li><code>name</code> - (Required) User-supplied name for the GraphqlApi.</li><li><code>log_config</code> - (Optional) Nested argument containing logging configuration. Defined below.</li><li><code>openid_connect_config</code> - (Optional) Nested argument containing OpenID Connect configuration. Defined below.</li><li><code>user_pool_config</code> - (Optional) Amazon Cognito User Pool configuration. Defined below.</li><li><code>lambda_authorizer_config</code> - (Optional) Nested argument containing Lambda authorizer configuration. Defined below.</li><li><code>schema</code> - (Optional) Schema definition, in GraphQL schema language format. Terraform cannot perform drift detection of this configuration.</li><li><code>additional_authentication_provider</code> - (Optional) One or more additional authentication providers for the GraphqlApi. Defined below.</li><li><code>tags</code> - (Optional) Map of tags to assign to the resource. If configured with a provider <a href=\"https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block\"><code>default_tags</code> configuration block</a> present, tags with matching keys will overwrite those defined at the provider-level.</li><li><code>xray_enabled</code> - (Optional) Whether tracing with X-ray is enabled. Defaults to false.</li><li><code>visibility</code> - (Optional) Sets the value of the GraphQL API to public (<code>GLOBAL</code>) or private (<code>PRIVATE</code>). If no value is provided, the visibility will be set to <code>GLOBAL</code> by default. This value cannot be changed once the API has been created.</li></ul><h3 id=\"log_config\">log_config</h3><p>This argument supports the following arguments:</p><ul><li><code>cloudwatch_logs_role_arn</code> - (Required) Amazon Resource Name of the service role that AWS AppSync will assume to publish to Amazon CloudWatch logs in your account.</li><li><code>field_log_level</code> - (Required) Field logging level. Valid values: <code>ALL</code>, <code>ERROR</code>, <code>NONE</code>.</li><li><code>exclude_verbose_content</code> - (Optional) Set to TRUE to exclude sections that contain information such as headers, context, and evaluated mapping templates, regardless of logging  level. Valid values: <code>true</code>, <code>false</code>. Default value: <code>false</code></li></ul><h3 id=\"additional_authentication_provider\">additional_authentication_provider</h3><p>This argument supports the following arguments:</p><ul><li><code>authentication_type</code> - (Required) Authentication type. Valid values: <code>API_KEY</code>, <code>AWS_IAM</code>, <code>AMAZON_COGNITO_USER_POOLS</code>, <code>OPENID_CONNECT</code>, <code>AWS_LAMBDA</code></li><li><code>openid_connect_config</code> - (Optional) Nested argument containing OpenID Connect configuration. Defined below.</li><li><code>user_pool_config</code> - (Optional) Amazon Cognito User Pool configuration. Defined below.</li></ul><h3 id=\"openid_connect_config\">openid_connect_config</h3><p>This argument supports the following arguments:</p><ul><li><code>issuer</code> - (Required) Issuer for the OpenID Connect configuration. The issuer returned by discovery MUST exactly match the value of iss in the ID Token.</li><li><code>auth_ttl</code> - (Optional) Number of milliseconds a token is valid after being authenticated.</li><li><code>client_id</code> - (Optional) Client identifier of the Relying party at the OpenID identity provider. This identifier is typically obtained when the Relying party is registered with the OpenID identity provider. You can specify a regular expression so the AWS AppSync can validate against multiple client identifiers at a time.</li><li><code>iat_ttl</code> - (Optional) Number of milliseconds a token is valid after being issued to a user.</li></ul><h3 id=\"user_pool_config\">user_pool_config</h3><p>This argument supports the following arguments:</p><ul><li><code>default_action</code> - (Required only if Cognito is used as the default auth provider) Action that you want your GraphQL API to take when a request that uses Amazon Cognito User Pool authentication doesn't match the Amazon Cognito User Pool configuration. Valid: <code>ALLOW</code> and <code>DENY</code></li><li><code>user_pool_id</code> - (Required) User pool ID.</li><li><code>app_id_client_regex</code> - (Optional) Regular expression for validating the incoming Amazon Cognito User Pool app client ID.</li><li><code>aws_region</code> - (Optional) AWS region in which the user pool was created.</li></ul><h3 id=\"lambda_authorizer_config\">lambda_authorizer_config</h3><p>This argument supports the following arguments:</p><ul><li><code>authorizer_uri</code> - (Required) ARN of the Lambda function to be called for authorization. Note: This Lambda function must have a resource-based policy assigned to it, to allow <code>lambda:InvokeFunction</code> from service principal <code>appsync.amazonaws.com</code>.</li><li><code>authorizer_result_ttl_in_seconds</code> - (Optional) Number of seconds a response should be cached for. The default is 5 minutes (300 seconds). The Lambda function can override this by returning a <code>ttlOverride</code> key in its response. A value of 0 disables caching of responses. Minimum value of 0. Maximum value of 3600.</li><li><code>identity_validation_expression</code> - (Optional) Regular expression for validation of tokens before the Lambda function is called.</li></ul>", "attribute-reference": "<h2 id=\"attribute-reference\">Attribute Reference</h2><p>This resource exports the following attributes in addition to the arguments above:</p><ul><li><code>id</code> - API ID</li><li><code>arn</code> - ARN</li><li><code>tags_all</code> - Map of tags assigned to the resource, including those inherited from the provider <a href=\"https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block\"><code>default_tags</code> configuration block</a>.</li><li><code>uris</code> - Map of URIs associated with the APIE.g., <code>uris[\"GRAPHQL\"] = https://ID.appsync-api.REGION.amazonaws.com/graphql</code></li></ul>", "import": "<h2 id=\"import\">Import</h2><p>In Terraform v1.5.0 and later, use an <a href=\"https://developer.hashicorp.com/terraform/language/import\"><code>import</code> block</a> to import AppSync GraphQL API using the GraphQL API ID. For example:</p><p><code>terraformimport {  to = aws_appsync_graphql_api.example  id = \"0123456789\"}</code></p><p>Using <code>terraform import</code>, import AppSync GraphQL API using the GraphQL API ID. For example:</p><p><code>console% terraform import aws_appsync_graphql_api.example 0123456789</code></p>", "description": "<h1 id=\"resource-aws_appsync_graphql_api\">Resource: aws_appsync_graphql_api</h1><p>Provides an AppSync GraphQL API.</p>"}