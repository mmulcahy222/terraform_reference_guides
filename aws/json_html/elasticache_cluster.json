{"resource-aws-elasticache-cluster": "<h1 id=\"resource-aws_elasticache_cluster\">Resource: aws_elasticache_cluster</h1><p>Provides an ElastiCache Cluster resource, which manages either a<br /><a href=\"https://docs.aws.amazon.com/AmazonElastiCache/latest/mem-ug/WhatIs.html\">Memcached cluster</a>, a<br /><a href=\"https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/WhatIs.html\">single-node Redis instance</a>, or a<br />[read replica in a Redis (Cluster Mode Enabled) replication group].</p><p>For working with Redis (Cluster Mode Enabled) replication groups, see the<br /><a href=\"/docs/providers/aws/r/elasticache_replication_group.html\"><code>aws_elasticache_replication_group</code> resource</a>.</p><p>~&gt; <strong>Note:</strong> When you change an attribute, such as <code>num_cache_nodes</code>, by default<br />it is applied in the next maintenance window. Because of this, Terraform may report<br />a difference in its planning phase because the actual modification has not yet taken<br />place. You can use the <code>apply_immediately</code> flag to instruct the service to apply the<br />change immediately. Using <code>apply_immediately</code> can result in a brief downtime as the server reboots.<br />See the AWS Documentation on Modifying an ElastiCache Cache Cluster for<br /><a href=\"https://docs.aws.amazon.com/AmazonElastiCache/latest/mem-ug/Clusters.Modify.html\">ElastiCache for Memcached</a> or<br /><a href=\"https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/Clusters.Modify.html\">ElastiCache for Redis</a><br />for more information.</p><p>~&gt; <strong>Note:</strong> Any attribute changes that re-create the resource will be applied immediately, regardless of the value of <code>apply_immediately</code>.</p>", "example-usage": "<h2 id=\"example-usage\">Example Usage</h2><h3 id=\"memcached-cluster\">Memcached Cluster</h3><p><code>terraformresource \"aws_elasticache_cluster\" \"example\" {  cluster_id           = \"cluster-example\"  engine               = \"memcached\"  node_type            = \"cache.m4.large\"  num_cache_nodes      = 2  parameter_group_name = \"default.memcached1.4\"  port                 = 11211}</code></p><h3 id=\"redis-instance\">Redis Instance</h3><p><code>terraformresource \"aws_elasticache_cluster\" \"example\" {  cluster_id           = \"cluster-example\"  engine               = \"redis\"  node_type            = \"cache.m4.large\"  num_cache_nodes      = 1  parameter_group_name = \"default.redis3.2\"  engine_version       = \"3.2.10\"  port                 = 6379}</code></p><h3 id=\"redis-cluster-mode-disabled-read-replica-instance\">Redis Cluster Mode Disabled Read Replica Instance</h3><p>These inherit their settings from the replication group.</p><p><code>terraformresource \"aws_elasticache_cluster\" \"replica\" {  cluster_id           = \"cluster-example\"  replication_group_id = aws_elasticache_replication_group.example.id}</code></p><h3 id=\"redis-log-delivery-configuration\">Redis Log Delivery configuration</h3><p><code>terraformresource \"aws_elasticache_cluster\" \"test\" {  cluster_id        = \"mycluster\"  engine            = \"redis\"  node_type         = \"cache.t3.micro\"  num_cache_nodes   = 1  port              = 6379  apply_immediately = true  log_delivery_configuration {    destination      = aws_cloudwatch_log_group.example.name    destination_type = \"cloudwatch-logs\"    log_format       = \"text\"    log_type         = \"slow-log\"  }  log_delivery_configuration {    destination      = aws_kinesis_firehose_delivery_stream.example.name    destination_type = \"kinesis-firehose\"    log_format       = \"json\"    log_type         = \"engine-log\"  }}</code></p><h3 id=\"elasticache-cluster-in-outpost\">Elasticache Cluster in Outpost</h3><p>terraform<br />data \"aws_outposts_outposts\" \"example\" {}</p><p>data \"aws_outposts_outpost\" \"example\" {<br />  id = tolist(data.aws_outposts_outposts.example.ids)[0]<br />}</p><p>resource \"aws_vpc\" \"example\" {<br />  cidr_block = \"10.0.0.0/16\"<br />}</p><p>resource \"aws_subnet\" \"example\" {<br />  vpc_id     = aws_vpc.example.id<br />  cidr_block = \"10.0.1.0/24\"</p><p>tags = {<br />    Name = \"my-subnet\"<br />  }<br />}</p><p>resource \"aws_elasticache_subnet_group\" \"example\" {<br />  name       = \"my-cache-subnet\"<br />  subnet_ids = [aws_subnet.example.id]<br />}</p><p>resource \"aws_elasticache_cluster\" \"example\" {<br />  cluster_id = \"cluster-example\"<br />  # Note that ElastiCache for Outposts only supports <code>single-outpost</code> currently<br />  outpost_mode          = \"single-outpost\"<br />  preferred_outpost_arn = data.aws_outposts_outpost.example.arn<br />  engine                = \"memcached\"<br />  # Note that ElastiCache for Outposts only supports M5 and R5 node families currently<br />  node_type            = \"cache.r5.large\"<br />  num_cache_nodes      = 2<br />  parameter_group_name = \"default.memcached1.4\"<br />  port                 = 11211<br />  subnet_group_name    = aws_elasticache_subnet_group.example.name<br />}<br /></p>", "argument-reference": "<h2 id=\"argument-reference\">Argument Reference</h2><p>The following arguments are required:</p><ul><li><code>cluster_id</code> \u2013 (Required) Group identifier. ElastiCache converts this name to lowercase. Changing this value will re-create the resource.</li><li><code>engine</code> \u2013 (Optional, Required if <code>replication_group_id</code> is not specified) Name of the cache engine to be used for this cache cluster. Valid values are <code>memcached</code> or <code>redis</code>.</li><li><code>node_type</code> \u2013 (Required unless <code>replication_group_id</code> is provided) The instance class used. See AWS documentation for information on <a href=\"https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/CacheNodes.SupportedTypes.html\">supported node types for Redis</a> and <a href=\"https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/nodes-select-size.html\">guidance on selecting node types for Redis</a>. See AWS documentation for information on <a href=\"https://docs.aws.amazon.com/AmazonElastiCache/latest/mem-ug/CacheNodes.SupportedTypes.html\">supported node types for Memcached</a> and <a href=\"https://docs.aws.amazon.com/AmazonElastiCache/latest/mem-ug/nodes-select-size.html\">guidance on selecting node types for Memcached</a>. For Memcached, changing this value will re-create the resource.</li><li><code>num_cache_nodes</code> \u2013 (Required unless <code>replication_group_id</code> is provided) The initial number of cache nodes that the cache cluster will have. For Redis, this value must be 1. For Memcached, this value must be between 1 and 40. If this number is reduced on subsequent runs, the highest numbered nodes will be removed.</li><li><code>parameter_group_name</code> \u2013 (Required unless <code>replication_group_id</code> is provided) The name of the parameter group to associate with this cache cluster.</li></ul><p>The following arguments are optional:</p><ul><li><code>apply_immediately</code> - (Optional) Whether any database modifications are applied immediately, or during the next maintenance window. Default is <code>false</code>. See <a href=\"https://docs.aws.amazon.com/AmazonElastiCache/latest/APIReference/API_ModifyCacheCluster.html\">Amazon ElastiCache Documentation for more information.</a>.</li><li><code>auto_minor_version_upgrade</code> - (Optional) Specifies whether minor version engine upgrades will be applied automatically to the underlying Cache Cluster instances during the maintenance window.<br />  Only supported for engine type <code>\"redis\"</code> and if the engine version is 6 or higher.<br />  Defaults to <code>true</code>.</li><li><code>availability_zone</code> - (Optional) Availability Zone for the cache cluster. If you want to create cache nodes in multi-az, use <code>preferred_availability_zones</code> instead. Default: System chosen Availability Zone. Changing this value will re-create the resource.</li><li><code>az_mode</code> - (Optional, Memcached only) Whether the nodes in this Memcached node group are created in a single Availability Zone or created across multiple Availability Zones in the cluster's region. Valid values for this parameter are <code>single-az</code> or <code>cross-az</code>, default is <code>single-az</code>. If you want to choose <code>cross-az</code>, <code>num_cache_nodes</code> must be greater than <code>1</code>.</li><li><code>engine_version</code> \u2013 (Optional) Version number of the cache engine to be used.<br />  If not set, defaults to the latest version.<br />  See <a href=\"https://docs.aws.amazon.com/cli/latest/reference/elasticache/describe-cache-engine-versions.html\">Describe Cache Engine Versions</a> in the AWS Documentation for supported versions.<br />  When <code>engine</code> is <code>redis</code> and the version is 7 or higher, the major and minor version should be set, e.g., <code>7.2</code>.<br />  When the version is 6, the major and minor version can be set, e.g., <code>6.2</code>,<br />  or the minor version can be unspecified which will use the latest version at creation time, e.g., <code>6.x</code>.<br />  Otherwise, specify the full version desired, e.g., <code>5.0.6</code>.<br />  The actual engine version used is returned in the attribute <code>engine_version_actual</code>, see <a href=\"#attribute-reference\">Attribute Reference</a> below.</li><li><code>final_snapshot_identifier</code> - (Optional, Redis only) Name of your final cluster snapshot. If omitted, no final snapshot will be made.</li><li><code>ip_discovery</code> - (Optional) The IP version to advertise in the discovery protocol. Valid values are <code>ipv4</code> or <code>ipv6</code>.</li><li><code>log_delivery_configuration</code> - (Optional, Redis only) Specifies the destination and format of Redis <a href=\"https://redis.io/commands/slowlog\">SLOWLOG</a> or Redis <a href=\"https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/Log_Delivery.html#Log_contents-engine-log\">Engine Log</a>. See the documentation on <a href=\"https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/Log_Delivery.html\">Amazon ElastiCache</a>. See <a href=\"#log-delivery-configuration\">Log Delivery Configuration</a> below for more details.</li><li><code>maintenance_window</code> \u2013 (Optional) Specifies the weekly time range for when maintenance<br />on the cache cluster is performed. The format is <code>ddd:hh24:mi-ddd:hh24:mi</code> (24H Clock UTC).<br />The minimum maintenance window is a 60 minute period. Example: <code>sun:05:00-sun:09:00</code>.</li><li><code>network_type</code> - (Optional) The IP versions for cache cluster connections. IPv6 is supported with Redis engine <code>6.2</code> onword or Memcached version <code>1.6.6</code> for all <a href=\"https://aws.amazon.com/ec2/nitro/\">Nitro system</a> instances. Valid values are <code>ipv4</code>, <code>ipv6</code> or <code>dual_stack</code>.</li><li><code>notification_topic_arn</code> \u2013 (Optional) ARN of an SNS topic to send ElastiCache notifications to. Example: <code>arn:aws:sns:us-east-1:012345678999:my_sns_topic</code>.</li><li><code>outpost_mode</code> - (Optional) Specify the outpost mode that will apply to the cache cluster creation. Valid values are <code>\"single-outpost\"</code> and <code>\"cross-outpost\"</code>, however AWS currently only supports <code>\"single-outpost\"</code> mode.</li><li><code>port</code> \u2013 (Optional) The port number on which each of the cache nodes will accept connections. For Memcached the default is 11211, and for Redis the default port is 6379. Cannot be provided with <code>replication_group_id</code>. Changing this value will re-create the resource.</li><li><code>preferred_availability_zones</code> - (Optional, Memcached only) List of the Availability Zones in which cache nodes are created. If you are creating your cluster in an Amazon VPC you can only locate nodes in Availability Zones that are associated with the subnets in the selected subnet group. The number of Availability Zones listed must equal the value of <code>num_cache_nodes</code>. If you want all the nodes in the same Availability Zone, use <code>availability_zone</code> instead, or repeat the Availability Zone multiple times in the list. Default: System chosen Availability Zones. Detecting drift of existing node availability zone is not currently supported. Updating this argument by itself to migrate existing node availability zones is not currently supported and will show a perpetual difference.</li><li><code>preferred_outpost_arn</code> - (Optional, Required if <code>outpost_mode</code> is specified) The outpost ARN in which the cache cluster will be created.</li><li><code>replication_group_id</code> - (Optional, Required if <code>engine</code> is not specified) ID of the replication group to which this cluster should belong. If this parameter is specified, the cluster is added to the specified replication group as a read replica; otherwise, the cluster is a standalone primary that is not part of any replication group.</li><li><code>security_group_ids</code> \u2013 (Optional, VPC only) One or more VPC security groups associated with the cache cluster</li><li><code>snapshot_arns</code> \u2013 (Optional, Redis only) Single-element string list containing an Amazon Resource Name (ARN) of a Redis RDB snapshot file stored in Amazon S3. The object name cannot contain any commas. Changing <code>snapshot_arns</code> forces a new resource.</li><li><code>snapshot_name</code> - (Optional, Redis only) Name of a snapshot from which to restore data into the new node group. Changing <code>snapshot_name</code> forces a new resource.</li><li><code>snapshot_retention_limit</code> - (Optional, Redis only) Number of days for which ElastiCache will retain automatic cache cluster snapshots before deleting them. For example, if you set SnapshotRetentionLimit to 5, then a snapshot that was taken today will be retained for 5 days before being deleted. If the value of SnapshotRetentionLimit is set to zero (0), backups are turned off. Please note that setting a <code>snapshot_retention_limit</code> is not supported on cache.t1.micro cache nodes</li><li><code>snapshot_window</code> - (Optional, Redis only) Daily time range (in UTC) during which ElastiCache will begin taking a daily snapshot of your cache cluster. Example: 05:00-09:00</li><li><code>subnet_group_name</code> \u2013 (Optional, VPC only) Name of the subnet group to be used for the cache cluster. Changing this value will re-create the resource.</li><li><code>tags</code> - (Optional) Map of tags to assign to the resource. If configured with a provider <a href=\"https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block\"><code>default_tags</code> configuration block</a> present, tags with matching keys will overwrite those defined at the provider-level.</li><li><code>transit_encryption_enabled</code> - (Optional) Enable encryption in-transit. Supported only with Memcached versions <code>1.6.12</code> and later, running in a VPC. See the <a href=\"https://docs.aws.amazon.com/AmazonElastiCache/latest/mem-ug/in-transit-encryption-mc.html\">ElastiCache in-transit encryption</a> documentation for more details.</li></ul><h3 id=\"log-delivery-configuration\">Log Delivery Configuration</h3><p>The <code>log_delivery_configuration</code> block allows the streaming of Redis <a href=\"https://redis.io/commands/slowlog\">SLOWLOG</a> or Redis <a href=\"https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/Log_Delivery.html#Log_contents-engine-log\">Engine Log</a> to CloudWatch Logs or Kinesis Data Firehose. Max of 2 blocks.</p><ul><li><code>destination</code> - Name of either the CloudWatch Logs LogGroup or Kinesis Data Firehose resource.</li><li><code>destination_type</code> - For CloudWatch Logs use <code>cloudwatch-logs</code> or for Kinesis Data Firehose use <code>kinesis-firehose</code>.</li><li><code>log_format</code> - Valid values are <code>json</code> or <code>text</code></li><li><code>log_type</code> - Valid values are  <code>slow-log</code> or <code>engine-log</code>. Max 1 of each.</li></ul>", "attribute-reference": "<h2 id=\"attribute-reference\">Attribute Reference</h2><p>This resource exports the following attributes in addition to the arguments above:</p><ul><li><code>arn</code> - The ARN of the created ElastiCache Cluster.</li><li><code>engine_version_actual</code> - Because ElastiCache pulls the latest minor or patch for a version, this attribute returns the running version of the cache engine.</li><li><code>cache_nodes</code> - List of node objects including <code>id</code>, <code>address</code>, <code>port</code> and <code>availability_zone</code>.</li><li><code>cluster_address</code> - (Memcached only) DNS name of the cache cluster without the port appended.</li><li><code>configuration_endpoint</code> - (Memcached only) Configuration endpoint to allow host discovery.</li><li><code>tags_all</code> - Map of tags assigned to the resource, including those inherited from the provider <a href=\"https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block\"><code>default_tags</code> configuration block</a>.</li></ul>", "timeouts": "<h2 id=\"timeouts\">Timeouts</h2><p><a href=\"https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts\">Configuration options</a>:</p><ul><li><code>create</code> - (Default <code>40m</code>)</li><li><code>update</code> - (Default <code>80m</code>)</li><li><code>delete</code> - (Default <code>40m</code>)</li></ul>", "import": "<h2 id=\"import\">Import</h2><p>In Terraform v1.5.0 and later, use an <a href=\"https://developer.hashicorp.com/terraform/language/import\"><code>import</code> block</a> to import ElastiCache Clusters using the <code>cluster_id</code>. For example:</p><p><code>terraformimport {  to = aws_elasticache_cluster.my_cluster  id = \"my_cluster\"}</code></p><p>Using <code>terraform import</code>, import ElastiCache Clusters using the <code>cluster_id</code>. For example:</p><p><code>console% terraform import aws_elasticache_cluster.my_cluster my_cluster</code></p>", "description": "<h1 id=\"resource-aws_elasticache_cluster\">Resource: aws_elasticache_cluster</h1><p>Provides an ElastiCache Cluster resource, which manages either a<br /><a href=\"https://docs.aws.amazon.com/AmazonElastiCache/latest/mem-ug/WhatIs.html\">Memcached cluster</a>, a<br /><a href=\"https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/WhatIs.html\">single-node Redis instance</a>, or a<br />[read replica in a Redis (Cluster Mode Enabled) replication group].</p><p>For working with Redis (Cluster Mode Enabled) replication groups, see the<br /><a href=\"/docs/providers/aws/r/elasticache_replication_group.html\"><code>aws_elasticache_replication_group</code> resource</a>.</p><p>~&gt; <strong>Note:</strong> When you change an attribute, such as <code>num_cache_nodes</code>, by default<br />it is applied in the next maintenance window. Because of this, Terraform may report<br />a difference in its planning phase because the actual modification has not yet taken<br />place. You can use the <code>apply_immediately</code> flag to instruct the service to apply the<br />change immediately. Using <code>apply_immediately</code> can result in a brief downtime as the server reboots.<br />See the AWS Documentation on Modifying an ElastiCache Cache Cluster for<br /><a href=\"https://docs.aws.amazon.com/AmazonElastiCache/latest/mem-ug/Clusters.Modify.html\">ElastiCache for Memcached</a> or<br /><a href=\"https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/Clusters.Modify.html\">ElastiCache for Redis</a><br />for more information.</p><p>~&gt; <strong>Note:</strong> Any attribute changes that re-create the resource will be applied immediately, regardless of the value of <code>apply_immediately</code>.</p>"}