{"resource-aws-iam-role-policy": "<h1 id=\"resource-aws_iam_role_policy\">Resource: aws_iam_role_policy</h1><p>Provides an IAM role inline policy.</p><p>~&gt; <strong>NOTE:</strong> For a given role, this resource is incompatible with using the <a href=\"/docs/providers/aws/r/iam_role.html\"><code>aws_iam_role</code> resource</a> <code>inline_policy</code> argument. When using that argument and this resource, both will attempt to manage the role's inline policies and Terraform will show a permanent difference.</p>", "example-usage": "<h2 id=\"example-usage\">Example Usage</h2><p>terraform<br />resource \"aws_iam_role_policy\" \"test_policy\" {<br />  name = \"test_policy\"<br />  role = aws_iam_role.test_role.id</p><br /><p># Terraform's \"jsonencode\" function converts a<br />  # Terraform expression result to valid JSON syntax.<br />  policy = jsonencode({<br />    Version = \"2012-10-17\"<br />    Statement = [<br />      {<br />        Action = [<br />          \"ec2:Describe<em>\",<br />        ]<br />        Effect   = \"Allow\"<br />        Resource = \"</em>\"<br />      },<br />    ]<br />  })<br />}</p><br /><p>resource \"aws_iam_role\" \"test_role\" {<br />  name = \"test_role\"</p><br /><p>assume_role_policy = jsonencode({<br />    Version = \"2012-10-17\"<br />    Statement = [<br />      {<br />        Action = \"sts:AssumeRole\"<br />        Effect = \"Allow\"<br />        Sid    = \"\"<br />        Principal = {<br />          Service = \"ec2.amazonaws.com\"<br />        }<br />      },<br />    ]<br />  })<br />}</p><br />", "argument-reference": "<h2 id=\"argument-reference\">Argument Reference</h2><p>This resource supports the following arguments:</p><ul><li><code>name</code> - (Optional) The name of the role policy. If omitted, Terraform will<br />assign a random, unique name.</li><li><code>name_prefix</code> - (Optional) Creates a unique name beginning with the specified<br />  prefix. Conflicts with <code>name</code>.</li><li><code>policy</code> - (Required) The inline policy document. This is a JSON formatted string. For more information about building IAM policy documents with Terraform, see the <a href=\"https://learn.hashicorp.com/terraform/aws/iam-policy\">AWS IAM Policy Document Guide</a></li><li><code>role</code> - (Required) The name of the IAM role to attach to the policy.</li></ul>", "attribute-reference": "<h2 id=\"attribute-reference\">Attribute Reference</h2><p>This resource exports the following attributes in addition to the arguments above:</p><ul><li><code>id</code> - The role policy ID, in the form of <code>role_name:role_policy_name</code>.</li><li><code>name</code> - The name of the policy.</li><li><code>policy</code> - The policy document attached to the role.</li><li><code>role</code> - The name of the role associated with the policy.</li></ul>", "import": "<h2 id=\"import\">Import</h2><p>In Terraform v1.5.0 and later, use an <a href=\"https://developer.hashicorp.com/terraform/language/import\"><code>import</code> block</a> to import IAM Role Policies using the <code>role_name:role_policy_name</code>. For example:</p><p>terraform<br />import {<br />  to = aws_iam_role_policy.mypolicy<br />  id = \"role_of_mypolicy_name:mypolicy_name\"<br />}</p><p>Using <code>terraform import</code>, import IAM Role Policies using the <code>role_name:role_policy_name</code>. For example:</p><p>console<br />% terraform import aws_iam_role_policy.mypolicy role_of_mypolicy_name:mypolicy_name</p>", "description": "<h1 id=\"resource-aws_iam_role_policy\">Resource: aws_iam_role_policy</h1><p>Provides an IAM role inline policy.</p><p>~&gt; <strong>NOTE:</strong> For a given role, this resource is incompatible with using the <a href=\"/docs/providers/aws/r/iam_role.html\"><code>aws_iam_role</code> resource</a> <code>inline_policy</code> argument. When using that argument and this resource, both will attempt to manage the role's inline policies and Terraform will show a permanent difference.</p>"}