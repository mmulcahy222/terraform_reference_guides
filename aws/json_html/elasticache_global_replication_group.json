{"resource-aws-elasticache-global-replication-group": "<h1 id=\"resource-aws_elasticache_global_replication_group\">Resource: aws_elasticache_global_replication_group</h1><p>Provides an ElastiCache Global Replication Group resource, which manages replication between two or more Replication Groups in different regions. For more information, see the <a href=\"https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/Redis-Global-Datastore.html\">ElastiCache User Guide</a>.</p>", "example-usage": "<h2 id=\"example-usage\">Example Usage</h2><h3 id=\"global-replication-group-with-one-secondary-replication-group\">Global replication group with one secondary replication group</h3><br /><p>The global replication group depends on the primary group existing. Secondary replication groups depend on the global replication group. Terraform dependency management will handle this transparently using resource value references.</p><br /><p>terraform<br />resource \"aws_elasticache_global_replication_group\" \"example\" {<br />  global_replication_group_id_suffix = \"example\"<br />  primary_replication_group_id       = aws_elasticache_replication_group.primary.id<br />}</p><br /><p>resource \"aws_elasticache_replication_group\" \"primary\" {<br />  replication_group_id = \"example-primary\"<br />  description          = \"primary replication group\"</p><br /><p>engine         = \"redis\"<br />  engine_version = \"5.0.6\"<br />  node_type      = \"cache.m5.large\"</p><br /><p>num_cache_clusters = 1<br />}</p><br /><p>resource \"aws_elasticache_replication_group\" \"secondary\" {<br />  provider = aws.other_region</p><br /><p>replication_group_id        = \"example-secondary\"<br />  description                 = \"secondary replication group\"<br />  global_replication_group_id = aws_elasticache_global_replication_group.example.global_replication_group_id</p><br /><p>num_cache_clusters = 1<br />}</p><br /><h3 id=\"managing-redis-engine-versions\">Managing Redis Engine Versions</h3><br /><p>The initial Redis version is determined by the version set on the primary replication group.<br />However, once it is part of a Global Replication Group,<br />the Global Replication Group manages the version of all member replication groups.</p><br /><p>The member replication groups must have <a href=\"https://www.terraform.io/language/meta-arguments/lifecycle\"><code>lifecycle.ignore_changes[engine_version]</code></a> set,<br />or Terraform will always return a diff.</p><br /><p>In this example,<br />the primary replication group will be created with Redis 6.0,<br />and then upgraded to Redis 6.2 once added to the Global Replication Group.<br />The secondary replication group will be created with Redis 6.2.</p><br /><p>terraform<br />resource \"aws_elasticache_global_replication_group\" \"example\" {<br />  global_replication_group_id_suffix = \"example\"<br />  primary_replication_group_id       = aws_elasticache_replication_group.primary.id</p><br /><p>engine_version = \"6.2\"<br />}</p><br /><p>resource \"aws_elasticache_replication_group\" \"primary\" {<br />  replication_group_id = \"example-primary\"<br />  description          = \"primary replication group\"</p><br /><p>engine         = \"redis\"<br />  engine_version = \"6.0\"<br />  node_type      = \"cache.m5.large\"</p><br /><p>num_cache_clusters = 1</p><br /><p>lifecycle {<br />    ignore_changes = [engine_version]<br />  }<br />}</p><br /><p>resource \"aws_elasticache_replication_group\" \"secondary\" {<br />  provider = aws.other_region</p><br /><p>replication_group_id        = \"example-secondary\"<br />  description                 = \"secondary replication group\"<br />  global_replication_group_id = aws_elasticache_global_replication_group.example.global_replication_group_id</p><br /><p>num_cache_clusters = 1</p><br /><p>lifecycle {<br />    ignore_changes = [engine_version]<br />  }<br />}</p><br />", "argument-reference": "<h2 id=\"argument-reference\">Argument Reference</h2><p>This resource supports the following arguments:</p><ul><li><code>automatic_failover_enabled</code> - (Optional) Specifies whether read-only replicas will be automatically promoted to read/write primary if the existing primary fails.<br />  When creating, by default the Global Replication Group inherits the automatic failover setting of the primary replication group.</li><li><code>cache_node_type</code> - (Optional) The instance class used.<br />  See AWS documentation for information on <a href=\"https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/CacheNodes.SupportedTypes.html\">supported node types</a><br />  and <a href=\"https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/nodes-select-size.html\">guidance on selecting node types</a>.<br />  When creating, by default the Global Replication Group inherits the node type of the primary replication group.</li><li><code>engine_version</code> - (Optional) Redis version to use for the Global Replication Group.<br />  When creating, by default the Global Replication Group inherits the version of the primary replication group.<br />  If a version is specified, the Global Replication Group and all member replication groups will be upgraded to this version.<br />  Cannot be downgraded without replacing the Global Replication Group and all member replication groups.<br />  When the version is 7 or higher, the major and minor version should be set, e.g., <code>7.2</code>.<br />  When the version is 6, the major and minor version can be set, e.g., <code>6.2</code>,<br />  or the minor version can be unspecified which will use the latest version at creation time, e.g., <code>6.x</code>.<br />  The actual engine version used is returned in the attribute <code>engine_version_actual</code>, see <a href=\"#attribute-reference\">Attribute Reference</a> below.</li><li><code>global_replication_group_id_suffix</code> \u2013 (Required) The suffix name of a Global Datastore. If <code>global_replication_group_id_suffix</code> is changed, creates a new resource.</li><li><code>primary_replication_group_id</code> \u2013 (Required) The ID of the primary cluster that accepts writes and will replicate updates to the secondary cluster. If <code>primary_replication_group_id</code> is changed, creates a new resource.</li><li><code>global_replication_group_description</code> \u2013 (Optional) A user-created description for the global replication group.</li><li><code>num_node_groups</code> - (Optional) The number of node groups (shards) on the global replication group.</li><li><code>parameter_group_name</code> - (Optional) An ElastiCache Parameter Group to use for the Global Replication Group.<br />  Required when upgrading a major engine version, but will be ignored if left configured after the upgrade is complete.<br />  Specifying without a major version upgrade will fail.<br />  Note that ElastiCache creates a copy of this parameter group for each member replication group.</li></ul>", "attribute-reference": "<h2 id=\"attribute-reference\">Attribute Reference</h2><p>This resource exports the following attributes in addition to the arguments above:</p><ul><li><code>id</code> - The ID of the ElastiCache Global Replication Group.</li><li><code>arn</code> - The ARN of the ElastiCache Global Replication Group.</li><li><code>engine_version_actual</code> - The full version number of the cache engine running on the members of this global replication group.</li><li><code>at_rest_encryption_enabled</code> - A flag that indicate whether the encryption at rest is enabled.</li><li><code>auth_token_enabled</code> - A flag that indicate whether AuthToken (password) is enabled.</li><li><code>cluster_enabled</code> - Indicates whether the Global Datastore is cluster enabled.</li><li><code>engine</code> - The name of the cache engine to be used for the clusters in this global replication group.</li><li><code>global_replication_group_id</code> - The full ID of the global replication group.</li><li><code>global_node_groups</code> - Set of node groups (shards) on the global replication group.<br />  Has the values:<ul><li><code>global_node_group_id</code> - The ID of the global node group.</li><li><code>slots</code> - The keyspace for this node group.</li></ul></li><li><code>transit_encryption_enabled</code> - A flag that indicates whether the encryption in transit is enabled.</li></ul>", "timeouts": "<h2 id=\"timeouts\">Timeouts</h2><p><a href=\"https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts\">Configuration options</a>:</p><ul><li><code>create</code> - (Default <code>60m</code>)</li><li><code>update</code> - (Default <code>60m</code>)</li><li><code>delete</code> - (Default <code>20m</code>)</li></ul>", "import": "<h2 id=\"import\">Import</h2><p>In Terraform v1.5.0 and later, use an <a href=\"https://developer.hashicorp.com/terraform/language/import\"><code>import</code> block</a> to import ElastiCache Global Replication Groups using the <code>global_replication_group_id</code>. For example:</p><p>terraform<br />import {<br />  to = aws_elasticache_global_replication_group.my_global_replication_group<br />  id = \"okuqm-global-replication-group-1\"<br />}</p><p>Using <code>terraform import</code>, import ElastiCache Global Replication Groups using the <code>global_replication_group_id</code>. For example:</p><p>console<br />% terraform import aws_elasticache_global_replication_group.my_global_replication_group okuqm-global-replication-group-1</p>", "description": "<h1 id=\"resource-aws_elasticache_global_replication_group\">Resource: aws_elasticache_global_replication_group</h1><p>Provides an ElastiCache Global Replication Group resource, which manages replication between two or more Replication Groups in different regions. For more information, see the <a href=\"https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/Redis-Global-Datastore.html\">ElastiCache User Guide</a>.</p>"}