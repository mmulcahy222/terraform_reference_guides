{"resource-aws-glue-partition": "<h1 id=\"resource-aws_glue_partition\">Resource: aws_glue_partition</h1><p>Provides a Glue Partition Resource.</p>", "example-usage": "<h2 id=\"example-usage\">Example Usage</h2><p><code>terraformresource \"aws_glue_partition\" \"example\" {  database_name = \"some-database\"  table_name    = \"some-table\"  values        = [\"some-value\"]}</code></p>", "argument-reference": "<h2 id=\"argument-reference\">Argument Reference</h2><p>This resource supports the following arguments:</p><ul><li><code>database_name</code> - (Required) Name of the metadata database where the table metadata resides. For Hive compatibility, this must be all lowercase.</li><li><code>partition_values</code> - (Required) The values that define the partition.</li><li><code>catalog_id</code> - (Optional) ID of the Glue Catalog and database to create the table in. If omitted, this defaults to the AWS Account ID plus the database name.</li><li><code>storage_descriptor</code> - (Optional) A <a href=\"#storage_descriptor\">storage descriptor</a> object containing information about the physical storage of this table. You can refer to the <a href=\"https://docs.aws.amazon.com/glue/latest/dg/aws-glue-api-catalog-tables.html#aws-glue-api-catalog-tables-StorageDescriptor\">Glue Developer Guide</a> for a full explanation of this object.</li><li><code>parameters</code> - (Optional) Properties associated with this table, as a list of key-value pairs.</li></ul><h5 id=\"storage_descriptor\">storage_descriptor</h5><ul><li><code>columns</code> - (Optional) A list of the <a href=\"#column\">Columns</a> in the table.</li><li><code>location</code> - (Optional) The physical location of the table. By default this takes the form of the warehouse location, followed by the database location in the warehouse, followed by the table name.</li><li><code>input_format</code> - (Optional) The input format: SequenceFileInputFormat (binary), or TextInputFormat, or a custom format.</li><li><code>output_format</code> - (Optional) The output format: SequenceFileOutputFormat (binary), or IgnoreKeyTextOutputFormat, or a custom format.</li><li><code>compressed</code> - (Optional) True if the data in the table is compressed, or False if not.</li><li><code>number_of_buckets</code> - (Optional) Must be specified if the table contains any dimension columns.</li><li><code>ser_de_info</code> - (Optional) <a href=\"#ser_de_info\">Serialization/deserialization (SerDe)</a> information.</li><li><code>bucket_columns</code> - (Optional) A list of reducer grouping columns, clustering columns, and bucketing columns in the table.</li><li><code>sort_columns</code> - (Optional) A list of <a href=\"#sort_columns\">Order</a> objects specifying the sort order of each bucket in the table.</li><li><code>parameters</code> - (Optional) User-supplied properties in key-value form.</li><li><code>skewed_info</code> - (Optional) Information about values that appear very frequently in a column (skewed values).</li><li><code>stored_as_sub_directories</code> - (Optional) True if the table data is stored in subdirectories, or False if not.</li></ul><h5 id=\"column\">column</h5><ul><li><code>name</code> - (Required) The name of the Column.</li><li><code>type</code> - (Optional) The datatype of data in the Column.</li><li><code>comment</code> - (Optional) Free-form text comment.</li></ul><h5 id=\"ser_de_info\">ser_de_info</h5><ul><li><code>name</code> - (Optional) Name of the SerDe.</li><li><code>parameters</code> - (Optional) A map of initialization parameters for the SerDe, in key-value form.</li><li><code>serialization_library</code> - (Optional) Usually the class that implements the SerDe. An example is: org.apache.hadoop.hive.serde2.columnar.ColumnarSerDe.</li></ul><h5 id=\"sort_columns\">sort_columns</h5><ul><li><code>column</code> - (Required) The name of the column.</li><li><code>sort_order</code> - (Required) Indicates that the column is sorted in ascending order (== 1), or in descending order (==0).</li></ul><h5 id=\"skewed_info\">skewed_info</h5><ul><li><code>skewed_column_names</code> - (Optional) A list of names of columns that contain skewed values.</li><li><code>skewed_column_value_location_maps</code> - (Optional) A list of values that appear so frequently as to be considered skewed.</li><li><code>skewed_column_values</code> - (Optional) A map of skewed values to the columns that contain them.</li></ul>", "attribute-reference": "<h2 id=\"attribute-reference\">Attribute Reference</h2><p>This resource exports the following attributes in addition to the arguments above:</p><ul><li><code>id</code> - partition id.</li><li><code>creation_time</code> - The time at which the partition was created.</li><li><code>last_analyzed_time</code> - The last time at which column statistics were computed for this partition.</li><li><code>last_accessed_time</code> - The last time at which the partition was accessed.</li></ul>", "import": "<h2 id=\"import\">Import</h2><p>In Terraform v1.5.0 and later, use an <a href=\"https://developer.hashicorp.com/terraform/language/import\"><code>import</code> block</a> to import Glue Partitions using the catalog ID (usually AWS account ID), database name, table name and partition values. For example:</p><p><code>terraformimport {  to = aws_glue_partition.part  id = \"123456789012:MyDatabase:MyTable:val1#val2\"}</code></p><p>Using <code>terraform import</code>, import Glue Partitions using the catalog ID (usually AWS account ID), database name, table name and partition values. For example:</p><p><code>console% terraform import aws_glue_partition.part 123456789012:MyDatabase:MyTable:val1#val2</code></p>", "description": "<h1 id=\"resource-aws_glue_partition\">Resource: aws_glue_partition</h1><p>Provides a Glue Partition Resource.</p>"}