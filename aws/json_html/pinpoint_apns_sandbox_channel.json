{"resource-aws-pinpoint-apns-sandbox-channel": "<h1 id=\"resource-aws_pinpoint_apns_sandbox_channel\">Resource: aws_pinpoint_apns_sandbox_channel</h1><p>Provides a Pinpoint APNs Sandbox Channel resource.</p><p>~&gt; <strong>Note:</strong> All arguments, including certificates and tokens, will be stored in the raw state as plain-text.<br /><a href=\"https://www.terraform.io/docs/state/sensitive-data.html\">Read more about sensitive data in state</a>.</p>", "example-usage": "<h2 id=\"example-usage\">Example Usage</h2><p>terraform<br />resource \"aws_pinpoint_apns_sandbox_channel\" \"apns_sandbox\" {<br />  application_id = aws_pinpoint_app.app.application_id</p><p>certificate = file(\"./certificate.pem\")<br />  private_key = file(\"./private_key.key\")<br />}</p><p>resource \"aws_pinpoint_app\" \"app\" {}<br /></p>", "argument-reference": "<h2 id=\"argument-reference\">Argument Reference</h2><p>This resource supports the following arguments:</p><ul><li><code>application_id</code> - (Required) The application ID.</li><li><code>enabled</code> - (Optional) Whether the channel is enabled or disabled. Defaults to <code>true</code>.</li><li><code>default_authentication_method</code> - (Optional) The default authentication method used for APNs Sandbox.<br /><strong>NOTE</strong>: Amazon Pinpoint uses this default for every APNs push notification that you send using the console.<br />  You can override the default when you send a message programmatically using the Amazon Pinpoint API, the AWS CLI, or an AWS SDK.<br />  If your default authentication type fails, Amazon Pinpoint doesn't attempt to use the other authentication type.</li></ul><p>One of the following sets of credentials is also required.</p><p>If you choose to use <strong>Certificate credentials</strong> you will have to provide:</p><ul><li><code>certificate</code> - (Required) The pem encoded TLS Certificate from Apple.</li><li><code>private_key</code> - (Required) The Certificate Private Key file (ie. <code>.key</code> file).</li></ul><p>If you choose to use <strong>Key credentials</strong> you will have to provide:</p><ul><li><code>bundle_id</code> - (Required) The ID assigned to your iOS app. To find this value, choose Certificates, IDs &amp; Profiles, choose App IDs in the Identifiers section, and choose your app.</li><li><code>team_id</code> - (Required) The ID assigned to your Apple developer account team. This value is provided on the Membership page.</li><li><code>token_key</code> - (Required) The <code>.p8</code> file that you download from your Apple developer account when you create an authentication key.</li><li><code>token_key_id</code> - (Required) The ID assigned to your signing key. To find this value, choose Certificates, IDs &amp; Profiles, and choose your key in the Keys section.</li></ul>", "attribute-reference": "<h2 id=\"attribute-reference\">Attribute Reference</h2><p>This resource exports no additional attributes.</p>", "import": "<h2 id=\"import\">Import</h2><p>In Terraform v1.5.0 and later, use an <a href=\"https://developer.hashicorp.com/terraform/language/import\"><code>import</code> block</a> to import Pinpoint APNs Sandbox Channel using the <code>application-id</code>. For example:</p><p><code>terraformimport {  to = aws_pinpoint_apns_sandbox_channel.apns_sandbox  id = \"application-id\"}</code></p><p>Using <code>terraform import</code>, import Pinpoint APNs Sandbox Channel using the <code>application-id</code>. For example:</p><p><code>console% terraform import aws_pinpoint_apns_sandbox_channel.apns_sandbox application-id</code></p>", "description": "<h1 id=\"resource-aws_pinpoint_apns_sandbox_channel\">Resource: aws_pinpoint_apns_sandbox_channel</h1><p>Provides a Pinpoint APNs Sandbox Channel resource.</p><p>~&gt; <strong>Note:</strong> All arguments, including certificates and tokens, will be stored in the raw state as plain-text.<br /><a href=\"https://www.terraform.io/docs/state/sensitive-data.html\">Read more about sensitive data in state</a>.</p>"}