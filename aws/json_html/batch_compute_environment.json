{"resource-aws-batch-compute-environment": "<h1 id=\"resource-aws_batch_compute_environment\">Resource: aws_batch_compute_environment</h1><p>Creates a AWS Batch compute environment. Compute environments contain the Amazon ECS container instances that are used to run containerized batch jobs.</p><p>For information about AWS Batch, see <a href=\"http://docs.aws.amazon.com/batch/latest/userguide/what-is-batch.html\">What is AWS Batch?</a> .<br />For information about compute environment, see <a href=\"http://docs.aws.amazon.com/batch/latest/userguide/compute_environments.html\">Compute Environments</a> .</p><p>~&gt; <strong>Note:</strong> To prevent a race condition during environment deletion, make sure to set <code>depends_on</code> to the related <code>aws_iam_role_policy_attachment</code>;<br />otherwise, the policy may be destroyed too soon and the compute environment will then get stuck in the <code>DELETING</code> state, see <a href=\"http://docs.aws.amazon.com/batch/latest/userguide/troubleshooting.html\">Troubleshooting AWS Batch</a> .</p>", "example-usage": "<h2 id=\"example-usage\">Example Usage</h2><h3 id=\"ec2-type\">EC2 Type</h3><p>terraform<br />data \"aws_iam_policy_document\" \"ec2_assume_role\" {<br />  statement {<br />    effect = \"Allow\"</p><pre><code>principals {  type        = \"Service\"  identifiers = [\"ec2.amazonaws.com\"]}actions = [\"sts:AssumeRole\"]</code></pre><p>}<br />}</p><p>resource \"aws_iam_role\" \"ecs_instance_role\" {<br />  name               = \"ecs_instance_role\"<br />  assume_role_policy = data.aws_iam_policy_document.ec2_assume_role.json<br />}</p><p>resource \"aws_iam_role_policy_attachment\" \"ecs_instance_role\" {<br />  role       = aws_iam_role.ecs_instance_role.name<br />  policy_arn = \"arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceforEC2Role\"<br />}</p><p>resource \"aws_iam_instance_profile\" \"ecs_instance_role\" {<br />  name = \"ecs_instance_role\"<br />  role = aws_iam_role.ecs_instance_role.name<br />}</p><p>data \"aws_iam_policy_document\" \"batch_assume_role\" {<br />  statement {<br />    effect = \"Allow\"</p><pre><code>principals {  type        = \"Service\"  identifiers = [\"batch.amazonaws.com\"]}actions = [\"sts:AssumeRole\"]</code></pre><p>}<br />}</p><p>resource \"aws_iam_role\" \"aws_batch_service_role\" {<br />  name               = \"aws_batch_service_role\"<br />  assume_role_policy = data.aws_iam_policy_document.batch_assume_role.json<br />}</p><p>resource \"aws_iam_role_policy_attachment\" \"aws_batch_service_role\" {<br />  role       = aws_iam_role.aws_batch_service_role.name<br />  policy_arn = \"arn:aws:iam::aws:policy/service-role/AWSBatchServiceRole\"<br />}</p><p>resource \"aws_security_group\" \"sample\" {<br />  name = \"aws_batch_compute_environment_security_group\"</p><p>egress {<br />    from_port   = 0<br />    to_port     = 0<br />    protocol    = \"-1\"<br />    cidr_blocks = [\"0.0.0.0/0\"]<br />  }<br />}</p><p>resource \"aws_vpc\" \"sample\" {<br />  cidr_block = \"10.1.0.0/16\"<br />}</p><p>resource \"aws_subnet\" \"sample\" {<br />  vpc_id     = aws_vpc.sample.id<br />  cidr_block = \"10.1.1.0/24\"<br />}</p><p>resource \"aws_placement_group\" \"sample\" {<br />  name     = \"sample\"<br />  strategy = \"cluster\"<br />}</p><p>resource \"aws_batch_compute_environment\" \"sample\" {<br />  compute_environment_name = \"sample\"</p><p>compute_resources {<br />    instance_role = aws_iam_instance_profile.ecs_instance_role.arn</p><pre><code>instance_type = [  \"c4.large\",]max_vcpus = 16min_vcpus = 0placement_group = aws_placement_group.sample.namesecurity_group_ids = [  aws_security_group.sample.id,]subnets = [  aws_subnet.sample.id,]type = \"EC2\"</code></pre><p>}</p><p>service_role = aws_iam_role.aws_batch_service_role.arn<br />  type         = \"MANAGED\"<br />  depends_on   = [aws_iam_role_policy_attachment.aws_batch_service_role]<br />}<br /></p><h3 id=\"fargate-type\">Fargate Type</h3><p><br />resource \"aws_batch_compute_environment\" \"sample\" {<br />  compute_environment_name = \"sample\"</p><p>compute_resources {<br />    max_vcpus = 16</p><pre><code>security_group_ids = [  aws_security_group.sample.id]subnets = [  aws_subnet.sample.id]type = \"FARGATE\"</code></pre><p>}</p><p>service_role = aws_iam_role.aws_batch_service_role.arn<br />  type         = \"MANAGED\"<br />  depends_on   = [aws_iam_role_policy_attachment.aws_batch_service_role]<br />}<br /></p>", "argument-reference": "<h2 id=\"argument-reference\">Argument Reference</h2><ul><li><code>compute_environment_name</code> - (Optional, Forces new resource) The name for your compute environment. Up to 128 letters (uppercase and lowercase), numbers, and underscores are allowed. If omitted, Terraform will assign a random, unique name.</li><li><code>compute_environment_name_prefix</code> - (Optional, Forces new resource) Creates a unique compute environment name beginning with the specified prefix. Conflicts with <code>compute_environment_name</code>.</li><li><code>compute_resources</code> - (Optional) Details of the compute resources managed by the compute environment. This parameter is required for managed compute environments. See details below.</li><li><code>eks_configuration</code> - (Optional) Details for the Amazon EKS cluster that supports the compute environment. See details below.</li><li><code>service_role</code> - (Required) The full Amazon Resource Name (ARN) of the IAM role that allows AWS Batch to make calls to other AWS services on your behalf.</li><li><code>state</code> - (Optional) The state of the compute environment. If the state is <code>ENABLED</code>, then the compute environment accepts jobs from a queue and can scale out automatically based on queues. Valid items are <code>ENABLED</code> or <code>DISABLED</code>. Defaults to <code>ENABLED</code>.</li><li><code>tags</code> - (Optional) Key-value map of resource tags. If configured with a provider <a href=\"https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block\"><code>default_tags</code> configuration block</a> present, tags with matching keys will overwrite those defined at the provider-level.</li><li><code>type</code> - (Required) The type of the compute environment. Valid items are <code>MANAGED</code> or <code>UNMANAGED</code>.</li></ul><h3 id=\"compute_resources\">compute_resources</h3><ul><li><code>allocation_strategy</code> - (Optional) The allocation strategy to use for the compute resource in case not enough instances of the best fitting instance type can be allocated. Valid items are <code>BEST_FIT_PROGRESSIVE</code>, <code>SPOT_CAPACITY_OPTIMIZED</code> or <code>BEST_FIT</code>. Defaults to <code>BEST_FIT</code>. See <a href=\"https://docs.aws.amazon.com/batch/latest/userguide/allocation-strategies.html\">AWS docs</a> for details. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified.</li><li><code>bid_percentage</code> - (Optional) Integer of maximum percentage that a Spot Instance price can be when compared with the On-Demand price for that instance type before instances are launched. For example, if your bid percentage is 20% (<code>20</code>), then the Spot price must be below 20% of the current On-Demand price for that EC2 instance. If you leave this field empty, the default value is 100% of the On-Demand price. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified.</li><li><code>desired_vcpus</code> - (Optional) The desired number of EC2 vCPUS in the compute environment. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified.</li><li><code>ec2_configuration</code> - (Optional) Provides information used to select Amazon Machine Images (AMIs) for EC2 instances in the compute environment. If Ec2Configuration isn't specified, the default is ECS_AL2. This parameter isn't applicable to jobs that are running on Fargate resources, and shouldn't be specified.</li><li><code>ec2_key_pair</code> - (Optional) The EC2 key pair that is used for instances launched in the compute environment. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified.</li><li><code>image_id</code> - (Optional) The Amazon Machine Image (AMI) ID used for instances launched in the compute environment. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified. (Deprecated, use <a href=\"#ec2_configuration\"><code>ec2_configuration</code></a> <code>image_id_override</code> instead)</li><li><code>instance_role</code> - (Optional) The Amazon ECS instance role applied to Amazon EC2 instances in a compute environment. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified.</li><li><code>instance_type</code> - (Optional) A list of instance types that may be launched. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified.</li><li><code>launch_template</code> - (Optional) The launch template to use for your compute resources. See details below. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified.</li><li><code>max_vcpus</code> - (Required) The maximum number of EC2 vCPUs that an environment can reach.</li><li><code>min_vcpus</code> - (Optional) The minimum number of EC2 vCPUs that an environment should maintain. For <code>EC2</code> or <code>SPOT</code> compute environments, if the parameter is not explicitly defined, a <code>0</code> default value will be set. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified.</li><li><code>placement_group</code> - (Optional) The Amazon EC2 placement group to associate with your compute resources.</li><li><code>security_group_ids</code> - (Optional) A list of EC2 security group that are associated with instances launched in the compute environment. This parameter is required for Fargate compute environments.</li><li><code>spot_iam_fleet_role</code> - (Optional) The Amazon Resource Name (ARN) of the Amazon EC2 Spot Fleet IAM role applied to a SPOT compute environment. This parameter is required for SPOT compute environments. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified.</li><li><code>subnets</code> - (Required) A list of VPC subnets into which the compute resources are launched.</li><li><code>tags</code> - (Optional) Key-value pair tags to be applied to resources that are launched in the compute environment. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified.</li><li><code>type</code> - (Required) The type of compute environment. Valid items are <code>EC2</code>, <code>SPOT</code>, <code>FARGATE</code> or <code>FARGATE_SPOT</code>.</li></ul><h3 id=\"ec2_configuration\">ec2_configuration</h3><p><code>ec2_configuration</code> supports the following:</p><ul><li><code>image_id_override</code> - (Optional) The AMI ID used for instances launched in the compute environment that match the image type. This setting overrides the <code>image_id</code> argument in the <a href=\"#compute_resources\"><code>compute_resources</code></a> block.</li><li><code>image_type</code> - (Optional) The image type to match with the instance type to select an AMI. If the <code>image_id_override</code> parameter isn't specified, then a recent <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-optimized_AMI.html#al2ami\">Amazon ECS-optimized Amazon Linux 2 AMI</a> (<code>ECS_AL2</code>) is used.</li></ul><h3 id=\"launch_template\">launch_template</h3><p><code>launch_template</code> supports the following:</p><ul><li><code>launch_template_id</code> - (Optional) ID of the launch template. You must specify either the launch template ID or launch template name in the request, but not both.</li><li><code>launch_template_name</code> - (Optional) Name of the launch template.</li><li><code>version</code> - (Optional) The version number of the launch template. Default: The default version of the launch template.</li></ul><h3 id=\"eks_configuration\">eks_configuration</h3><p><code>eks_configuration</code> supports the following:</p><ul><li><code>eks_cluster_arn</code> - (Required) The Amazon Resource Name (ARN) of the Amazon EKS cluster.</li><li><code>kubernetes_namespace</code> - (Required) The namespace of the Amazon EKS cluster. AWS Batch manages pods in this namespace.</li></ul>", "attribute-reference": "<h2 id=\"attribute-reference\">Attribute Reference</h2><p>This resource exports the following attributes in addition to the arguments above:</p><ul><li><code>arn</code> - The Amazon Resource Name (ARN) of the compute environment.</li><li><code>ecs_cluster_arn</code> - The Amazon Resource Name (ARN) of the underlying Amazon ECS cluster used by the compute environment.</li><li><code>status</code> - The current status of the compute environment (for example, CREATING or VALID).</li><li><code>status_reason</code> - A short, human-readable string to provide additional details about the current status of the compute environment.</li><li><code>tags_all</code> - A map of tags assigned to the resource, including those inherited from the provider <a href=\"https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block\"><code>default_tags</code> configuration block</a>.</li></ul>", "import": "<h2 id=\"import\">Import</h2><p>In Terraform v1.5.0 and later, use an <a href=\"https://developer.hashicorp.com/terraform/language/import\"><code>import</code> block</a> to import AWS Batch compute using the <code>compute_environment_name</code>. For example:</p><p><code>terraformimport {  to = aws_batch_compute_environment.sample  id = \"sample\"}</code></p><p>Using <code>terraform import</code>, import AWS Batch compute using the <code>compute_environment_name</code>. For example:</p><p><code>console% terraform import aws_batch_compute_environment.sample sample</code></p>", "description": "<h1 id=\"resource-aws_batch_compute_environment\">Resource: aws_batch_compute_environment</h1><p>Creates a AWS Batch compute environment. Compute environments contain the Amazon ECS container instances that are used to run containerized batch jobs.</p><p>For information about AWS Batch, see <a href=\"http://docs.aws.amazon.com/batch/latest/userguide/what-is-batch.html\">What is AWS Batch?</a> .<br />For information about compute environment, see <a href=\"http://docs.aws.amazon.com/batch/latest/userguide/compute_environments.html\">Compute Environments</a> .</p><p>~&gt; <strong>Note:</strong> To prevent a race condition during environment deletion, make sure to set <code>depends_on</code> to the related <code>aws_iam_role_policy_attachment</code>;<br />otherwise, the policy may be destroyed too soon and the compute environment will then get stuck in the <code>DELETING</code> state, see <a href=\"http://docs.aws.amazon.com/batch/latest/userguide/troubleshooting.html\">Troubleshooting AWS Batch</a> .</p>"}