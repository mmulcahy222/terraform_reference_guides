{"resource-aws-eks-addon": "<h1 id=\"resource-aws_eks_addon\">Resource: aws_eks_addon</h1><p>Manages an EKS add-on.</p>", "example-usage": "<h2 id=\"example-usage\">Example Usage</h2><p>terraform<br />resource \"aws_eks_addon\" \"example\" {<br />  cluster_name = aws_eks_cluster.example.name<br />  addon_name   = \"vpc-cni\"<br />}</p><br />", "example-update-add-on-usage-with-resolve-conflicts-on-update-and-preserve": "<h2 id=\"example-update-add-on-usage-with-resolve_conflicts_on_update-and-preserve\">Example Update add-on usage with resolve_conflicts_on_update and PRESERVE</h2><p><code>resolve_conflicts_on_update</code> with <code>PRESERVE</code> can be used to retain the config changes applied to the add-on with kubectl while upgrading to a newer version of the add-on.</p><p>terraform<br />resource \"aws_eks_addon\" \"example\" {<br />  cluster_name                = aws_eks_cluster.example.name<br />  addon_name                  = \"coredns\"<br />  addon_version               = \"v1.10.1-eksbuild.1\" #e.g., previous version v1.9.3-eksbuild.3 and the new version is v1.10.1-eksbuild.1<br />  resolve_conflicts_on_update = \"PRESERVE\"<br />}</p>", "example-add-on-usage-with-custom-configuration-values": "<h2 id=\"example-add-on-usage-with-custom-configuration_values\">Example add-on usage with custom configuration_values</h2><p>Custom add-on configuration can be passed using <code>configuration_values</code> as a single JSON string while creating or updating the add-on.</p><p>~&gt; <strong>Note:</strong> <code>configuration_values</code> is a single JSON string should match the valid JSON schema for each add-on with specific version.</p><p>To find the correct JSON schema for each add-on can be extracted using <a href=\"https://docs.aws.amazon.com/cli/latest/reference/eks/describe-addon-configuration.html\">describe-addon-configuration</a> call.<br />This below is an example for extracting the <code>configuration_values</code> schema for <code>coredns</code>.</p><p>bash<br /> aws eks describe-addon-configuration \\<br /> --addon-name coredns \\<br /> --addon-version v1.10.1-eksbuild.1</p><p>Example to create a <code>coredns</code> managed addon with custom <code>configuration_values</code>.</p><p>terraform<br />resource \"aws_eks_addon\" \"example\" {<br />  cluster_name                = \"mycluster\"<br />  addon_name                  = \"coredns\"<br />  addon_version               = \"v1.10.1-eksbuild.1\"<br />  resolve_conflicts_on_create = \"OVERWRITE\"</p><p>configuration_values = jsonencode({<br />    replicaCount = 4<br />    resources = {<br />      limits = {<br />        cpu    = \"100m\"<br />        memory = \"150Mi\"<br />      }<br />      requests = {<br />        cpu    = \"100m\"<br />        memory = \"150Mi\"<br />      }<br />    }<br />  })<br />}</p><h3 id=\"example-iam-role-for-eks-addon-vpc-cni-with-aws-managed-policy\">Example IAM Role for EKS Addon \"vpc-cni\" with AWS managed policy</h3><p>terraform<br />resource \"aws_eks_cluster\" \"example\" {<br />  # ... other configuration ...<br />}</p><p>data \"tls_certificate\" \"example\" {<br />  url = aws_eks_cluster.example.identity[0].oidc[0].issuer<br />}</p><p>resource \"aws_iam_openid_connect_provider\" \"example\" {<br />  client_id_list  = [\"sts.amazonaws.com\"]<br />  thumbprint_list = [data.tls_certificate.example.certificates[0].sha1_fingerprint]<br />  url             = aws_eks_cluster.example.identity[0].oidc[0].issuer<br />}</p><p>data \"aws_iam_policy_document\" \"example_assume_role_policy\" {<br />  statement {<br />    actions = [\"sts:AssumeRoleWithWebIdentity\"]<br />    effect  = \"Allow\"</p><pre><code>condition {  test     = \"StringEquals\"  variable = \"${replace(aws_iam_openid_connect_provider.example.url, \"https://\", \"\")}:sub\"  values   = [\"system:serviceaccount:kube-system:aws-node\"]}principals {  identifiers = [aws_iam_openid_connect_provider.example.arn]  type        = \"Federated\"}</code></pre><p>}<br />}</p><p>resource \"aws_iam_role\" \"example\" {<br />  assume_role_policy = data.aws_iam_policy_document.example_assume_role_policy.json<br />  name               = \"example-vpc-cni-role\"<br />}</p><p>resource \"aws_iam_role_policy_attachment\" \"example\" {<br />  policy_arn = \"arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy\"<br />  role       = aws_iam_role.example.name<br />}</p>", "argument-reference": "<h2 id=\"argument-reference\">Argument Reference</h2><p>The following arguments are required:</p><ul><li><code>addon_name</code> \u2013 (Required) Name of the EKS add-on. The name must match one of<br />  the names returned by <a href=\"https://docs.aws.amazon.com/cli/latest/reference/eks/describe-addon-versions.html\">describe-addon-versions</a>.</li><li><code>cluster_name</code> \u2013 (Required) Name of the EKS Cluster. Must be between 1-100 characters in length. Must begin with an alphanumeric character, and must only contain alphanumeric characters, dashes and underscores (<code>^[0-9A-Za-z][A-Za-z0-9\\-_]+$</code>).</li></ul><p>The following arguments are optional:</p><ul><li><code>addon_version</code> \u2013 (Optional) The version of the EKS add-on. The version must<br />  match one of the versions returned by <a href=\"https://docs.aws.amazon.com/cli/latest/reference/eks/describe-addon-versions.html\">describe-addon-versions</a>.</li><li><code>configuration_values</code> - (Optional) custom configuration values for addons with single JSON string. This JSON string value must match the JSON schema derived from <a href=\"https://docs.aws.amazon.com/cli/latest/reference/eks/describe-addon-configuration.html\">describe-addon-configuration</a>.</li><li><code>resolve_conflicts_on_create</code> - (Optional) How to resolve field value conflicts when migrating a self-managed add-on to an Amazon EKS add-on. Valid values are <code>NONE</code> and <code>OVERWRITE</code>. For more details see the <a href=\"https://docs.aws.amazon.com/eks/latest/APIReference/API_CreateAddon.html\">CreateAddon</a> API Docs.</li><li><code>resolve_conflicts_on_update</code> - (Optional) How to resolve field value conflicts for an Amazon EKS add-on if you've changed a value from the Amazon EKS default value. Valid values are <code>NONE</code>, <code>OVERWRITE</code>, and <code>PRESERVE</code>. For more details see the <a href=\"https://docs.aws.amazon.com/eks/latest/APIReference/API_UpdateAddon.html\">UpdateAddon</a> API Docs.</li><li><code>resolve_conflicts</code> - (<strong>Deprecated</strong> use the <code>resolve_conflicts_on_create</code> and <code>resolve_conflicts_on_update</code> attributes instead) Define how to resolve parameter value conflicts when migrating an existing add-on to an Amazon EKS add-on or when applying version updates to the add-on. Valid values are <code>NONE</code>, <code>OVERWRITE</code> and <code>PRESERVE</code>. Note that <code>PRESERVE</code> is only valid on addon update, not for initial addon creation. If you need to set this to <code>PRESERVE</code>, use the <code>resolve_conflicts_on_create</code> and <code>resolve_conflicts_on_update</code> attributes instead. For more details check <a href=\"https://docs.aws.amazon.com/eks/latest/APIReference/API_UpdateAddon.html\">UpdateAddon</a> API Docs.</li><li><code>tags</code> - (Optional) Key-value map of resource tags. If configured with a provider <a href=\"https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block\"><code>default_tags</code> configuration block</a> present, tags with matching keys will overwrite those defined at the provider-level.</li><li><code>preserve</code> - (Optional) Indicates if you want to preserve the created resources when deleting the EKS add-on.</li><li><code>service_account_role_arn</code> - (Optional) The Amazon Resource Name (ARN) of an<br />  existing IAM role to bind to the add-on's service account. The role must be<br />  assigned the IAM permissions required by the add-on. If you don't specify<br />  an existing IAM role, then the add-on uses the permissions assigned to the node<br />  IAM role. For more information, see <a href=\"https://docs.aws.amazon.com/eks/latest/userguide/create-node-role.html\">Amazon EKS node IAM role</a><br />  in the Amazon EKS User Guide.</li></ul><p>~&gt; <strong>Note:</strong> To specify an existing IAM role, you must have an IAM OpenID Connect (OIDC)<br />  provider created for your cluster. For more information, <a href=\"https://docs.aws.amazon.com/eks/latest/userguide/enable-iam-roles-for-service-accounts.html\">see Enabling IAM roles<br />  for service accounts on your cluster</a><br />  in the Amazon EKS User Guide.</p>", "attribute-reference": "<h2 id=\"attribute-reference\">Attribute Reference</h2><p>This resource exports the following attributes in addition to the arguments above:</p><ul><li><code>arn</code> - Amazon Resource Name (ARN) of the EKS add-on.</li><li><code>id</code> - EKS Cluster name and EKS Addon name separated by a colon (<code>:</code>).</li><li><code>status</code> - Status of the EKS add-on.</li><li><code>created_at</code> - Date and time in <a href=\"https://tools.ietf.org/html/rfc3339#section-5.8\">RFC3339 format</a> that the EKS add-on was created.</li><li><code>modified_at</code> - Date and time in <a href=\"https://tools.ietf.org/html/rfc3339#section-5.8\">RFC3339 format</a> that the EKS add-on was updated.</li><li><code>tags_all</code> - (Optional) Key-value map of resource tags, including those inherited from the provider <a href=\"https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block\"><code>default_tags</code> configuration block</a>.</li></ul>", "timeouts": "<h2 id=\"timeouts\">Timeouts</h2><p><a href=\"https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts\">Configuration options</a>:</p><ul><li><code>create</code> - (Default <code>20m</code>)</li><li><code>update</code> - (Default <code>20m</code>)</li><li><code>delete</code> - (Default <code>40m</code>)</li></ul>", "import": "<h2 id=\"import\">Import</h2><p>In Terraform v1.5.0 and later, use an <a href=\"https://developer.hashicorp.com/terraform/language/import\"><code>import</code> block</a> to import EKS add-on using the <code>cluster_name</code> and <code>addon_name</code> separated by a colon (<code>:</code>). For example:</p><p>terraform<br />import {<br />  to = aws_eks_addon.my_eks_addon<br />  id = \"my_cluster_name:my_addon_name\"<br />}</p><p>Using <code>terraform import</code>, import EKS add-on using the <code>cluster_name</code> and <code>addon_name</code> separated by a colon (<code>:</code>). For example:</p><p>console<br />% terraform import aws_eks_addon.my_eks_addon my_cluster_name:my_addon_name</p>", "description": "<h1 id=\"resource-aws_eks_addon\">Resource: aws_eks_addon</h1><p>Manages an EKS add-on.</p>"}