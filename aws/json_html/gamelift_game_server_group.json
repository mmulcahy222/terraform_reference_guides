{"resource-aws-gamelift-game-server-group": "<h1 id=\"resource-aws_gamelift_game_server_group\">Resource: aws_gamelift_game_server_group</h1><p>Provides an GameLift Game Server Group resource.</p>", "example-usage": "<h2 id=\"example-usage\">Example Usage</h2><p>terraform<br />resource \"aws_gamelift_game_server_group\" \"example\" {<br />  game_server_group_name = \"example\"</p><p>instance_definition {<br />    instance_type = \"c5.large\"<br />  }</p><p>instance_definition {<br />    instance_type = \"c5a.large\"<br />  }</p><p>launch_template {<br />    id = aws_launch_template.example.id<br />  }</p><p>max_size = 1<br />  min_size = 1<br />  role_arn = aws_iam_role.example.arn</p><p>depends_on = [<br />    aws_iam_role_policy_attachment.example<br />  ]<br />}<br /></p><p>Full usage:</p><p>terraform<br />resource \"aws_gamelift_game_server_group\" \"example\" {<br />  auto_scaling_policy {<br />    estimated_instance_warmup = 60<br />    target_tracking_configuration {<br />      target_value = 75<br />    }<br />  }</p><p>balancing_strategy            = \"SPOT_ONLY\"<br />  game_server_group_name        = \"example\"<br />  game_server_protection_policy = \"FULL_PROTECTION\"</p><p>instance_definition {<br />    instance_type     = \"c5.large\"<br />    weighted_capacity = \"1\"<br />  }</p><p>instance_definition {<br />    instance_type     = \"c5.2xlarge\"<br />    weighted_capacity = \"2\"<br />  }</p><p>launch_template {<br />    id      = aws_launch_template.example.id<br />    version = \"1\"<br />  }</p><p>max_size = 1<br />  min_size = 1<br />  role_arn = aws_iam_role.example.arn</p><p>tags = {<br />    Name = \"example\"<br />  }</p><p>vpc_subnets = [<br />    \"subnet-12345678\",<br />    \"subnet-23456789\"<br />  ]</p><p>depends_on = [<br />    aws_iam_role_policy_attachment.example<br />  ]<br />}<br /></p><h3 id=\"example-iam-role-for-gamelift-game-server-group\">Example IAM Role for GameLift Game Server Group</h3><p>terraform<br />data \"aws_partition\" \"current\" {}</p><p>data \"aws_iam_policy_document\" \"assume_role\" {<br />  statement {<br />    effect = \"Allow\"</p><pre><code>principals {  type = \"Service\"  identifiers = [    \"autoscaling.amazonaws.com\",    \"gamelift.amazonaws.com\",  ]}actions = [\"sts:AssumeRole\"]</code></pre><p>}<br />}</p><p>resource \"aws_iam_role\" \"example\" {<br />  assume_role_policy = data.aws_iam_policy_document.assume_role.json<br />  name               = \"gamelift-game-server-group-example\"<br />}</p><p>resource \"aws_iam_role_policy_attachment\" \"example\" {<br />  policy_arn = \"arn:${data.aws_partition.current.partition}:iam::aws:policy/GameLiftGameServerGroupPolicy\"<br />  role       = aws_iam_role.example.name<br />}<br /></p>", "argument-reference": "<h2 id=\"argument-reference\">Argument Reference</h2><p>This resource supports the following arguments:</p><ul><li><code>balancing_strategy</code> - (Optional) Indicates how GameLift FleetIQ balances the use of Spot Instances and On-Demand Instances.<br />  Valid values: <code>SPOT_ONLY</code>, <code>SPOT_PREFERRED</code>, <code>ON_DEMAND_ONLY</code>. Defaults to <code>SPOT_PREFERRED</code>.</li><li><code>game_server_group_name</code> - (Required) Name of the game server group.<br />  This value is used to generate unique ARN identifiers for the EC2 Auto Scaling group and the GameLift FleetIQ game server group.</li><li><code>game_server_protection_policy</code> - (Optional) Indicates whether instances in the game server group are protected from early termination.<br />  Unprotected instances that have active game servers running might be terminated during a scale-down event,<br />  causing players to be dropped from the game.<br />  Protected instances cannot be terminated while there are active game servers running except in the event<br />  of a forced game server group deletion.<br />  Valid values: <code>NO_PROTECTION</code>, <code>FULL_PROTECTION</code>. Defaults to <code>NO_PROTECTION</code>.</li><li><code>max_size</code> - (Required) The maximum number of instances allowed in the EC2 Auto Scaling group.<br />  During automatic scaling events, GameLift FleetIQ and EC2 do not scale up the group above this maximum.</li><li><code>min_size</code> - (Required) The minimum number of instances allowed in the EC2 Auto Scaling group.<br />  During automatic scaling events, GameLift FleetIQ and EC2 do not scale down the group below this minimum.</li><li><code>role_arn</code> - (Required) ARN for an IAM role that allows Amazon GameLift to access your EC2 Auto Scaling groups.</li><li><code>tags</code> - (Optional) Key-value map of resource tags</li><li><code>vpc_subnets</code> - (Optional) A list of VPC subnets to use with instances in the game server group.<br />  By default, all GameLift FleetIQ-supported Availability Zones are used.</li></ul><h3 id=\"auto_scaling_policy\"><code>auto_scaling_policy</code></h3><p>Configuration settings to define a scaling policy for the Auto Scaling group that is optimized for game hosting.<br />The scaling policy uses the metric <code>PercentUtilizedGameServers</code> to maintain a buffer of idle game servers that<br />can immediately accommodate new games and players.</p><ul><li><code>estimated_instance_warmup</code> - (Optional) Length of time, in seconds, it takes for a new instance to start<br />  new game server processes and register with GameLift FleetIQ.<br />  Specifying a warm-up time can be useful, particularly with game servers that take a long time to start up,<br />  because it avoids prematurely starting new instances. Defaults to <code>60</code>.</li></ul><h4 id=\"target_tracking_configuration\"><code>target_tracking_configuration</code></h4><p>Settings for a target-based scaling policy applied to Auto Scaling group.<br />These settings are used to create a target-based policy that tracks the GameLift FleetIQ metric <code>PercentUtilizedGameServers</code><br />and specifies a target value for the metric.</p><ul><li><code>target_value</code> - (Required) Desired value to use with a game server group target-based scaling policy.</li></ul><h3 id=\"instance_definition\"><code>instance_definition</code></h3><p>The EC2 instance types and sizes to use in the Auto Scaling group.<br />The instance definitions must specify at least two different instance types that are supported by GameLift FleetIQ.</p><ul><li><code>instance_type</code> - (Required) An EC2 instance type.</li><li><code>weighted_capacity</code> - (Optional) Instance weighting that indicates how much this instance type contributes<br />  to the total capacity of a game server group.<br />  Instance weights are used by GameLift FleetIQ to calculate the instance type's cost per unit hour and better identify<br />  the most cost-effective options.</li></ul><h3 id=\"launch_template\"><code>launch_template</code></h3><p>The EC2 launch template that contains configuration settings and game server code to be deployed to all instances in the game server group.<br />You can specify the template using either the template name or ID.</p><ul><li><code>id</code> - (Optional) A unique identifier for an existing EC2 launch template.</li><li><code>name</code> - (Optional) A readable identifier for an existing EC2 launch template.</li><li><code>version</code> - (Optional) The version of the EC2 launch template to use. If none is set, the default is the first version created.</li></ul>", "attribute-reference": "<h2 id=\"attribute-reference\">Attribute Reference</h2><p>This resource exports the following attributes in addition to the arguments above:</p><ul><li><code>id</code> - The name of the GameLift Game Server Group.</li><li><code>arn</code> - The ARN of the GameLift Game Server Group.</li><li><code>auto_scaling_group_arn</code> - The ARN of the created EC2 Auto Scaling group.</li></ul>", "timeouts": "<h2 id=\"timeouts\">Timeouts</h2><p><a href=\"https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts\">Configuration options</a>:</p><ul><li><code>create</code> - (Default <code>10m</code>)</li><li><code>delete</code> - (Default <code>30m</code>)</li></ul>", "import": "<h2 id=\"import\">Import</h2><p>In Terraform v1.5.0 and later, use an <a href=\"https://developer.hashicorp.com/terraform/language/import\"><code>import</code> block</a> to import GameLift Game Server Group using the <code>name</code>. For example:</p><p><code>terraformimport {  to = aws_gamelift_game_server_group.example  id = \"example\"}</code></p><p>Using <code>terraform import</code>, import GameLift Game Server Group using the <code>name</code>. For example:</p><p><code>console% terraform import aws_gamelift_game_server_group.example example</code></p>", "description": "<h1 id=\"resource-aws_gamelift_game_server_group\">Resource: aws_gamelift_game_server_group</h1><p>Provides an GameLift Game Server Group resource.</p>"}