{"resource-aws-iam-policy-attachment": "<h1 id=\"resource-aws_iam_policy_attachment\">Resource: aws_iam_policy_attachment</h1><p>Attaches a Managed IAM Policy to user(s), role(s), and/or group(s)</p><p>!&gt; <strong>WARNING:</strong> The aws_iam_policy_attachment resource creates <strong>exclusive</strong> attachments of IAM policies. Across the entire AWS account, all of the users/roles/groups to which a single policy is attached must be declared by a single aws_iam_policy_attachment resource. This means that even any users/roles/groups that have the attached policy via any other mechanism (including other Terraform resources) will have that attached policy revoked by this resource. Consider <code>aws_iam_role_policy_attachment</code>, <code>aws_iam_user_policy_attachment</code>, or <code>aws_iam_group_policy_attachment</code> instead. These resources do not enforce exclusive attachment of an IAM policy.</p><p>~&gt; <strong>NOTE:</strong> The usage of this resource conflicts with the <code>aws_iam_group_policy_attachment</code>, <code>aws_iam_role_policy_attachment</code>, and <code>aws_iam_user_policy_attachment</code> resources and will permanently show a difference if both are defined.</p><p>~&gt; <strong>NOTE:</strong> For a given role, this resource is incompatible with using the <a href=\"/docs/providers/aws/r/iam_role.html\"><code>aws_iam_role</code> resource</a> <code>managed_policy_arns</code> argument. When using that argument and this resource, both will attempt to manage the role's managed policy attachments and Terraform will show a permanent difference.</p>", "example-usage": "<h2 id=\"example-usage\">Example Usage</h2><p>terraform<br />resource \"aws_iam_user\" \"user\" {<br />  name = \"test-user\"<br />}</p><p>data \"aws_iam_policy_document\" \"assume_role\" {<br />  statement {<br />    effect = \"Allow\"</p><pre><code>principals {  type        = \"Service\"  identifiers = [\"ec2.amazonaws.com\"]}actions = [\"sts:AssumeRole\"]</code></pre><p>}<br />}</p><p>resource \"aws_iam_role\" \"role\" {<br />  name               = \"test-role\"<br />  assume_role_policy = data.aws_iam_policy_document.assume_role.json<br />}</p><p>resource \"aws_iam_group\" \"group\" {<br />  name = \"test-group\"<br />}</p><p>data \"aws_iam_policy_document\" \"policy\" {<br />  statement {<br />    effect    = \"Allow\"<br />    actions   = [\"ec2:Describe<em>\"]<br />    resources = [\"</em>\"]<br />  }<br />}</p><p>resource \"aws_iam_policy\" \"policy\" {<br />  name        = \"test-policy\"<br />  description = \"A test policy\"<br />  policy      = data.aws_iam_policy_document.policy.json<br />}</p><p>resource \"aws_iam_policy_attachment\" \"test-attach\" {<br />  name       = \"test-attachment\"<br />  users      = [aws_iam_user.user.name]<br />  roles      = [aws_iam_role.role.name]<br />  groups     = [aws_iam_group.group.name]<br />  policy_arn = aws_iam_policy.policy.arn<br />}<br /></p>", "argument-reference": "<h2 id=\"argument-reference\">Argument Reference</h2><p>This resource supports the following arguments:</p><ul><li><code>name</code>    (Required) - The name of the attachment. This cannot be an empty string.</li><li><code>users</code>   (Optional) - The user(s) the policy should be applied to</li><li><code>roles</code>   (Optional) - The role(s) the policy should be applied to</li><li><code>groups</code>  (Optional) - The group(s) the policy should be applied to</li><li><code>policy_arn</code>  (Required) - The ARN of the policy you want to apply</li></ul>", "attribute-reference": "<h2 id=\"attribute-reference\">Attribute Reference</h2><p>This resource exports the following attributes in addition to the arguments above:</p><ul><li><code>id</code> - The policy's ID.</li><li><code>name</code> - The name of the attachment.</li></ul>", "description": "<h1 id=\"resource-aws_iam_policy_attachment\">Resource: aws_iam_policy_attachment</h1><p>Attaches a Managed IAM Policy to user(s), role(s), and/or group(s)</p><p>!&gt; <strong>WARNING:</strong> The aws_iam_policy_attachment resource creates <strong>exclusive</strong> attachments of IAM policies. Across the entire AWS account, all of the users/roles/groups to which a single policy is attached must be declared by a single aws_iam_policy_attachment resource. This means that even any users/roles/groups that have the attached policy via any other mechanism (including other Terraform resources) will have that attached policy revoked by this resource. Consider <code>aws_iam_role_policy_attachment</code>, <code>aws_iam_user_policy_attachment</code>, or <code>aws_iam_group_policy_attachment</code> instead. These resources do not enforce exclusive attachment of an IAM policy.</p><p>~&gt; <strong>NOTE:</strong> The usage of this resource conflicts with the <code>aws_iam_group_policy_attachment</code>, <code>aws_iam_role_policy_attachment</code>, and <code>aws_iam_user_policy_attachment</code> resources and will permanently show a difference if both are defined.</p><p>~&gt; <strong>NOTE:</strong> For a given role, this resource is incompatible with using the <a href=\"/docs/providers/aws/r/iam_role.html\"><code>aws_iam_role</code> resource</a> <code>managed_policy_arns</code> argument. When using that argument and this resource, both will attempt to manage the role's managed policy attachments and Terraform will show a permanent difference.</p>"}