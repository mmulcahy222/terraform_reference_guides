{"resource-aws-elastic-beanstalk-application-version": "<h1 id=\"resource-aws_elastic_beanstalk_application_version\">Resource: aws_elastic_beanstalk_application_version</h1><p>Provides an Elastic Beanstalk Application Version Resource. Elastic Beanstalk allows<br />you to deploy and manage applications in the AWS cloud without worrying about<br />the infrastructure that runs those applications.</p><p>This resource creates a Beanstalk Application Version that can be deployed to a Beanstalk<br />Environment.</p><p>~&gt; <strong>NOTE on Application Version Resource:</strong>  When using the Application Version resource with multiple<br /><a href=\"elastic_beanstalk_environment.html\">Elastic Beanstalk Environments</a> it is possible that an error may be returned<br />when attempting to delete an Application Version while it is still in use by a different environment.<br />To work around this you can either create each environment in a separate AWS account or create your <code>aws_elastic_beanstalk_application_version</code> resources with a unique names in your Elastic Beanstalk Application. For example &lt;revision&gt;-&lt;environment&gt;.</p>", "example-usage": "<h2 id=\"example-usage\">Example Usage</h2><p>terraform<br />resource \"aws_s3_bucket\" \"default\" {<br />  bucket = \"tftest.applicationversion.bucket\"<br />}</p><br /><p>resource \"aws_s3_object\" \"default\" {<br />  bucket = aws_s3_bucket.default.id<br />  key    = \"beanstalk/go-v1.zip\"<br />  source = \"go-v1.zip\"<br />}</p><br /><p>resource \"aws_elastic_beanstalk_application\" \"default\" {<br />  name        = \"tf-test-name\"<br />  description = \"tf-test-desc\"<br />}</p><br /><p>resource \"aws_elastic_beanstalk_application_version\" \"default\" {<br />  name        = \"tf-test-version-label\"<br />  application = \"tf-test-name\"<br />  description = \"application version created by terraform\"<br />  bucket      = aws_s3_bucket.default.id<br />  key         = aws_s3_object.default.id<br />}</p><br />", "argument-reference": "<h2 id=\"argument-reference\">Argument Reference</h2><p>The following arguments are required:</p><ul><li><code>application</code> - (Required) Name of the Beanstalk Application the version is associated with.</li><li><code>bucket</code> - (Required) S3 bucket that contains the Application Version source bundle.</li><li><code>key</code> - (Required) S3 object that is the Application Version source bundle.</li><li><code>name</code> - (Required) Unique name for the this Application Version.</li></ul><p>The following arguments are optional:</p><ul><li><code>description</code> - (Optional) Short description of the Application Version.</li><li><code>force_delete</code> - (Optional) On delete, force an Application Version to be deleted when it may be in use by multiple Elastic Beanstalk Environments.</li><li><code>tags</code> - (Optional) Key-value map of tags for the Elastic Beanstalk Application Version. If configured with a provider <a href=\"https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block\"><code>default_tags</code> configuration block</a> present, tags with matching keys will overwrite those defined at the provider-level.</li></ul>", "attribute-reference": "<h2 id=\"attribute-reference\">Attribute Reference</h2><p>This resource exports the following attributes in addition to the arguments above:</p><ul><li><code>arn</code> - ARN assigned by AWS for this Elastic Beanstalk Application.</li><li><code>tags_all</code> - Map of tags assigned to the resource, including those inherited from the provider <a href=\"https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block\"><code>default_tags</code> configuration block</a>.</li></ul>", "description": "<h1 id=\"resource-aws_elastic_beanstalk_application_version\">Resource: aws_elastic_beanstalk_application_version</h1><p>Provides an Elastic Beanstalk Application Version Resource. Elastic Beanstalk allows<br />you to deploy and manage applications in the AWS cloud without worrying about<br />the infrastructure that runs those applications.</p><p>This resource creates a Beanstalk Application Version that can be deployed to a Beanstalk<br />Environment.</p><p>~&gt; <strong>NOTE on Application Version Resource:</strong>  When using the Application Version resource with multiple<br /><a href=\"elastic_beanstalk_environment.html\">Elastic Beanstalk Environments</a> it is possible that an error may be returned<br />when attempting to delete an Application Version while it is still in use by a different environment.<br />To work around this you can either create each environment in a separate AWS account or create your <code>aws_elastic_beanstalk_application_version</code> resources with a unique names in your Elastic Beanstalk Application. For example &lt;revision&gt;-&lt;environment&gt;.</p>"}