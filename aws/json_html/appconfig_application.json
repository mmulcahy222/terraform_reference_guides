{"resource-aws-appconfig-application": "<h1 id=\"resource-aws_appconfig_application\">Resource: aws_appconfig_application</h1><p>Provides an AppConfig Application resource.</p>", "example-usage": "<h2 id=\"example-usage\">Example Usage</h2><p>terraform<br />resource \"aws_appconfig_application\" \"example\" {<br />  name        = \"example-application-tf\"<br />  description = \"Example AppConfig Application\"</p><p>tags = {<br />    Type = \"AppConfig Application\"<br />  }<br />}<br /></p>", "argument-reference": "<h2 id=\"argument-reference\">Argument Reference</h2><p>This resource supports the following arguments:</p><ul><li><code>name</code> - (Required) Name for the application. Must be between 1 and 64 characters in length.</li><li><code>description</code> - (Optional) Description of the application. Can be at most 1024 characters.</li><li><code>tags</code> - (Optional) Map of tags to assign to the resource. If configured with a provider <a href=\"https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block\"><code>default_tags</code> configuration block</a> present, tags with matching keys will overwrite those defined at the provider-level.</li></ul>", "attribute-reference": "<h2 id=\"attribute-reference\">Attribute Reference</h2><p>This resource exports the following attributes in addition to the arguments above:</p><ul><li><code>arn</code> - ARN of the AppConfig Application.</li><li><code>id</code> - AppConfig application ID.</li><li><code>tags_all</code> - Map of tags assigned to the resource, including those inherited from the provider <a href=\"https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block\"><code>default_tags</code> configuration block</a>.</li></ul>", "import": "<h2 id=\"import\">Import</h2><p>In Terraform v1.5.0 and later, use an <a href=\"https://developer.hashicorp.com/terraform/language/import\"><code>import</code> block</a> to import AppConfig Applications using their application ID. For example:</p><p><code>terraformimport {  to = aws_appconfig_application.example  id = \"71rxuzt\"}</code></p><p>Using <code>terraform import</code>, import AppConfig Applications using their application ID. For example:</p><p><code>console% terraform import aws_appconfig_application.example 71rxuzt</code></p>", "description": "<h1 id=\"resource-aws_appconfig_application\">Resource: aws_appconfig_application</h1><p>Provides an AppConfig Application resource.</p>"}