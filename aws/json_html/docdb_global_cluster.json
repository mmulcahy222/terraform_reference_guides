{"resource-aws-docdb-global-cluster": "<h1 id=\"resource-aws_docdb_global_cluster\">Resource: aws_docdb_global_cluster</h1><p>Manages an DocumentDB Global Cluster. A global cluster consists of one primary region and up to five read-only secondary regions. You issue write operations directly to the primary cluster in the primary region and Amazon DocumentDB automatically replicates the data to the secondary regions using dedicated infrastructure.</p><p>More information about DocumentDB Global Clusters can be found in the <a href=\"https://docs.aws.amazon.com/documentdb/latest/developerguide/global-clusters.html\">DocumentDB Developer Guide</a>.</p>", "example-usage": "<h2 id=\"example-usage\">Example Usage</h2><h3 id=\"new-documentdb-global-cluster\">New DocumentDB Global Cluster</h3><p>terraform<br />provider \"aws\" {<br />  alias  = \"primary\"<br />  region = \"us-east-2\"<br />}</p><p>provider \"aws\" {<br />  alias  = \"secondary\"<br />  region = \"us-east-1\"<br />}</p><p>resource \"aws_docdb_global_cluster\" \"example\" {<br />  global_cluster_identifier = \"global-test\"<br />  engine                    = \"docdb\"<br />  engine_version            = \"4.0.0\"<br />}</p><p>resource \"aws_docdb_cluster\" \"primary\" {<br />  provider                  = aws.primary<br />  engine                    = aws_docdb_global_cluster.example.engine<br />  engine_version            = aws_docdb_global_cluster.example.engine_version<br />  cluster_identifier        = \"test-primary-cluster\"<br />  master_username           = \"username\"<br />  master_password           = \"somepass123\"<br />  global_cluster_identifier = aws_docdb_global_cluster.example.id<br />  db_subnet_group_name      = \"default\"<br />}</p><p>resource \"aws_docdb_cluster_instance\" \"primary\" {<br />  provider           = aws.primary<br />  engine             = aws_docdb_global_cluster.example.engine<br />  identifier         = \"test-primary-cluster-instance\"<br />  cluster_identifier = aws_docdb_cluster.primary.id<br />  instance_class     = \"db.r5.large\"<br />}</p><p>resource \"aws_docdb_cluster\" \"secondary\" {<br />  provider                  = aws.secondary<br />  engine                    = aws_docdb_global_cluster.example.engine<br />  engine_version            = aws_docdb_global_cluster.example.engine_version<br />  cluster_identifier        = \"test-secondary-cluster\"<br />  global_cluster_identifier = aws_docdb_global_cluster.example.id<br />  db_subnet_group_name      = \"default\"</p><p>depends_on = [<br />    aws_docdb_cluster.primary<br />  ]<br />}</p><p>resource \"aws_docdb_cluster_instance\" \"secondary\" {<br />  provider           = aws.secondary<br />  engine             = aws_docdb_global_cluster.example.engine<br />  identifier         = \"test-secondary-cluster-instance\"<br />  cluster_identifier = aws_docdb_cluster.secondary.id<br />  instance_class     = \"db.r5.large\"</p><p>depends_on = [<br />    aws_docdb_cluster_instance.primary<br />  ]<br />}<br /></p><h3 id=\"new-global-cluster-from-existing-db-cluster\">New Global Cluster From Existing DB Cluster</h3><p>terraform<br />resource \"aws_docdb_cluster\" \"example\" {<br />  # ... other configuration ...</p><p># NOTE: Using this DB Cluster to create a Global Cluster, the<br />  # global_cluster_identifier attribute will become populated and<br />  # Terraform will begin showing it as a difference. Do not configure:<br />  # global_cluster_identifier = aws_docdb_global_cluster.example.id<br />  # as it creates a circular reference. Use ignore_changes instead.<br />  lifecycle {<br />    ignore_changes = [global_cluster_identifier]<br />  }<br />}</p><p>resource \"aws_docdb_global_cluster\" \"example\" {<br />  global_cluster_identifier    = \"example\"<br />  source_db_cluster_identifier = aws_docdb_cluster.example.arn<br />}<br /></p>", "argument-reference": "<h2 id=\"argument-reference\">Argument Reference</h2><p>This resource supports the following arguments:</p><ul><li><code>global_cluster_identifier</code> - (Required, Forces new resources) The global cluster identifier.</li><li><code>database_name</code> - (Optional, Forces new resources) Name for an automatically created database on cluster creation.</li><li><code>deletion_protection</code> - (Optional) If the Global Cluster should have deletion protection enabled. The database can't be deleted when this value is set to <code>true</code>. The default is <code>false</code>.</li><li><code>engine</code> - (Optional, Forces new resources) Name of the database engine to be used for this DB cluster. Terraform will only perform drift detection if a configuration value is provided. Current Valid values: <code>docdb</code>. Defaults to <code>docdb</code>. Conflicts with <code>source_db_cluster_identifier</code>.</li><li><code>engine_version</code> - (Optional) Engine version of the global database. Upgrading the engine version will result in all cluster members being immediately updated and will.<ul><li><strong>NOTE:</strong> Upgrading major versions is not supported.</li></ul></li><li><code>source_db_cluster_identifier</code> - (Optional) Amazon Resource Name (ARN) to use as the primary DB Cluster of the Global Cluster on creation. Terraform cannot perform drift detection of this value.</li><li><code>storage_encrypted</code> - (Optional, Forces new resources) Specifies whether the DB cluster is encrypted. The default is <code>false</code> unless <code>source_db_cluster_identifier</code> is specified and encrypted. Terraform will only perform drift detection if a configuration value is provided.</li></ul>", "attribute-reference": "<h2 id=\"attribute-reference\">Attribute Reference</h2><p>This resource exports the following attributes in addition to the arguments above:</p><ul><li><code>arn</code> - Global Cluster Amazon Resource Name (ARN)</li><li><code>global_cluster_members</code> - Set of objects containing Global Cluster members.<ul><li><code>db_cluster_arn</code> - Amazon Resource Name (ARN) of member DB Cluster.</li><li><code>is_writer</code> - Whether the member is the primary DB Cluster.</li></ul></li><li><code>global_cluster_resource_id</code> - AWS Region-unique, immutable identifier for the global database cluster. This identifier is found in AWS CloudTrail log entries whenever the AWS KMS key for the DB cluster is accessed.</li><li><code>id</code> - DocumentDB Global Cluster ID.</li></ul>", "timeouts": "<h2 id=\"timeouts\">Timeouts</h2><p><a href=\"https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts\">Configuration options</a>:</p><ul><li><code>create</code> - (Default <code>5m</code>)</li><li><code>update</code> - (Default <code>5m</code>)</li><li><code>delete</code> - (Default <code>5m</code>)</li></ul>", "import": "<h2 id=\"import\">Import</h2><p>In Terraform v1.5.0 and later, use an <a href=\"https://developer.hashicorp.com/terraform/language/import\"><code>import</code> block</a> to import <code>aws_docdb_global_cluster</code> using the Global Cluster identifier. For example:</p><p><code>terraformimport {  to = aws_docdb_global_cluster.example  id = \"example\"}</code></p><p>Using <code>terraform import</code>, import <code>aws_docdb_global_cluster</code> using the Global Cluster identifier. For example:</p><p><code>console% terraform import aws_docdb_global_cluster.example example</code></p><p>Certain resource arguments, like <code>source_db_cluster_identifier</code>, do not have an API method for reading the information after creation. If the argument is set in the Terraform configuration on an imported resource, Terraform will always show a difference. To workaround this behavior, either omit the argument from the Terraform configuration or use <a href=\"https://www.terraform.io/docs/configuration/meta-arguments/lifecycle.html#ignore_changes\"><code>ignore_changes</code></a> to hide the difference. For example:</p><p>terraform<br />resource \"aws_docdb_global_cluster\" \"example\" {<br />  # ... other configuration ...</p><p># There is no API for reading source_db_cluster_identifier<br />  lifecycle {<br />    ignore_changes = [source_db_cluster_identifier]<br />  }<br />}<br /></p>", "description": "<h1 id=\"resource-aws_docdb_global_cluster\">Resource: aws_docdb_global_cluster</h1><p>Manages an DocumentDB Global Cluster. A global cluster consists of one primary region and up to five read-only secondary regions. You issue write operations directly to the primary cluster in the primary region and Amazon DocumentDB automatically replicates the data to the secondary regions using dedicated infrastructure.</p><p>More information about DocumentDB Global Clusters can be found in the <a href=\"https://docs.aws.amazon.com/documentdb/latest/developerguide/global-clusters.html\">DocumentDB Developer Guide</a>.</p>"}