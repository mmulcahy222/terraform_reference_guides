{"resource-aws-key-pair": "<h1 id=\"resource-aws_key_pair\">Resource: aws_key_pair</h1><p>Provides an <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-key-pairs.html\">EC2 key pair</a> resource. A key pair is used to control login access to EC2 instances.</p><p>Currently this resource requires an existing user-supplied key pair. This key pair's public key will be registered with AWS to allow logging-in to EC2 instances.</p><p>When importing an existing key pair the public key material may be in any format supported by AWS. Supported formats (per the <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-key-pairs.html#how-to-generate-your-own-key-and-import-it-to-aws\">AWS documentation</a>) are:</p><ul><li>OpenSSH public key format (the format in ~/.ssh/authorized_keys)</li><li>Base64 encoded DER format</li><li>SSH public key file format as specified in RFC4716</li></ul>", "example-usage": "<h2 id=\"example-usage\">Example Usage</h2><p>terraform<br />resource \"aws_key_pair\" \"deployer\" {<br />  key_name   = \"deployer-key\"<br />  public_key = \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQD3F6tyPEFEzV0LX3X8BsXdMsQz1x2cEikKDEY0aIj41qgxMCP/iteneqXSIFZBp5vizPvaoIR3Um9xK7PGoW8giupGn+EPuxIA4cDM4vzOqOkiMPhz5XK0whEjkVzTo4+S0puvDZuwIsdiW9mxhJc7tgBNL0cYlWSYVkz4G/fslNfRPW5mYAM49f4fhtxPb5ok4Q2Lg9dPKVHO/Bgeu5woMc7RY0p1ej6D4CKFE6lymSDJpW0YHX/wqE9+cfEauh7xZcG0q9t2ta6F6fmX0agvpFyZo8aFbXeUBr7osSCJNgvavWbM/06niWrOvYX2xwWdhXmXSrbX8ZbabVohBK41 email@example.com\"<br />}</p><br />", "argument-reference": "<h2 id=\"argument-reference\">Argument Reference</h2><p>This resource supports the following arguments:</p><ul><li><code>key_name</code> - (Optional) The name for the key pair. If neither <code>key_name</code> nor <code>key_name_prefix</code> is provided, Terraform will create a unique key name using the prefix <code>terraform-</code>.</li><li><code>key_name_prefix</code> - (Optional) Creates a unique name beginning with the specified prefix. Conflicts with <code>key_name</code>. If neither <code>key_name</code> nor <code>key_name_prefix</code> is provided, Terraform will create a unique key name using the prefix <code>terraform-</code>.</li><li><code>public_key</code> - (Required) The public key material.</li><li><code>tags</code> - (Optional) Key-value map of resource tags. If configured with a provider <a href=\"https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block\"><code>default_tags</code> configuration block</a> present, tags with matching keys will overwrite those defined at the provider-level.</li></ul>", "attribute-reference": "<h2 id=\"attribute-reference\">Attribute Reference</h2><p>This resource exports the following attributes in addition to the arguments above:</p><ul><li><code>id</code> - The key pair name.</li><li><code>arn</code> - The key pair ARN.</li><li><code>key_name</code> - The key pair name.</li><li><code>key_pair_id</code> - The key pair ID.</li><li><code>key_type</code> - The type of key pair.</li><li><code>fingerprint</code> - The MD5 public key fingerprint as specified in section 4 of RFC 4716.</li><li><code>tags_all</code> - A map of tags assigned to the resource, including those inherited from the provider <a href=\"https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block\"><code>default_tags</code> configuration block</a>.</li></ul>", "import": "<h2 id=\"import\">Import</h2><p>In Terraform v1.5.0 and later, use an <a href=\"https://developer.hashicorp.com/terraform/language/import\"><code>import</code> block</a> to import Key Pairs using the <code>key_name</code>. For example:</p><p>terraform<br />import {<br />  to = aws_key_pair.deployer<br />  id = \"deployer-key\"<br />}</p><p>Using <code>terraform import</code>, import Key Pairs using the <code>key_name</code>. For example:</p><p>console<br />% terraform import aws_key_pair.deployer deployer-key</p><p>~&gt; <strong>NOTE:</strong> The AWS API does not include the public key in the response, so <code>terraform apply</code> will attempt to replace the key pair. There is currently no supported workaround for this limitation.</p>", "description": "<h1 id=\"resource-aws_key_pair\">Resource: aws_key_pair</h1><p>Provides an <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-key-pairs.html\">EC2 key pair</a> resource. A key pair is used to control login access to EC2 instances.</p><p>Currently this resource requires an existing user-supplied key pair. This key pair's public key will be registered with AWS to allow logging-in to EC2 instances.</p><p>When importing an existing key pair the public key material may be in any format supported by AWS. Supported formats (per the <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-key-pairs.html#how-to-generate-your-own-key-and-import-it-to-aws\">AWS documentation</a>) are:</p><ul><li>OpenSSH public key format (the format in ~/.ssh/authorized_keys)</li><li>Base64 encoded DER format</li><li>SSH public key file format as specified in RFC4716</li></ul>"}