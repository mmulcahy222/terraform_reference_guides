{"resource-aws-s3-bucket-lifecycle-configuration": "<h1 id=\"resource-aws_s3_bucket_lifecycle_configuration\">Resource: aws_s3_bucket_lifecycle_configuration</h1><p>Provides an independent configuration resource for S3 bucket <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-lifecycle-mgmt.html\">lifecycle configuration</a>.</p><p>An S3 Lifecycle configuration consists of one or more Lifecycle rules. Each rule consists of the following:</p><ul><li>Rule metadata (<code>id</code> and <code>status</code>)</li><li><a href=\"#filter\">Filter</a> identifying objects to which the rule applies</li><li>One or more transition or expiration actions</li></ul><p>For more information see the Amazon S3 User Guide on <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/intro-lifecycle-rules.html\"><code>Lifecycle Configuration Elements</code></a>.</p><p>~&gt; <strong>NOTE:</strong> S3 Buckets only support a single lifecycle configuration. Declaring multiple <code>aws_s3_bucket_lifecycle_configuration</code> resources to the same S3 Bucket will cause a perpetual difference in configuration.</p><p>~&gt; <strong>NOTE:</strong> Lifecycle configurations may take some time to fully propagate to all AWS S3 systems.<br />Running Terraform operations shortly after creating a lifecycle configuration may result in changes that affect configuration idempotence.<br />See the Amazon S3 User Guide on <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/how-to-set-lifecycle-configuration-intro.html\">setting lifecycle configuration on a bucket</a>.</p>", "example-usage": "<h2 id=\"example-usage\">Example Usage</h2><h3 id=\"with-neither-a-filter-nor-prefix-specified\">With neither a filter nor prefix specified</h3><br /><p>The Lifecycle rule applies to a subset of objects based on the key name prefix (<code>\"\"</code>).</p><br /><p>This configuration is intended to replicate the default behavior of the <code>lifecycle_rule</code><br />parameter in the Terraform AWS Provider <code>aws_s3_bucket</code> resource prior to <code>v4.0</code>.</p><br /><p>terraform<br />resource \"aws_s3_bucket_lifecycle_configuration\" \"example\" {<br />  bucket = aws_s3_bucket.bucket.id</p><br /><p>rule {<br />    id = \"rule-1\"</p><br /><pre><code># ... other transition/expiration actions ...<br /><br />status = \"Enabled\"<br /></code></pre><br /><p>}<br />}</p><br /><h3 id=\"specifying-an-empty-filter\">Specifying an empty filter</h3><br /><p>The Lifecycle rule applies to all objects in the bucket.</p><br /><p>terraform<br />resource \"aws_s3_bucket_lifecycle_configuration\" \"example\" {<br />  bucket = aws_s3_bucket.bucket.id</p><br /><p>rule {<br />    id = \"rule-1\"</p><br /><pre><code>filter {}<br /><br /># ... other transition/expiration actions ...<br /><br />status = \"Enabled\"<br /></code></pre><br /><p>}<br />}</p><br /><h3 id=\"specifying-a-filter-using-key-prefixes\">Specifying a filter using key prefixes</h3><br /><p>The Lifecycle rule applies to a subset of objects based on the key name prefix (<code>logs/</code>).</p><br /><p>terraform<br />resource \"aws_s3_bucket_lifecycle_configuration\" \"example\" {<br />  bucket = aws_s3_bucket.bucket.id</p><br /><p>rule {<br />    id = \"rule-1\"</p><br /><pre><code>filter {<br />  prefix = \"logs/\"<br />}<br /><br /># ... other transition/expiration actions ...<br /><br />status = \"Enabled\"<br /></code></pre><br /><p>}<br />}</p><br /><p>If you want to apply a Lifecycle action to a subset of objects based on different key name prefixes, specify separate rules.</p><br /><p>terraform<br />resource \"aws_s3_bucket_lifecycle_configuration\" \"example\" {<br />  bucket = aws_s3_bucket.bucket.id</p><br /><p>rule {<br />    id = \"rule-1\"</p><br /><pre><code>filter {<br />  prefix = \"logs/\"<br />}<br /><br /># ... other transition/expiration actions ...<br /><br />status = \"Enabled\"<br /></code></pre><br /><p>}</p><br /><p>rule {<br />    id = \"rule-2\"</p><br /><pre><code>filter {<br />  prefix = \"tmp/\"<br />}<br /><br /># ... other transition/expiration actions ...<br /><br />status = \"Enabled\"<br /></code></pre><br /><p>}<br />}</p><br /><h3 id=\"specifying-a-filter-based-on-an-object-tag\">Specifying a filter based on an object tag</h3><br /><p>The Lifecycle rule specifies a filter based on a tag key and value. The rule then applies only to a subset of objects with the specific tag.</p><br /><p>terraform<br />resource \"aws_s3_bucket_lifecycle_configuration\" \"example\" {<br />  bucket = aws_s3_bucket.bucket.id</p><br /><p>rule {<br />    id = \"rule-1\"</p><br /><pre><code>filter {<br />  tag {<br />    key   = \"Name\"<br />    value = \"Staging\"<br />  }<br />}<br /><br /># ... other transition/expiration actions ...<br /><br />status = \"Enabled\"<br /></code></pre><br /><p>}<br />}</p><br /><h3 id=\"specifying-a-filter-based-on-multiple-tags\">Specifying a filter based on multiple tags</h3><br /><p>The Lifecycle rule directs Amazon S3 to perform lifecycle actions on objects with two tags (with the specific tag keys and values). Notice <code>tags</code> is wrapped in the <code>and</code> configuration block.</p><br /><p>terraform<br />resource \"aws_s3_bucket_lifecycle_configuration\" \"example\" {<br />  bucket = aws_s3_bucket.bucket.id</p><br /><p>rule {<br />    id = \"rule-1\"</p><br /><pre><code>filter {<br />  and {<br />    tags = {<br />      Key1 = \"Value1\"<br />      Key2 = \"Value2\"<br />    }<br />  }<br />}<br /><br /># ... other transition/expiration actions ...<br /><br />status = \"Enabled\"<br /></code></pre><br /><p>}<br />}</p><br /><h3 id=\"specifying-a-filter-based-on-both-prefix-and-one-or-more-tags\">Specifying a filter based on both prefix and one or more tags</h3><br /><p>The Lifecycle rule directs Amazon S3 to perform lifecycle actions on objects with the specified prefix and two tags (with the specific tag keys and values). Notice both <code>prefix</code> and <code>tags</code> are wrapped in the <code>and</code> configuration block.</p><br /><p>terraform<br />resource \"aws_s3_bucket_lifecycle_configuration\" \"example\" {<br />  bucket = aws_s3_bucket.bucket.id</p><br /><p>rule {<br />    id = \"rule-1\"</p><br /><pre><code>filter {<br />  and {<br />    prefix = \"logs/\"<br />    tags = {<br />      Key1 = \"Value1\"<br />      Key2 = \"Value2\"<br />    }<br />  }<br />}<br /><br /># ... other transition/expiration actions ...<br /><br />status = \"Enabled\"<br /></code></pre><br /><p>}<br />}</p><br /><h3 id=\"specifying-a-filter-based-on-object-size\">Specifying a filter based on object size</h3><br /><p>Object size values are in bytes. Maximum filter size is 5TB. Some storage classes have minimum object size limitations, for more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/storage-class-intro.html#sc-compare\">Comparing the Amazon S3 storage classes</a>.</p><br /><p>terraform<br />resource \"aws_s3_bucket_lifecycle_configuration\" \"example\" {<br />  bucket = aws_s3_bucket.bucket.id</p><br /><p>rule {<br />    id = \"rule-1\"</p><br /><pre><code>filter {<br />  object_size_greater_than = 500<br />}<br /><br /># ... other transition/expiration actions ...<br /><br />status = \"Enabled\"<br /></code></pre><br /><p>}<br />}</p><br /><h3 id=\"specifying-a-filter-based-on-object-size-range-and-prefix\">Specifying a filter based on object size range and prefix</h3><br /><p>The <code>object_size_greater_than</code> must be less than the <code>object_size_less_than</code>. Notice both the object size range and prefix are wrapped in the <code>and</code> configuration block.</p><br /><p>terraform<br />resource \"aws_s3_bucket_lifecycle_configuration\" \"example\" {<br />  bucket = aws_s3_bucket.bucket.id</p><br /><p>rule {<br />    id = \"rule-1\"</p><br /><pre><code>filter {<br />  and {<br />    prefix                   = \"logs/\"<br />    object_size_greater_than = 500<br />    object_size_less_than    = 64000<br />  }<br />}<br /><br /># ... other transition/expiration actions ...<br /><br />status = \"Enabled\"<br /></code></pre><br /><p>}<br />}</p><br /><h3 id=\"creating-a-lifecycle-configuration-for-a-bucket-with-versioning\">Creating a Lifecycle Configuration for a bucket with versioning</h3><br /><p>terraform<br />resource \"aws_s3_bucket\" \"bucket\" {<br />  bucket = \"my-bucket\"<br />}</p><br /><p>resource \"aws_s3_bucket_acl\" \"bucket_acl\" {<br />  bucket = aws_s3_bucket.bucket.id<br />  acl    = \"private\"<br />}</p><br /><p>resource \"aws_s3_bucket_lifecycle_configuration\" \"bucket-config\" {<br />  bucket = aws_s3_bucket.bucket.id</p><br /><p>rule {<br />    id = \"log\"</p><br /><pre><code>expiration {<br />  days = 90<br />}<br /><br />filter {<br />  and {<br />    prefix = \"log/\"<br /><br />    tags = {<br />      rule      = \"log\"<br />      autoclean = \"true\"<br />    }<br />  }<br />}<br /><br />status = \"Enabled\"<br /><br />transition {<br />  days          = 30<br />  storage_class = \"STANDARD_IA\"<br />}<br /><br />transition {<br />  days          = 60<br />  storage_class = \"GLACIER\"<br />}<br /></code></pre><br /><p>}</p><br /><p>rule {<br />    id = \"tmp\"</p><br /><pre><code>filter {<br />  prefix = \"tmp/\"<br />}<br /><br />expiration {<br />  date = \"2023-01-13T00:00:00Z\"<br />}<br /><br />status = \"Enabled\"<br /></code></pre><br /><p>}<br />}</p><br /><p>resource \"aws_s3_bucket\" \"versioning_bucket\" {<br />  bucket = \"my-versioning-bucket\"<br />}</p><br /><p>resource \"aws_s3_bucket_acl\" \"versioning_bucket_acl\" {<br />  bucket = aws_s3_bucket.versioning_bucket.id<br />  acl    = \"private\"<br />}</p><br /><p>resource \"aws_s3_bucket_versioning\" \"versioning\" {<br />  bucket = aws_s3_bucket.versioning_bucket.id<br />  versioning_configuration {<br />    status = \"Enabled\"<br />  }<br />}</p><br /><p>resource \"aws_s3_bucket_lifecycle_configuration\" \"versioning-bucket-config\" {<br />  # Must have bucket versioning enabled first<br />  depends_on = [aws_s3_bucket_versioning.versioning]</p><br /><p>bucket = aws_s3_bucket.versioning_bucket.id</p><br /><p>rule {<br />    id = \"config\"</p><br /><pre><code>filter {<br />  prefix = \"config/\"<br />}<br /><br />noncurrent_version_expiration {<br />  noncurrent_days = 90<br />}<br /><br />noncurrent_version_transition {<br />  noncurrent_days = 30<br />  storage_class   = \"STANDARD_IA\"<br />}<br /><br />noncurrent_version_transition {<br />  noncurrent_days = 60<br />  storage_class   = \"GLACIER\"<br />}<br /><br />status = \"Enabled\"<br /></code></pre><br /><p>}<br />}</p><br />", "argument-reference": "<h2 id=\"argument-reference\">Argument Reference</h2><p>This resource supports the following arguments:</p><ul><li><code>bucket</code> - (Required) Name of the source S3 bucket you want Amazon S3 to monitor.</li><li><code>expected_bucket_owner</code> - (Optional) Account ID of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP 403 (Access Denied) error.</li><li><code>rule</code> - (Required) List of configuration blocks describing the rules managing the replication. <a href=\"#rule\">See below</a>.</li></ul><h3 id=\"rule\">rule</h3><p>~&gt; <strong>NOTE:</strong> The <code>filter</code> argument, while Optional, is required if the <code>rule</code> configuration block does not contain a <code>prefix</code> <strong>and</strong> you intend to override the default behavior of setting the rule to filter objects with the empty string prefix (<code>\"\"</code>).<br />Since <code>prefix</code> is deprecated by Amazon S3 and will be removed in the next major version of the Terraform AWS Provider, we recommend users either specify <code>filter</code> or leave both <code>filter</code> and <code>prefix</code> unspecified.</p><p>~&gt; <strong>NOTE:</strong> A rule cannot be updated from having a filter (via either the <code>rule.filter</code> parameter or when neither <code>rule.filter</code> and <code>rule.prefix</code> are specified) to only having a prefix via the <code>rule.prefix</code> parameter.</p><p>~&gt; <strong>NOTE</strong> Terraform cannot distinguish a difference between configurations that use <code>rule.filter {}</code> and configurations that neither use <code>rule.filter</code> nor <code>rule.prefix</code>, so a rule cannot be updated from applying to all objects in the bucket via <code>rule.filter {}</code> to applying to a subset of objects based on the key prefix <code>\"\"</code> and vice versa.</p><p>The <code>rule</code> configuration block supports the following arguments:</p><ul><li><code>abort_incomplete_multipart_upload</code> - (Optional) Configuration block that specifies the days since the initiation of an incomplete multipart upload that Amazon S3 will wait before permanently removing all parts of the upload. <a href=\"#abort_incomplete_multipart_upload\">See below</a>.</li><li><code>expiration</code> - (Optional) Configuration block that specifies the expiration for the lifecycle of the object in the form of date, days and, whether the object has a delete marker. <a href=\"#expiration\">See below</a>.</li><li><code>filter</code> - (Optional) Configuration block used to identify objects that a Lifecycle Rule applies to. <a href=\"#filter\">See below</a>. If not specified, the <code>rule</code> will default to using <code>prefix</code>.</li><li><code>id</code> - (Required) Unique identifier for the rule. The value cannot be longer than 255 characters.</li><li><code>noncurrent_version_expiration</code> - (Optional) Configuration block that specifies when noncurrent object versions expire. <a href=\"#noncurrent_version_expiration\">See below</a>.</li><li><code>noncurrent_version_transition</code> - (Optional) Set of configuration blocks that specify the transition rule for the lifecycle rule that describes when noncurrent objects transition to a specific storage class. <a href=\"#noncurrent_version_transition\">See below</a>.</li><li><code>prefix</code> - (Optional) <strong>DEPRECATED</strong> Use <code>filter</code> instead. This has been deprecated by Amazon S3. Prefix identifying one or more objects to which the rule applies. Defaults to an empty string (<code>\"\"</code>) if <code>filter</code> is not specified.</li><li><code>status</code> - (Required) Whether the rule is currently being applied. Valid values: <code>Enabled</code> or <code>Disabled</code>.</li><li><code>transition</code> - (Optional) Set of configuration blocks that specify when an Amazon S3 object transitions to a specified storage class. <a href=\"#transition\">See below</a>.</li></ul><h3 id=\"abort_incomplete_multipart_upload\">abort_incomplete_multipart_upload</h3><p>The <code>abort_incomplete_multipart_upload</code> configuration block supports the following arguments:</p><ul><li><code>days_after_initiation</code> - Number of days after which Amazon S3 aborts an incomplete multipart upload.</li></ul><h3 id=\"expiration\">expiration</h3><p>The <code>expiration</code> configuration block supports the following arguments:</p><ul><li><code>date</code> - (Optional) Date the object is to be moved or deleted. The date value must be in <a href=\"https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\">RFC3339 full-date format</a> e.g. <code>2023-08-22</code>.</li><li><code>days</code> - (Optional) Lifetime, in days, of the objects that are subject to the rule. The value must be a non-zero positive integer.</li><li><code>expired_object_delete_marker</code> - (Optional, Conflicts with <code>date</code> and <code>days</code>) Indicates whether Amazon S3 will remove a delete marker with no noncurrent versions. If set to <code>true</code>, the delete marker will be expired; if set to <code>false</code> the policy takes no action.</li></ul><h3 id=\"filter\">filter</h3><p>~&gt; <strong>NOTE:</strong> The <code>filter</code> configuration block must either be specified as the empty configuration block (<code>filter {}</code>) or with exactly one of <code>prefix</code>, <code>tag</code>, <code>and</code>, <code>object_size_greater_than</code> or <code>object_size_less_than</code> specified.</p><p>The <code>filter</code> configuration block supports the following arguments:</p><ul><li><code>and</code>- (Optional) Configuration block used to apply a logical <code>AND</code> to two or more predicates. <a href=\"#and\">See below</a>. The Lifecycle Rule will apply to any object matching all the predicates configured inside the <code>and</code> block.</li><li><code>object_size_greater_than</code> - (Optional) Minimum object size (in bytes) to which the rule applies.</li><li><code>object_size_less_than</code> - (Optional) Maximum object size (in bytes) to which the rule applies.</li><li><code>prefix</code> - (Optional) Prefix identifying one or more objects to which the rule applies. Defaults to an empty string (<code>\"\"</code>) if not specified.</li><li><code>tag</code> - (Optional) Configuration block for specifying a tag key and value. <a href=\"#tag\">See below</a>.</li></ul><h3 id=\"noncurrent_version_expiration\">noncurrent_version_expiration</h3><p>The <code>noncurrent_version_expiration</code> configuration block supports the following arguments:</p><ul><li><code>newer_noncurrent_versions</code> - (Optional) Number of noncurrent versions Amazon S3 will retain. Must be a non-zero positive integer.</li><li><code>noncurrent_days</code> - (Optional) Number of days an object is noncurrent before Amazon S3 can perform the associated action. Must be a positive integer.</li></ul><h3 id=\"noncurrent_version_transition\">noncurrent_version_transition</h3><p>The <code>noncurrent_version_transition</code> configuration block supports the following arguments:</p><ul><li><code>newer_noncurrent_versions</code> - (Optional) Number of noncurrent versions Amazon S3 will retain. Must be a non-zero positive integer.</li><li><code>noncurrent_days</code> - (Optional) Number of days an object is noncurrent before Amazon S3 can perform the associated action.</li><li><code>storage_class</code> - (Required) Class of storage used to store the object. Valid Values: <code>GLACIER</code>, <code>STANDARD_IA</code>, <code>ONEZONE_IA</code>, <code>INTELLIGENT_TIERING</code>, <code>DEEP_ARCHIVE</code>, <code>GLACIER_IR</code>.</li></ul><h3 id=\"transition\">transition</h3><p>The <code>transition</code> configuration block supports the following arguments:</p><p>~&gt; <strong>Note:</strong> Only one of <code>date</code> or <code>days</code> should be specified. If neither are specified, the <code>transition</code> will default to 0 <code>days</code>.</p><ul><li><code>date</code> - (Optional, Conflicts with <code>days</code>) Date objects are transitioned to the specified storage class. The date value must be in <a href=\"https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\">RFC3339 full-date format</a> e.g. <code>2023-08-22</code>.</li><li><code>days</code> - (Optional, Conflicts with <code>date</code>) Number of days after creation when objects are transitioned to the specified storage class. The value must be a positive integer. If both <code>days</code> and <code>date</code> are not specified, defaults to <code>0</code>. Valid values depend on <code>storage_class</code>, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/lifecycle-transition-general-considerations.html\">Transition objects using Amazon S3 Lifecycle</a> for more details.</li><li><code>storage_class</code> - Class of storage used to store the object. Valid Values: <code>GLACIER</code>, <code>STANDARD_IA</code>, <code>ONEZONE_IA</code>, <code>INTELLIGENT_TIERING</code>, <code>DEEP_ARCHIVE</code>, <code>GLACIER_IR</code>.</li></ul><h3 id=\"and\">and</h3><p>The <code>and</code> configuration block supports the following arguments:</p><ul><li><code>object_size_greater_than</code> - (Optional) Minimum object size to which the rule applies. Value must be at least <code>0</code> if specified.</li><li><code>object_size_less_than</code> - (Optional) Maximum object size to which the rule applies. Value must be at least <code>1</code> if specified.</li><li><code>prefix</code> - (Optional) Prefix identifying one or more objects to which the rule applies.</li><li><code>tags</code> - (Optional) Key-value map of resource tags. All of these tags must exist in the object's tag set in order for the rule to apply.</li></ul><h3 id=\"tag\">tag</h3><p>The <code>tag</code> configuration block supports the following arguments:</p><ul><li><code>key</code> - (Required) Name of the object key.</li><li><code>value</code> - (Required) Value of the tag.</li></ul>", "attribute-reference": "<h2 id=\"attribute-reference\">Attribute Reference</h2><p>This resource exports the following attributes in addition to the arguments above:</p><ul><li><code>id</code> - The <code>bucket</code> or <code>bucket</code> and <code>expected_bucket_owner</code> separated by a comma (<code>,</code>) if the latter is provided.</li></ul>", "import": "<h2 id=\"import\">Import</h2><p>In Terraform v1.5.0 and later, use an <a href=\"https://developer.hashicorp.com/terraform/language/import\"><code>import</code> block</a> to import S3 bucket lifecycle configuration using the <code>bucket</code> or using the <code>bucket</code> and <code>expected_bucket_owner</code> separated by a comma (<code>,</code>). For example:</p><p>If the owner (account ID) of the source bucket is the same account used to configure the Terraform AWS Provider, import using the <code>bucket</code>:</p><p>terraform<br />import {<br />  to = aws_s3_bucket_lifecycle_configuration.example<br />  id = \"bucket-name\"<br />}</p><p>If the owner (account ID) of the source bucket differs from the account used to configure the Terraform AWS Provider, import using the <code>bucket</code> and <code>expected_bucket_owner</code> separated by a comma (<code>,</code>):</p><p>terraform<br />import {<br />  to = aws_s3_bucket_lifecycle_configuration.example<br />  id = \"bucket-name,123456789012\"<br />}</p><p><strong>Using <code>terraform import</code> to import</strong> S3 bucket lifecycle configuration using the <code>bucket</code> or using the <code>bucket</code> and <code>expected_bucket_owner</code> separated by a comma (<code>,</code>). For example:</p><p>If the owner (account ID) of the source bucket is the same account used to configure the Terraform AWS Provider, import using the <code>bucket</code>:</p><p>console<br />% terraform import aws_s3_bucket_lifecycle_configuration.example bucket-name</p><p>If the owner (account ID) of the source bucket differs from the account used to configure the Terraform AWS Provider, import using the <code>bucket</code> and <code>expected_bucket_owner</code> separated by a comma (<code>,</code>):</p><p>console<br />% terraform import aws_s3_bucket_lifecycle_configuration.example bucket-name,123456789012</p>", "description": "<h1 id=\"resource-aws_s3_bucket_lifecycle_configuration\">Resource: aws_s3_bucket_lifecycle_configuration</h1><p>Provides an independent configuration resource for S3 bucket <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-lifecycle-mgmt.html\">lifecycle configuration</a>.</p><p>An S3 Lifecycle configuration consists of one or more Lifecycle rules. Each rule consists of the following:</p><ul><li>Rule metadata (<code>id</code> and <code>status</code>)</li><li><a href=\"#filter\">Filter</a> identifying objects to which the rule applies</li><li>One or more transition or expiration actions</li></ul><p>For more information see the Amazon S3 User Guide on <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/intro-lifecycle-rules.html\"><code>Lifecycle Configuration Elements</code></a>.</p><p>~&gt; <strong>NOTE:</strong> S3 Buckets only support a single lifecycle configuration. Declaring multiple <code>aws_s3_bucket_lifecycle_configuration</code> resources to the same S3 Bucket will cause a perpetual difference in configuration.</p><p>~&gt; <strong>NOTE:</strong> Lifecycle configurations may take some time to fully propagate to all AWS S3 systems.<br />Running Terraform operations shortly after creating a lifecycle configuration may result in changes that affect configuration idempotence.<br />See the Amazon S3 User Guide on <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/how-to-set-lifecycle-configuration-intro.html\">setting lifecycle configuration on a bucket</a>.</p>"}