{"resource-aws-ec2-transit-gateway-vpc-attachment-accepter": "<h1 id=\"resource-aws_ec2_transit_gateway_vpc_attachment_accepter\">Resource: aws_ec2_transit_gateway_vpc_attachment_accepter</h1><p>Manages the accepter's side of an EC2 Transit Gateway VPC Attachment.</p><p>When a cross-account (requester's AWS account differs from the accepter's AWS account) EC2 Transit Gateway VPC Attachment<br />is created, an EC2 Transit Gateway VPC Attachment resource is automatically created in the accepter's account.<br />The requester can use the <code>aws_ec2_transit_gateway_vpc_attachment</code> resource to manage its side of the connection<br />and the accepter can use the <code>aws_ec2_transit_gateway_vpc_attachment_accepter</code> resource to \"adopt\" its side of the<br />connection into management.</p>", "example-usage": "<h2 id=\"example-usage\">Example Usage</h2><p>terraform<br />resource \"aws_ec2_transit_gateway_vpc_attachment_accepter\" \"example\" {<br />  transit_gateway_attachment_id = aws_ec2_transit_gateway_vpc_attachment.example.id</p><br /><p>tags = {<br />    Name = \"Example cross-account attachment\"<br />  }<br />}</p><br /><p>A full example of how to create a Transit Gateway in one AWS account, share it with a second AWS account, and attach a VPC in the second account to the Transit Gateway via the <code>aws_ec2_transit_gateway_vpc_attachment</code> and <code>aws_ec2_transit_gateway_vpc_attachment_accepter</code> resources can be found in <a href=\"https://github.com/hashicorp/terraform-provider-aws/tree/main/examples/transit-gateway-cross-account-vpc-attachment\">the <code>./examples/transit-gateway-cross-account-vpc-attachment</code> directory within the Github Repository</a>.</p><br />", "argument-reference": "<h2 id=\"argument-reference\">Argument Reference</h2><p>This resource supports the following arguments:</p><ul><li><code>transit_gateway_attachment_id</code> - (Required) The ID of the EC2 Transit Gateway Attachment to manage.</li><li><code>transit_gateway_default_route_table_association</code> - (Optional) Boolean whether the VPC Attachment should be associated with the EC2 Transit Gateway association default route table. Default value: <code>true</code>.</li><li><code>transit_gateway_default_route_table_propagation</code> - (Optional) Boolean whether the VPC Attachment should propagate routes with the EC2 Transit Gateway propagation default route table. Default value: <code>true</code>.</li><li><code>tags</code> - (Optional) Key-value tags for the EC2 Transit Gateway VPC Attachment. If configured with a provider <a href=\"https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block\"><code>default_tags</code> configuration block</a> present, tags with matching keys will overwrite those defined at the provider-level.</li></ul>", "attribute-reference": "<h2 id=\"attribute-reference\">Attribute Reference</h2><p>This resource exports the following attributes in addition to the arguments above:</p><ul><li><code>id</code> - EC2 Transit Gateway Attachment identifier</li><li><code>tags_all</code> - A map of tags assigned to the resource, including those inherited from the provider <a href=\"https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block\"><code>default_tags</code> configuration block</a>.</li><li><code>appliance_mode_support</code> - Whether Appliance Mode support is enabled. Valid values: <code>disable</code>, <code>enable</code>.</li><li><code>dns_support</code> - Whether DNS support is enabled. Valid values: <code>disable</code>, <code>enable</code>.</li><li><code>ipv6_support</code> - Whether IPv6 support is enabled. Valid values: <code>disable</code>, <code>enable</code>.</li><li><code>subnet_ids</code> - Identifiers of EC2 Subnets.</li><li><code>transit_gateway_id</code> - Identifier of EC2 Transit Gateway.</li><li><code>vpc_id</code> - Identifier of EC2 VPC.</li><li><code>vpc_owner_id</code> - Identifier of the AWS account that owns the EC2 VPC.</li></ul>", "import": "<h2 id=\"import\">Import</h2><p>In Terraform v1.5.0 and later, use an <a href=\"https://developer.hashicorp.com/terraform/language/import\"><code>import</code> block</a> to import <code>aws_ec2_transit_gateway_vpc_attachment_accepter</code> using the EC2 Transit Gateway Attachment identifier. For example:</p><p>terraform<br />import {<br />  to = aws_ec2_transit_gateway_vpc_attachment_accepter.example<br />  id = \"tgw-attach-12345678\"<br />}</p><p>Using <code>terraform import</code>, import <code>aws_ec2_transit_gateway_vpc_attachment_accepter</code> using the EC2 Transit Gateway Attachment identifier. For example:</p><p>console<br />% terraform import aws_ec2_transit_gateway_vpc_attachment_accepter.example tgw-attach-12345678</p>", "description": "<h1 id=\"resource-aws_ec2_transit_gateway_vpc_attachment_accepter\">Resource: aws_ec2_transit_gateway_vpc_attachment_accepter</h1><p>Manages the accepter's side of an EC2 Transit Gateway VPC Attachment.</p><p>When a cross-account (requester's AWS account differs from the accepter's AWS account) EC2 Transit Gateway VPC Attachment<br />is created, an EC2 Transit Gateway VPC Attachment resource is automatically created in the accepter's account.<br />The requester can use the <code>aws_ec2_transit_gateway_vpc_attachment</code> resource to manage its side of the connection<br />and the accepter can use the <code>aws_ec2_transit_gateway_vpc_attachment_accepter</code> resource to \"adopt\" its side of the<br />connection into management.</p>"}