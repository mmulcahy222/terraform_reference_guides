{"resource-aws-iam-policy": "<h1 id=\"resource-aws_iam_policy\">Resource: aws_iam_policy</h1><p>Provides an IAM policy.</p>", "example-usage": "<h2 id=\"example-usage\">Example Usage</h2><p>terraform<br />resource \"aws_iam_policy\" \"policy\" {<br />  name        = \"test_policy\"<br />  path        = \"/\"<br />  description = \"My test policy\"</p><br /><p># Terraform's \"jsonencode\" function converts a<br />  # Terraform expression result to valid JSON syntax.<br />  policy = jsonencode({<br />    Version = \"2012-10-17\"<br />    Statement = [<br />      {<br />        Action = [<br />          \"ec2:Describe<em>\",<br />        ]<br />        Effect   = \"Allow\"<br />        Resource = \"</em>\"<br />      },<br />    ]<br />  })<br />}</p><br />", "argument-reference": "<h2 id=\"argument-reference\">Argument Reference</h2><p>This resource supports the following arguments:</p><ul><li><code>description</code> - (Optional, Forces new resource) Description of the IAM policy.</li><li><code>name</code> - (Optional, Forces new resource) The name of the policy. If omitted, Terraform will assign a random, unique name.</li><li><code>name_prefix</code> - (Optional, Forces new resource) Creates a unique name beginning with the specified prefix. Conflicts with <code>name</code>.</li><li><code>path</code> - (Optional, default \"/\") Path in which to create the policy.<br />  See <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\">IAM Identifiers</a> for more information.</li><li><code>policy</code> - (Required) The policy document. This is a JSON formatted string. For more information about building AWS IAM policy documents with Terraform, see the <a href=\"https://learn.hashicorp.com/terraform/aws/iam-policy\">AWS IAM Policy Document Guide</a></li><li><code>tags</code> - (Optional) Map of resource tags for the IAM Policy. If configured with a provider <a href=\"https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block\"><code>default_tags</code> configuration block</a> present, tags with matching keys will overwrite those defined at the provider-level.</li></ul>", "attribute-reference": "<h2 id=\"attribute-reference\">Attribute Reference</h2><p>This resource exports the following attributes in addition to the arguments above:</p><ul><li><code>id</code> - The ARN assigned by AWS to this policy.</li><li><code>arn</code> - The ARN assigned by AWS to this policy.</li><li><code>description</code> - The description of the policy.</li><li><code>name</code> - The name of the policy.</li><li><code>path</code> - The path of the policy in IAM.</li><li><code>policy</code> - The policy document.</li><li><code>policy_id</code> - The policy's ID.</li><li><code>tags_all</code> - A map of tags assigned to the resource, including those inherited from the provider <a href=\"https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block\"><code>default_tags</code> configuration block</a>.</li></ul>", "import": "<h2 id=\"import\">Import</h2><p>In Terraform v1.5.0 and later, use an <a href=\"https://developer.hashicorp.com/terraform/language/import\"><code>import</code> block</a> to import IAM Policies using the <code>arn</code>. For example:</p><p>terraform<br />import {<br />  to = aws_iam_policy.administrator<br />  id = \"arn:aws:iam::123456789012:policy/UsersManageOwnCredentials\"<br />}</p><p>Using <code>terraform import</code>, import IAM Policies using the <code>arn</code>. For example:</p><p>console<br />% terraform import aws_iam_policy.administrator arn:aws:iam::123456789012:policy/UsersManageOwnCredentials</p>", "description": "<h1 id=\"resource-aws_iam_policy\">Resource: aws_iam_policy</h1><p>Provides an IAM policy.</p>"}