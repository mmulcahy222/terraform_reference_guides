{"resource-aws-s3-bucket-acl": "<h1 id=\"resource-aws_s3_bucket_acl\">Resource: aws_s3_bucket_acl</h1><p>Provides an S3 bucket ACL resource.</p><p>~&gt; <strong>Note:</strong> <code>terraform destroy</code> does not delete the S3 Bucket ACL but does remove the resource from Terraform state.</p>", "example-usage": "<h2 id=\"example-usage\">Example Usage</h2><h3 id=\"with-private-acl\">With <code>private</code> ACL</h3><p>terraform<br />resource \"aws_s3_bucket\" \"example\" {<br />  bucket = \"my-tf-example-bucket\"<br />}</p><p>resource \"aws_s3_bucket_ownership_controls\" \"example\" {<br />  bucket = aws_s3_bucket.example.id<br />  rule {<br />    object_ownership = \"BucketOwnerPreferred\"<br />  }<br />}</p><p>resource \"aws_s3_bucket_acl\" \"example\" {<br />  depends_on = [aws_s3_bucket_ownership_controls.example]</p><p>bucket = aws_s3_bucket.example.id<br />  acl    = \"private\"<br />}<br /></p><h3 id=\"with-public-read-acl\">With <code>public-read</code> ACL</h3><p>-&gt; This example explicitly disables the default S3 bucket security settings. This<br />should be done with caution, as all bucket objects become publicly exposed.</p><p>terraform<br />resource \"aws_s3_bucket\" \"example\" {<br />  bucket = \"my-tf-example-bucket\"<br />}</p><p>resource \"aws_s3_bucket_ownership_controls\" \"example\" {<br />  bucket = aws_s3_bucket.example.id<br />  rule {<br />    object_ownership = \"BucketOwnerPreferred\"<br />  }<br />}</p><p>resource \"aws_s3_bucket_public_access_block\" \"example\" {<br />  bucket = aws_s3_bucket.example.id</p><p>block_public_acls       = false<br />  block_public_policy     = false<br />  ignore_public_acls      = false<br />  restrict_public_buckets = false<br />}</p><p>resource \"aws_s3_bucket_acl\" \"example\" {<br />  depends_on = [<br />    aws_s3_bucket_ownership_controls.example,<br />    aws_s3_bucket_public_access_block.example,<br />  ]</p><p>bucket = aws_s3_bucket.example.id<br />  acl    = \"public-read\"<br />}<br /></p><h3 id=\"with-grants\">With Grants</h3><p>terraform<br />data \"aws_canonical_user_id\" \"current\" {}</p><p>resource \"aws_s3_bucket\" \"example\" {<br />  bucket = \"my-tf-example-bucket\"<br />}</p><p>resource \"aws_s3_bucket_ownership_controls\" \"example\" {<br />  bucket = aws_s3_bucket.example.id<br />  rule {<br />    object_ownership = \"BucketOwnerPreferred\"<br />  }<br />}</p><p>resource \"aws_s3_bucket_acl\" \"example\" {<br />  depends_on = [aws_s3_bucket_ownership_controls.example]</p><p>bucket = aws_s3_bucket.example.id<br />  access_control_policy {<br />    grant {<br />      grantee {<br />        id   = data.aws_canonical_user_id.current.id<br />        type = \"CanonicalUser\"<br />      }<br />      permission = \"READ\"<br />    }</p><pre><code>grant {  grantee {    type = \"Group\"    uri  = \"http://acs.amazonaws.com/groups/s3/LogDelivery\"  }  permission = \"READ_ACP\"}owner {  id = data.aws_canonical_user_id.current.id}</code></pre><p>}<br />}<br /></p>", "argument-reference": "<h2 id=\"argument-reference\">Argument Reference</h2><p>This resource supports the following arguments:</p><ul><li><code>acl</code> - (Optional, Conflicts with <code>access_control_policy</code>) Canned ACL to apply to the bucket.</li><li><code>access_control_policy</code> - (Optional, Conflicts with <code>acl</code>) Configuration block that sets the ACL permissions for an object per grantee. <a href=\"#access_control_policy\">See below</a>.</li><li><code>bucket</code> - (Required, Forces new resource) Name of the bucket.</li><li><code>expected_bucket_owner</code> - (Optional, Forces new resource) Account ID of the expected bucket owner.</li></ul><h3 id=\"access_control_policy\">access_control_policy</h3><p>The <code>access_control_policy</code> configuration block supports the following arguments:</p><ul><li><code>grant</code> - (Required) Set of <code>grant</code> configuration blocks. <a href=\"#grant\">See below</a>.</li><li><code>owner</code> - (Required) Configuration block of the bucket owner's display name and ID. <a href=\"#owner\">See below</a>.</li></ul><h3 id=\"grant\">grant</h3><p>The <code>grant</code> configuration block supports the following arguments:</p><ul><li><code>grantee</code> - (Required) Configuration block for the person being granted permissions. <a href=\"#grantee\">See below</a>.</li><li><code>permission</code> - (Required) Logging permissions assigned to the grantee for the bucket.</li></ul><h3 id=\"owner\">owner</h3><p>The <code>owner</code> configuration block supports the following arguments:</p><ul><li><code>id</code> - (Required) ID of the owner.</li><li><code>display_name</code> - (Optional) Display name of the owner.</li></ul><h3 id=\"grantee\">grantee</h3><p>The <code>grantee</code> configuration block supports the following arguments:</p><ul><li><code>email_address</code> - (Optional) Email address of the grantee. See <a href=\"https://docs.aws.amazon.com/general/latest/gr/rande.html#s3_region\">Regions and Endpoints</a> for supported AWS regions where this argument can be specified.</li><li><code>id</code> - (Optional) Canonical user ID of the grantee.</li><li><code>type</code> - (Required) Type of grantee. Valid values: <code>CanonicalUser</code>, <code>AmazonCustomerByEmail</code>, <code>Group</code>.</li><li><code>uri</code> - (Optional) URI of the grantee group.</li></ul>", "attribute-reference": "<h2 id=\"attribute-reference\">Attribute Reference</h2><p>This resource exports the following attributes in addition to the arguments above:</p><ul><li><code>id</code> - The <code>bucket</code>, <code>expected_bucket_owner</code> (if configured), and <code>acl</code> (if configured) separated by commas (<code>,</code>).</li></ul>", "import": "<h2 id=\"import\">Import</h2><p>In Terraform v1.5.0 and later, use an <a href=\"https://developer.hashicorp.com/terraform/language/import\"><code>import</code> block</a> to import S3 bucket ACL using <code>bucket</code>, <code>expected_bucket_owner</code>, and/or <code>acl</code>, depending on your situation. For example:</p><p>If the owner (account ID) of the source bucket is the <em>same</em> account used to configure the Terraform AWS Provider, and the source bucket is <strong>not configured</strong> with a<br /><a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/acl-overview.html#canned-acl\">canned ACL</a> (i.e. predefined grant), import using the <code>bucket</code>:</p><p><code>terraformimport {  to = aws_s3_bucket_acl.example  id = \"bucket-name\"}</code></p><p>If the owner (account ID) of the source bucket is the <em>same</em> account used to configure the Terraform AWS Provider, and the source bucket is <strong>configured</strong> with a<br /><a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/acl-overview.html#canned-acl\">canned ACL</a> (i.e. predefined grant), import using the <code>bucket</code> and <code>acl</code> separated by a comma (<code>,</code>):</p><p><code>terraformimport {  to = aws_s3_bucket_acl.example  id = \"bucket-name,private\"}</code></p><p>If the owner (account ID) of the source bucket <em>differs</em> from the account used to configure the Terraform AWS Provider, and the source bucket is <strong>not configured</strong> with a <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/acl-overview.html#canned-acl\">canned ACL</a> (i.e. predefined grant), imported using the <code>bucket</code> and <code>expected_bucket_owner</code> separated by a comma (<code>,</code>):</p><p><code>terraformimport {  to = aws_s3_bucket_acl.example  id = \"bucket-name,123456789012\"}</code></p><p>If the owner (account ID) of the source bucket <em>differs</em> from the account used to configure the Terraform AWS Provider, and the source bucket is <strong>configured</strong> with a<br /><a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/acl-overview.html#canned-acl\">canned ACL</a> (i.e. predefined grant), imported using the <code>bucket</code>, <code>expected_bucket_owner</code>, and <code>acl</code> separated by commas (<code>,</code>):</p><p><code>terraformimport {  to = aws_s3_bucket_acl.example  id = \"bucket-name,123456789012,private\"}</code></p><p><strong>Using <code>terraform import</code> to import</strong> using <code>bucket</code>, <code>expected_bucket_owner</code>, and/or <code>acl</code>, depending on your situation. For example:</p><p>If the owner (account ID) of the source bucket is the <em>same</em> account used to configure the Terraform AWS Provider, and the source bucket is <strong>not configured</strong> with a<br /><a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/acl-overview.html#canned-acl\">canned ACL</a> (i.e. predefined grant), import using the <code>bucket</code>:</p><p><code>console% terraform import aws_s3_bucket_acl.example bucket-name</code></p><p>If the owner (account ID) of the source bucket is the <em>same</em> account used to configure the Terraform AWS Provider, and the source bucket is <strong>configured</strong> with a <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/acl-overview.html#canned-acl\">canned ACL</a> (i.e. predefined grant), import using the <code>bucket</code> and <code>acl</code> separated by a comma (<code>,</code>):</p><p><code>console% terraform import aws_s3_bucket_acl.example bucket-name,private</code></p><p>If the owner (account ID) of the source bucket <em>differs</em> from the account used to configure the Terraform AWS Provider, and the source bucket is <strong>not configured</strong> with a <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/acl-overview.html#canned-acl\">canned ACL</a> (i.e. predefined grant), imported using the <code>bucket</code> and <code>expected_bucket_owner</code> separated by a comma (<code>,</code>):</p><p><code>console% terraform import aws_s3_bucket_acl.example bucket-name,123456789012</code></p><p>If the owner (account ID) of the source bucket <em>differs</em> from the account used to configure the Terraform AWS Provider, and the source bucket is <strong>configured</strong> with a <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/acl-overview.html#canned-acl\">canned ACL</a> (i.e. predefined grant), imported using the <code>bucket</code>, <code>expected_bucket_owner</code>, and <code>acl</code> separated by commas (<code>,</code>):</p><p><code>console% terraform import aws_s3_bucket_acl.example bucket-name,123456789012,private</code></p>", "description": "<h1 id=\"resource-aws_s3_bucket_acl\">Resource: aws_s3_bucket_acl</h1><p>Provides an S3 bucket ACL resource.</p><p>~&gt; <strong>Note:</strong> <code>terraform destroy</code> does not delete the S3 Bucket ACL but does remove the resource from Terraform state.</p>"}