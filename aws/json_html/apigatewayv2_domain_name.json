{"resource-aws-apigatewayv2-domain-name": "<h1 id=\"resource-aws_apigatewayv2_domain_name\">Resource: aws_apigatewayv2_domain_name</h1><p>Manages an Amazon API Gateway Version 2 domain name.<br />More information can be found in the <a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-custom-domains.html\">Amazon API Gateway Developer Guide</a>.</p><p>-&gt; <strong>Note:</strong> This resource establishes ownership of and the TLS settings for<br />a particular domain name. An API stage can be associated with the domain name using the <code>aws_apigatewayv2_api_mapping</code> resource.</p>", "example-usage": "<h2 id=\"example-usage\">Example Usage</h2><h3 id=\"basic\">Basic</h3><p>terraform<br />resource \"aws_apigatewayv2_domain_name\" \"example\" {<br />  domain_name = \"ws-api.example.com\"</p><p>domain_name_configuration {<br />    certificate_arn = aws_acm_certificate.example.arn<br />    endpoint_type   = \"REGIONAL\"<br />    security_policy = \"TLS_1_2\"<br />  }<br />}<br /></p><h3 id=\"associated-route-53-resource-record\">Associated Route 53 Resource Record</h3><p>terraform<br />resource \"aws_apigatewayv2_domain_name\" \"example\" {<br />  domain_name = \"http-api.example.com\"</p><p>domain_name_configuration {<br />    certificate_arn = aws_acm_certificate.example.arn<br />    endpoint_type   = \"REGIONAL\"<br />    security_policy = \"TLS_1_2\"<br />  }<br />}</p><p>resource \"aws_route53_record\" \"example\" {<br />  name    = aws_apigatewayv2_domain_name.example.domain_name<br />  type    = \"A\"<br />  zone_id = aws_route53_zone.example.zone_id</p><p>alias {<br />    name                   = aws_apigatewayv2_domain_name.example.domain_name_configuration[0].target_domain_name<br />    zone_id                = aws_apigatewayv2_domain_name.example.domain_name_configuration[0].hosted_zone_id<br />    evaluate_target_health = false<br />  }<br />}<br /></p>", "argument-reference": "<h2 id=\"argument-reference\">Argument Reference</h2><p>This resource supports the following arguments:</p><ul><li><code>domain_name</code> - (Required) Domain name. Must be between 1 and 512 characters in length.</li><li><code>domain_name_configuration</code> - (Required) Domain name configuration. See below.</li><li><code>mutual_tls_authentication</code> - (Optional) Mutual TLS authentication configuration for the domain name.</li><li><code>tags</code> - (Optional) Map of tags to assign to the domain name. If configured with a provider <a href=\"https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block\"><code>default_tags</code> configuration block</a> present, tags with matching keys will overwrite those defined at the provider-level.</li></ul><h3 id=\"domain_name_configuration\"><code>domain_name_configuration</code></h3><ul><li><code>certificate_arn</code> - (Required) ARN of an AWS-managed certificate that will be used by the endpoint for the domain name. AWS Certificate Manager is the only supported source. Use the <a href=\"/docs/providers/aws/r/acm_certificate.html\"><code>aws_acm_certificate</code></a> resource to configure an ACM certificate.</li><li><code>endpoint_type</code> - (Required) Endpoint type. Valid values: <code>REGIONAL</code>.</li><li><code>hosted_zone_id</code> - (Computed) Amazon Route 53 Hosted Zone ID of the endpoint.</li><li><code>ownership_verification_certificate_arn</code> - (Optional) ARN of the AWS-issued certificate used to validate custom domain ownership (when <code>certificate_arn</code> is issued via an ACM Private CA or <code>mutual_tls_authentication</code> is configured with an ACM-imported certificate.)</li><li><code>security_policy</code> - (Required) Transport Layer Security (TLS) version of the <a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-custom-domain-tls-version.html\">security policy</a> for the domain name. Valid values: <code>TLS_1_2</code>.</li><li><code>target_domain_name</code> - (Computed) Target domain name.</li></ul><h3 id=\"mutual_tls_authentication\"><code>mutual_tls_authentication</code></h3><ul><li><code>truststore_uri</code> - (Required) Amazon S3 URL that specifies the truststore for mutual TLS authentication, for example, <code>s3://bucket-name/key-name</code>. The truststore can contain certificates from public or private certificate authorities. To update the truststore, upload a new version to S3, and then update your custom domain name to use the new version.</li><li><code>truststore_version</code> - (Optional) Version of the S3 object that contains the truststore. To specify a version, you must have versioning enabled for the S3 bucket.</li></ul>", "attribute-reference": "<h2 id=\"attribute-reference\">Attribute Reference</h2><p>This resource exports the following attributes in addition to the arguments above:</p><ul><li><code>api_mapping_selection_expression</code> - <a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-mapping-selection-expressions\">API mapping selection expression</a> for the domain name.</li><li><code>arn</code> - ARN of the domain name.</li><li><code>id</code> - Domain name identifier.</li><li><code>tags_all</code> - Map of tags assigned to the resource, including those inherited from the provider <a href=\"https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block\"><code>default_tags</code> configuration block</a>.</li></ul>", "timeouts": "<h2 id=\"timeouts\">Timeouts</h2><p><a href=\"https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts\">Configuration options</a>:</p><ul><li><code>create</code> - (Default <code>10m</code>)</li><li><code>update</code> - (Default <code>60m</code>)</li></ul>", "import": "<h2 id=\"import\">Import</h2><p>In Terraform v1.5.0 and later, use an <a href=\"https://developer.hashicorp.com/terraform/language/import\"><code>import</code> block</a> to import <code>aws_apigatewayv2_domain_name</code> using the domain name. For example:</p><p><code>terraformimport {  to = aws_apigatewayv2_domain_name.example  id = \"ws-api.example.com\"}</code></p><p>Using <code>terraform import</code>, import <code>aws_apigatewayv2_domain_name</code> using the domain name. For example:</p><p><code>console% terraform import aws_apigatewayv2_domain_name.example ws-api.example.com</code></p>", "description": "<h1 id=\"resource-aws_apigatewayv2_domain_name\">Resource: aws_apigatewayv2_domain_name</h1><p>Manages an Amazon API Gateway Version 2 domain name.<br />More information can be found in the <a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-custom-domains.html\">Amazon API Gateway Developer Guide</a>.</p><p>-&gt; <strong>Note:</strong> This resource establishes ownership of and the TLS settings for<br />a particular domain name. An API stage can be associated with the domain name using the <code>aws_apigatewayv2_api_mapping</code> resource.</p>"}