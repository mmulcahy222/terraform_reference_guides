{"resource-aws-s3-bucket-cors-configuration": "<h1 id=\"resource-aws_s3_bucket_cors_configuration\">Resource: aws_s3_bucket_cors_configuration</h1><p>Provides an S3 bucket CORS configuration resource. For more information about CORS, go to <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/cors.html\">Enabling Cross-Origin Resource Sharing</a> in the Amazon S3 User Guide.</p><p>~&gt; <strong>NOTE:</strong> S3 Buckets only support a single CORS configuration. Declaring multiple <code>aws_s3_bucket_cors_configuration</code> resources to the same S3 Bucket will cause a perpetual difference in configuration.</p>", "example-usage": "<h2 id=\"example-usage\">Example Usage</h2><p>terraform<br />resource \"aws_s3_bucket\" \"example\" {<br />  bucket = \"mybucket\"<br />}</p><br /><p>resource \"aws_s3_bucket_cors_configuration\" \"example\" {<br />  bucket = aws_s3_bucket.example.id</p><br /><p>cors_rule {<br />    allowed_headers = [\"*\"]<br />    allowed_methods = [\"PUT\", \"POST\"]<br />    allowed_origins = [\"https://s3-website-test.hashicorp.com\"]<br />    expose_headers  = [\"ETag\"]<br />    max_age_seconds = 3000<br />  }</p><br /><p>cors_rule {<br />    allowed_methods = [\"GET\"]<br />    allowed_origins = [\"*\"]<br />  }<br />}</p><br />", "argument-reference": "<h2 id=\"argument-reference\">Argument Reference</h2><p>This resource supports the following arguments:</p><ul><li><code>bucket</code> - (Required, Forces new resource) Name of the bucket.</li><li><code>expected_bucket_owner</code> - (Optional, Forces new resource) Account ID of the expected bucket owner.</li><li><code>cors_rule</code> - (Required) Set of origins and methods (cross-origin access that you want to allow). <a href=\"#cors_rule\">See below</a>. You can configure up to 100 rules.</li></ul><h3 id=\"cors_rule\">cors_rule</h3><p>The <code>cors_rule</code> configuration block supports the following arguments:</p><ul><li><code>allowed_headers</code> - (Optional) Set of Headers that are specified in the <code>Access-Control-Request-Headers</code> header.</li><li><code>allowed_methods</code> - (Required) Set of HTTP methods that you allow the origin to execute. Valid values are <code>GET</code>, <code>PUT</code>, <code>HEAD</code>, <code>POST</code>, and <code>DELETE</code>.</li><li><code>allowed_origins</code> - (Required) Set of origins you want customers to be able to access the bucket from.</li><li><code>expose_headers</code> - (Optional) Set of headers in the response that you want customers to be able to access from their applications (for example, from a JavaScript <code>XMLHttpRequest</code> object).</li><li><code>id</code> - (Optional) Unique identifier for the rule. The value cannot be longer than 255 characters.</li><li><code>max_age_seconds</code> - (Optional) Time in seconds that your browser is to cache the preflight response for the specified resource.</li></ul>", "attribute-reference": "<h2 id=\"attribute-reference\">Attribute Reference</h2><p>This resource exports the following attributes in addition to the arguments above:</p><ul><li><code>id</code> - The <code>bucket</code> or <code>bucket</code> and <code>expected_bucket_owner</code> separated by a comma (<code>,</code>) if the latter is provided.</li></ul>", "import": "<h2 id=\"import\">Import</h2><p>In Terraform v1.5.0 and later, use an <a href=\"https://developer.hashicorp.com/terraform/language/import\"><code>import</code> block</a> to import S3 bucket CORS configuration using the <code>bucket</code> or using the <code>bucket</code> and <code>expected_bucket_owner</code> separated by a comma (<code>,</code>). For example:</p><p>If the owner (account ID) of the source bucket is the same account used to configure the Terraform AWS Provider, import using the <code>bucket</code>:</p><p>terraform<br />import {<br />  to = aws_s3_bucket_cors_configuration.example<br />  id = \"bucket-name\"<br />}</p><p>If the owner (account ID) of the source bucket differs from the account used to configure the Terraform AWS Provider, import using the <code>bucket</code> and <code>expected_bucket_owner</code> separated by a comma (<code>,</code>):</p><p>terraform<br />import {<br />  to = aws_s3_bucket_cors_configuration.example<br />  id = \"bucket-name,123456789012\"<br />}</p><p><strong>Using <code>terraform import</code> to import</strong> S3 bucket CORS configuration using the <code>bucket</code> or using the <code>bucket</code> and <code>expected_bucket_owner</code> separated by a comma (<code>,</code>). For example:</p><p>If the owner (account ID) of the source bucket is the same account used to configure the Terraform AWS Provider, import using the <code>bucket</code>:</p><p>console<br />% terraform import aws_s3_bucket_cors_configuration.example bucket-name</p><p>If the owner (account ID) of the source bucket differs from the account used to configure the Terraform AWS Provider, import using the <code>bucket</code> and <code>expected_bucket_owner</code> separated by a comma (<code>,</code>):</p><p>console<br />% terraform import aws_s3_bucket_cors_configuration.example bucket-name,123456789012</p>", "description": "<h1 id=\"resource-aws_s3_bucket_cors_configuration\">Resource: aws_s3_bucket_cors_configuration</h1><p>Provides an S3 bucket CORS configuration resource. For more information about CORS, go to <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/cors.html\">Enabling Cross-Origin Resource Sharing</a> in the Amazon S3 User Guide.</p><p>~&gt; <strong>NOTE:</strong> S3 Buckets only support a single CORS configuration. Declaring multiple <code>aws_s3_bucket_cors_configuration</code> resources to the same S3 Bucket will cause a perpetual difference in configuration.</p>"}