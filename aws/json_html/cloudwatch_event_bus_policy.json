{"resource-aws-cloudwatch-event-bus-policy": "<h1 id=\"resource-aws_cloudwatch_event_bus_policy\">Resource: aws_cloudwatch_event_bus_policy</h1><p>Provides a resource to create an EventBridge resource policy to support cross-account events.</p><p>~&gt; <strong>Note:</strong> EventBridge was formerly known as CloudWatch Events. The functionality is identical.</p><p>~&gt; <strong>Note:</strong> The EventBridge bus policy resource  (<code>aws_cloudwatch_event_bus_policy</code>) is incompatible with the EventBridge permission resource (<code>aws_cloudwatch_event_permission</code>) and will overwrite permissions.</p>", "example-usage": "<h2 id=\"example-usage\">Example Usage</h2><h3 id=\"account-access\">Account Access</h3><p><br />data \"aws_iam_policy_document\" \"test\" {<br />  statement {<br />    sid    = \"DevAccountAccess\"<br />    effect = \"Allow\"<br />    actions = [<br />      \"events:PutEvents\",<br />    ]<br />    resources = [<br />      \"arn:aws:events:eu-west-1:123456789012:event-bus/default\"<br />    ]</p><pre><code>principals {  type        = \"AWS\"  identifiers = [\"123456789012\"]}</code></pre><p>}<br />}</p><p>resource \"aws_cloudwatch_event_bus_policy\" \"test\" {<br />  policy         = data.aws_iam_policy_document.test.json<br />  event_bus_name = aws_cloudwatch_event_bus.test.name<br />}<br /></p><h3 id=\"organization-access\">Organization Access</h3><p><br />data \"aws_iam_policy_document\" \"test\" {<br />  statement {<br />    sid    = \"OrganizationAccess\"<br />    effect = \"Allow\"<br />    actions = [<br />      \"events:DescribeRule\",<br />      \"events:ListRules\",<br />      \"events:ListTargetsByRule\",<br />      \"events:ListTagsForResource\",<br />    ]<br />    resources = [<br />      \"arn:aws:events:eu-west-1:123456789012:rule/*\",<br />      \"arn:aws:events:eu-west-1:123456789012:event-bus/default\"<br />    ]</p><pre><code>principals {  type        = \"AWS\"  identifiers = [\"*\"]}condition {  test     = \"StringEquals\"  variable = \"aws:PrincipalOrgID\"  values   = [aws_organizations_organization.example.id]}</code></pre><p>}<br />}</p><p>resource \"aws_cloudwatch_event_bus_policy\" \"test\" {<br />  policy         = data.aws_iam_policy_document.test.json<br />  event_bus_name = aws_cloudwatch_event_bus.test.name<br />}<br /></p><h3 id=\"multiple-statements\">Multiple Statements</h3><p><br />data \"aws_iam_policy_document\" \"test\" {</p><p>statement {<br />    sid    = \"DevAccountAccess\"<br />    effect = \"Allow\"<br />    actions = [<br />      \"events:PutEvents\",<br />    ]<br />    resources = [<br />      \"arn:aws:events:eu-west-1:123456789012:event-bus/default\"<br />    ]</p><pre><code>principals {  type        = \"AWS\"  identifiers = [\"123456789012\"]}</code></pre><p>}</p><p>statement {<br />    sid    = \"OrganizationAccess\"<br />    effect = \"Allow\"<br />    actions = [<br />      \"events:DescribeRule\",<br />      \"events:ListRules\",<br />      \"events:ListTargetsByRule\",<br />      \"events:ListTagsForResource\",<br />    ]<br />    resources = [<br />      \"arn:aws:events:eu-west-1:123456789012:rule/*\",<br />      \"arn:aws:events:eu-west-1:123456789012:event-bus/default\"<br />    ]</p><pre><code>principals {  type        = \"AWS\"  identifiers = [\"*\"]}condition {  test     = \"StringEquals\"  variable = \"aws:PrincipalOrgID\"  values   = [aws_organizations_organization.example.id]}</code></pre><p>}<br />}</p><p>resource \"aws_cloudwatch_event_bus_policy\" \"test\" {<br />  policy         = data.aws_iam_policy_document.test.json<br />  event_bus_name = aws_cloudwatch_event_bus.test.name<br />}<br /></p>", "argument-reference": "<h2 id=\"argument-reference\">Argument Reference</h2><p>This resource supports the following arguments:</p><ul><li><code>policy</code> - (Required) The text of the policy. For more information about building AWS IAM policy documents with Terraform, see the <a href=\"https://learn.hashicorp.com/terraform/aws/iam-policy\">AWS IAM Policy Document Guide</a>.</li><li><code>event_bus_name</code> - (Optional) The name of the event bus to set the permissions on.<br />  If you omit this, the permissions are set on the <code>default</code> event bus.</li></ul>", "attribute-reference": "<h2 id=\"attribute-reference\">Attribute Reference</h2><p>This resource exports the following attributes in addition to the arguments above:</p><ul><li><code>id</code> - The name of the EventBridge event bus.</li></ul>", "import": "<h2 id=\"import\">Import</h2><p>In Terraform v1.5.0 and later, use an <a href=\"https://developer.hashicorp.com/terraform/language/import\"><code>import</code> block</a> to import an EventBridge policy using the <code>event_bus_name</code>. For example:</p><p><code>terraformimport {  to = aws_cloudwatch_event_bus_policy.DevAccountAccess  id = \"example-event-bus\"}</code></p><p>Using <code>terraform import</code>, import an EventBridge policy using the <code>event_bus_name</code>. For example:</p><p><code>console% terraform import aws_cloudwatch_event_bus_policy.DevAccountAccess example-event-bus</code></p>", "description": "<h1 id=\"resource-aws_cloudwatch_event_bus_policy\">Resource: aws_cloudwatch_event_bus_policy</h1><p>Provides a resource to create an EventBridge resource policy to support cross-account events.</p><p>~&gt; <strong>Note:</strong> EventBridge was formerly known as CloudWatch Events. The functionality is identical.</p><p>~&gt; <strong>Note:</strong> The EventBridge bus policy resource  (<code>aws_cloudwatch_event_bus_policy</code>) is incompatible with the EventBridge permission resource (<code>aws_cloudwatch_event_permission</code>) and will overwrite permissions.</p>"}