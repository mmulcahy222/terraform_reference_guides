{"resource-aws-lb-target-group": "<h1 id=\"resource-aws_lb_target_group\">Resource: aws_lb_target_group</h1><p>Provides a Target Group resource for use with Load Balancer resources.</p><p>~&gt; <strong>Note:</strong> <code>aws_alb_target_group</code> is known as <code>aws_lb_target_group</code>. The functionality is identical.</p>", "example-usage": "<h2 id=\"example-usage\">Example Usage</h2><h3 id=\"instance-target-group\">Instance Target Group</h3><br /><p>terraform<br />resource \"aws_lb_target_group\" \"test\" {<br />  name     = \"tf-example-lb-tg\"<br />  port     = 80<br />  protocol = \"HTTP\"<br />  vpc_id   = aws_vpc.main.id<br />}</p><br /><p>resource \"aws_vpc\" \"main\" {<br />  cidr_block = \"10.0.0.0/16\"<br />}</p><br /><h3 id=\"ip-target-group\">IP Target Group</h3><br /><p>terraform<br />resource \"aws_lb_target_group\" \"ip-example\" {<br />  name        = \"tf-example-lb-tg\"<br />  port        = 80<br />  protocol    = \"HTTP\"<br />  target_type = \"ip\"<br />  vpc_id      = aws_vpc.main.id<br />}</p><br /><p>resource \"aws_vpc\" \"main\" {<br />  cidr_block = \"10.0.0.0/16\"<br />}</p><br /><h3 id=\"lambda-target-group\">Lambda Target Group</h3><br /><p>terraform<br />resource \"aws_lb_target_group\" \"lambda-example\" {<br />  name        = \"tf-example-lb-tg\"<br />  target_type = \"lambda\"<br />}</p><br /><h3 id=\"alb-target-group\">ALB Target Group</h3><br /><p>terraform<br />resource \"aws_lb_target_group\" \"alb-example\" {<br />  name        = \"tf-example-lb-alb-tg\"<br />  target_type = \"alb\"<br />  port        = 80<br />  protocol    = \"TCP\"<br />  vpc_id      = aws_vpc.main.id<br />}</p><br />", "argument-reference": "<h2 id=\"argument-reference\">Argument Reference</h2><p>This resource supports the following arguments:</p><ul><li><code>connection_termination</code> - (Optional) Whether to terminate connections at the end of the deregistration timeout on Network Load Balancers. See <a href=\"https://docs.aws.amazon.com/elasticloadbalancing/latest/network/load-balancer-target-groups.html#deregistration-delay\">doc</a> for more information. Default is <code>false</code>.</li><li><code>deregistration_delay</code> - (Optional) Amount time for Elastic Load Balancing to wait before changing the state of a deregistering target from draining to unused. The range is 0-3600 seconds. The default value is 300 seconds.</li><li><code>health_check</code> - (Optional, Maximum of 1) Health Check configuration block. Detailed below.</li><li><code>lambda_multi_value_headers_enabled</code> - (Optional) Whether the request and response headers exchanged between the load balancer and the Lambda function include arrays of values or strings. Only applies when <code>target_type</code> is <code>lambda</code>. Default is <code>false</code>.</li><li><code>load_balancing_algorithm_type</code> - (Optional) Determines how the load balancer selects targets when routing requests. Only applicable for Application Load Balancer Target Groups. The value is <code>round_robin</code> or <code>least_outstanding_requests</code>. The default is <code>round_robin</code>.</li><li><code>load_balancing_cross_zone_enabled</code> - (Optional) Indicates whether cross zone load balancing is enabled. The value is <code>\"true\"</code>, <code>\"false\"</code> or <code>\"use_load_balancer_configuration\"</code>. The default is <code>\"use_load_balancer_configuration\"</code>.</li><li><code>name_prefix</code> - (Optional, Forces new resource) Creates a unique name beginning with the specified prefix. Conflicts with <code>name</code>. Cannot be longer than 6 characters.</li><li><code>name</code> - (Optional, Forces new resource) Name of the target group. If omitted, Terraform will assign a random, unique name. This name must be unique per region per account, can have a maximum of 32 characters, must contain only alphanumeric characters or hyphens, and must not begin or end with a hyphen.</li><li><code>port</code> - (May be required, Forces new resource) Port on which targets receive traffic, unless overridden when registering a specific target. Required when <code>target_type</code> is <code>instance</code>, <code>ip</code> or <code>alb</code>. Does not apply when <code>target_type</code> is <code>lambda</code>.</li><li><code>preserve_client_ip</code> - (Optional) Whether client IP preservation is enabled. See <a href=\"https://docs.aws.amazon.com/elasticloadbalancing/latest/network/load-balancer-target-groups.html#client-ip-preservation\">doc</a> for more information.</li><li><code>protocol_version</code> - (Optional, Forces new resource) Only applicable when <code>protocol</code> is <code>HTTP</code> or <code>HTTPS</code>. The protocol version. Specify <code>GRPC</code> to send requests to targets using gRPC. Specify <code>HTTP2</code> to send requests to targets using HTTP/2. The default is <code>HTTP1</code>, which sends requests to targets using HTTP/1.1</li><li><code>protocol</code> - (May be required, Forces new resource) Protocol to use for routing traffic to the targets. Should be one of <code>GENEVE</code>, <code>HTTP</code>, <code>HTTPS</code>, <code>TCP</code>, <code>TCP_UDP</code>, <code>TLS</code>, or <code>UDP</code>. Required when <code>target_type</code> is <code>instance</code>, <code>ip</code> or <code>alb</code>. Does not apply when <code>target_type</code> is <code>lambda</code>.</li><li><code>proxy_protocol_v2</code> - (Optional) Whether to enable support for proxy protocol v2 on Network Load Balancers. See <a href=\"https://docs.aws.amazon.com/elasticloadbalancing/latest/network/load-balancer-target-groups.html#proxy-protocol\">doc</a> for more information. Default is <code>false</code>.</li><li><code>slow_start</code> - (Optional) Amount time for targets to warm up before the load balancer sends them a full share of requests. The range is 30-900 seconds or 0 to disable. The default value is 0 seconds.</li><li><code>stickiness</code> - (Optional, Maximum of 1) Stickiness configuration block. Detailed below.</li><li><code>tags</code> - (Optional) Map of tags to assign to the resource. If configured with a provider <a href=\"https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block\"><code>default_tags</code> configuration block</a> present, tags with matching keys will overwrite those defined at the provider-level.</li><li><code>target_failover</code> - (Optional) Target failover block. Only applicable for Gateway Load Balancer target groups. See <a href=\"#target_failover\">target_failover</a> for more information.</li><li><code>target_type</code> - (May be required, Forces new resource) Type of target that you must specify when registering targets with this target group. See <a href=\"https://docs.aws.amazon.com/elasticloadbalancing/latest/APIReference/API_CreateTargetGroup.html\">doc</a> for supported values. The default is <code>instance</code>.</li></ul><p>Note that you can't specify targets for a target group using both instance IDs and IP addresses.</p><p>If the target type is <code>ip</code>, specify IP addresses from the subnets of the virtual private cloud (VPC) for the target group, the RFC 1918 range (10.0.0.0/8, 172.16.0.0/12, and 192.168.0.0/16), and the RFC 6598 range (100.64.0.0/10). You can't specify publicly routable IP addresses.</p><p>Network Load Balancers do not support the <code>lambda</code> target type.</p><p>Application Load Balancers do not support the <code>alb</code> target type.* <code>ip_address_type</code> (Optional, forces new resource) The type of IP addresses used by the target group, only supported when target type is set to <code>ip</code>. Possible values are <code>ipv4</code> or <code>ipv6</code>.* <code>vpc_id</code> - (Optional, Forces new resource) Identifier of the VPC in which to create the target group. Required when <code>target_type</code> is <code>instance</code>, <code>ip</code> or <code>alb</code>. Does not apply when <code>target_type</code> is <code>lambda</code>.</p><h3 id=\"health_check\">health_check</h3><p>~&gt; <strong>Note:</strong> The Health Check parameters you can set vary by the <code>protocol</code> of the Target Group. Many parameters cannot be set to custom values for <code>network</code> load balancers at this time. See http://docs.aws.amazon.com/elasticloadbalancing/latest/APIReference/API_CreateTargetGroup.html for a complete reference. Keep in mind, that health checks produce actual requests to the backend. The underlying function is invoked when <code>target_type</code> is set to <code>lambda</code>.</p><ul><li><code>enabled</code> - (Optional) Whether health checks are enabled. Defaults to <code>true</code>.</li><li><code>healthy_threshold</code> - (Optional)  Number of consecutive health check successes required before considering a target healthy. The range is 2-10. Defaults to 3.</li><li><code>interval</code> - (Optional) Approximate amount of time, in seconds, between health checks of an individual target. The range is 5-300. For <code>lambda</code> target groups, it needs to be greater than the timeout of the underlying <code>lambda</code>. Defaults to 30.</li><li><code>matcher</code> (May be required) Response codes to use when checking for a healthy responses from a target. You can specify multiple values (for example, \"200,202\" for HTTP(s) or \"0,12\" for GRPC) or a range of values (for example, \"200-299\" or \"0-99\"). Required for HTTP/HTTPS/GRPC ALB. Only applies to Application Load Balancers (i.e., HTTP/HTTPS/GRPC) not Network Load Balancers (i.e., TCP).</li><li><code>path</code> - (May be required) Destination for the health check request. Required for HTTP/HTTPS ALB and HTTP NLB. Only applies to HTTP/HTTPS.</li><li><code>port</code> - (Optional) The port the load balancer uses when performing health checks on targets. Default is traffic-port.</li><li><code>protocol</code> - (Optional) Protocol the load balancer uses when performing health checks on targets. Must be either <code>TCP</code>, <code>HTTP</code>, or <code>HTTPS</code>. The TCP protocol is not supported for health checks if the protocol of the target group is HTTP or HTTPS. Defaults to HTTP.</li><li><code>timeout</code> - (optional) Amount of time, in seconds, during which no response from a target means a failed health check. The range is 2\u2013120 seconds. For target groups with a protocol of HTTP, the default is 6 seconds. For target groups with a protocol of TCP, TLS or HTTPS, the default is 10 seconds. For target groups with a protocol of GENEVE, the default is 5 seconds. If the target type is lambda, the default is 30 seconds.</li><li><code>unhealthy_threshold</code> - (Optional) Number of consecutive health check failures required before considering a target unhealthy. The range is 2-10. Defaults to 3.</li></ul><h3 id=\"stickiness\">stickiness</h3><p>~&gt; <strong>NOTE:</strong> Currently, an NLB (i.e., protocol of <code>HTTP</code> or <code>HTTPS</code>) can have an invalid <code>stickiness</code> block with <code>type</code> set to <code>lb_cookie</code> as long as <code>enabled</code> is set to <code>false</code>. However, please update your configurations to avoid errors in a future version of the provider: either remove the invalid <code>stickiness</code> block or set the <code>type</code> to <code>source_ip</code>.</p><ul><li><code>cookie_duration</code> - (Optional) Only used when the type is <code>lb_cookie</code>. The time period, in seconds, during which requests from a client should be routed to the same target. After this time period expires, the load balancer-generated cookie is considered stale. The range is 1 second to 1 week (604800 seconds). The default value is 1 day (86400 seconds).</li><li><code>cookie_name</code> - (Optional) Name of the application based cookie. AWSALB, AWSALBAPP, and AWSALBTG prefixes are reserved and cannot be used. Only needed when type is <code>app_cookie</code>.</li><li><code>enabled</code> - (Optional) Boolean to enable / disable <code>stickiness</code>. Default is <code>true</code>.</li><li><code>type</code> - (Required) The type of sticky sessions. The only current possible values are <code>lb_cookie</code>, <code>app_cookie</code> for ALBs, <code>source_ip</code> for NLBs, and <code>source_ip_dest_ip</code>, <code>source_ip_dest_ip_proto</code> for GWLBs.</li></ul><h3 id=\"target_failover\">target_failover</h3><p>~&gt; <strong>NOTE:</strong> This block is only applicable for a Gateway Load Balancer (GWLB). The two attributes <code>on_deregistration</code> and <code>on_unhealthy</code> cannot be set independently. The value you set for both attributes must be the same.</p><ul><li><code>on_deregistration</code> - (Optional) Indicates how the GWLB handles existing flows when a target is deregistered. Possible values are <code>rebalance</code> and <code>no_rebalance</code>. Must match the attribute value set for <code>on_unhealthy</code>. Default: <code>no_rebalance</code>.</li><li><code>on_unhealthy</code> - Indicates how the GWLB handles existing flows when a target is unhealthy. Possible values are <code>rebalance</code> and <code>no_rebalance</code>. Must match the attribute value set for <code>on_deregistration</code>. Default: <code>no_rebalance</code>.</li></ul>", "attribute-reference": "<h2 id=\"attribute-reference\">Attribute Reference</h2><p>This resource exports the following attributes in addition to the arguments above:</p><ul><li><code>arn_suffix</code> - ARN suffix for use with CloudWatch Metrics.</li><li><code>arn</code> - ARN of the Target Group (matches <code>id</code>).</li><li><code>id</code> - ARN of the Target Group (matches <code>arn</code>).</li><li><code>name</code> - Name of the Target Group.</li><li><code>tags_all</code> - A map of tags assigned to the resource, including those inherited from the provider <a href=\"https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block\"><code>default_tags</code> configuration block</a>.</li></ul>", "import": "<h2 id=\"import\">Import</h2><p>In Terraform v1.5.0 and later, use an <a href=\"https://developer.hashicorp.com/terraform/language/import\"><code>import</code> block</a> to import Target Groups using their ARN. For example:</p><p>terraform<br />import {<br />  to = aws_lb_target_group.app_front_end<br />  id = \"arn:aws:elasticloadbalancing:us-west-2:187416307283:targetgroup/app-front-end/20cfe21448b66314\"<br />}</p><p>Using <code>terraform import</code>, import Target Groups using their ARN. For example:</p><p>console<br />% terraform import aws_lb_target_group.app_front_end arn:aws:elasticloadbalancing:us-west-2:187416307283:targetgroup/app-front-end/20cfe21448b66314</p>", "description": "<h1 id=\"resource-aws_lb_target_group\">Resource: aws_lb_target_group</h1><p>Provides a Target Group resource for use with Load Balancer resources.</p><p>~&gt; <strong>Note:</strong> <code>aws_alb_target_group</code> is known as <code>aws_lb_target_group</code>. The functionality is identical.</p>"}