{"resource-aws-securityhub-standards-control": "<h1 id=\"resource-aws_securityhub_standards_control\">Resource: aws_securityhub_standards_control</h1><p>Disable/enable Security Hub standards control in the current region.</p><p>The <code>aws_securityhub_standards_control</code> behaves differently from normal resources, in that<br />Terraform does not <em>create</em> this resource, but instead \"adopts\" it<br />into management. When you <em>delete</em> this resource configuration, Terraform \"abandons\" resource as is and just removes it from the state.</p>", "example-usage": "<h2 id=\"example-usage\">Example Usage</h2><p>terraform<br />resource \"aws_securityhub_account\" \"example\" {}</p><br /><p>resource \"aws_securityhub_standards_subscription\" \"cis_aws_foundations_benchmark\" {<br />  standards_arn = \"arn:aws:securityhub:::ruleset/cis-aws-foundations-benchmark/v/1.2.0\"<br />  depends_on    = [aws_securityhub_account.example]<br />}</p><br /><p>resource \"aws_securityhub_standards_control\" \"ensure_iam_password_policy_prevents_password_reuse\" {<br />  standards_control_arn = \"arn:aws:securityhub:us-east-1:111111111111:control/cis-aws-foundations-benchmark/v/1.2.0/1.10\"<br />  control_status        = \"DISABLED\"<br />  disabled_reason       = \"We handle password policies within Okta\"</p><br /><p>depends_on = [aws_securityhub_standards_subscription.cis_aws_foundations_benchmark]<br />}</p><br />", "argument-reference": "<h2 id=\"argument-reference\">Argument Reference</h2><p>This resource supports the following arguments:</p><ul><li><code>standards_control_arn</code> - (Required) The standards control ARN. See the AWS documentation for how to list existing controls using <a href=\"https://awscli.amazonaws.com/v2/documentation/api/latest/reference/securityhub/get-enabled-standards.html\"><code>get-enabled-standards</code></a> and <a href=\"https://awscli.amazonaws.com/v2/documentation/api/latest/reference/securityhub/describe-standards-controls.html\"><code>describe-standards-controls</code></a>.</li><li><code>control_status</code> \u2013 (Required) The control status could be <code>ENABLED</code> or <code>DISABLED</code>. You have to specify <code>disabled_reason</code> argument for <code>DISABLED</code> control status.</li><li><code>disabled_reason</code> \u2013 (Optional) A description of the reason why you are disabling a security standard control. If you specify this attribute, <code>control_status</code> will be set to <code>DISABLED</code> automatically.</li></ul>", "attribute-reference": "<h2 id=\"attribute-reference\">Attribute Reference</h2><p>This resource exports the following attributes in addition to the arguments above:</p><ul><li><code>id</code> - The standard control ARN.</li><li><code>control_id</code> \u2013 The identifier of the security standard control.</li><li><code>control_status_updated_at</code> \u2013 The date and time that the status of the security standard control was most recently updated.</li><li><code>description</code> \u2013 The standard control longer description. Provides information about what the control is checking for.</li><li><code>related_requirements</code> \u2013 The list of requirements that are related to this control.</li><li><code>remediation_url</code> \u2013 A link to remediation information for the control in the Security Hub user documentation.</li><li><code>severity_rating</code> \u2013 The severity of findings generated from this security standard control.</li><li><code>title</code> \u2013 The standard control title.</li></ul>", "description": "<h1 id=\"resource-aws_securityhub_standards_control\">Resource: aws_securityhub_standards_control</h1><p>Disable/enable Security Hub standards control in the current region.</p><p>The <code>aws_securityhub_standards_control</code> behaves differently from normal resources, in that<br />Terraform does not <em>create</em> this resource, but instead \"adopts\" it<br />into management. When you <em>delete</em> this resource configuration, Terraform \"abandons\" resource as is and just removes it from the state.</p>"}