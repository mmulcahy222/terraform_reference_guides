{"resource-aws-autoscalingplans-scaling-plan": "<h1 id=\"resource-aws_autoscalingplans_scaling_plan\">Resource: aws_autoscalingplans_scaling_plan</h1><p>Manages an AWS Auto Scaling scaling plan.<br />More information can be found in the <a href=\"https://docs.aws.amazon.com/autoscaling/plans/userguide/what-is-aws-auto-scaling.html\">AWS Auto Scaling User Guide</a>.</p><p>~&gt; <strong>NOTE:</strong> The AWS Auto Scaling service uses an AWS IAM service-linked role to manage predictive scaling of Amazon EC2 Auto Scaling groups. The service attempts to automatically create this role the first time a scaling plan with predictive scaling enabled is created.<br />An <a href=\"/docs/providers/aws/r/iam_service_linked_role.html\"><code>aws_iam_service_linked_role</code></a> resource can be used to manually manage this role.<br />See the <a href=\"https://docs.aws.amazon.com/autoscaling/plans/userguide/aws-auto-scaling-service-linked-roles.html#create-service-linked-role-manual\">AWS documentation</a> for more details.</p>", "example-usage": "<h2 id=\"example-usage\">Example Usage</h2><h3 id=\"basic-dynamic-scaling\">Basic Dynamic Scaling</h3><br /><p>terraform<br />data \"aws_availability_zones\" \"available\" {}</p><br /><p>resource \"aws_autoscaling_group\" \"example\" {<br />  name_prefix = \"example\"</p><br /><p>launch_configuration = aws_launch_configuration.example.name<br />  availability_zones   = [data.aws_availability_zones.available.names[0]]</p><br /><p>min_size = 0<br />  max_size = 3</p><br /><p>tags = [<br />    {<br />      key                 = \"application\"<br />      value               = \"example\"<br />      propagate_at_launch = true<br />    },<br />  ]<br />}</p><br /><p>resource \"aws_autoscalingplans_scaling_plan\" \"example\" {<br />  name = \"example-dynamic-cost-optimization\"</p><br /><p>application_source {<br />    tag_filter {<br />      key    = \"application\"<br />      values = [\"example\"]<br />    }<br />  }</p><br /><p>scaling_instruction {<br />    max_capacity       = 3<br />    min_capacity       = 0<br />    resource_id        = format(\"autoScalingGroup/%s\", aws_autoscaling_group.example.name)<br />    scalable_dimension = \"autoscaling:autoScalingGroup:DesiredCapacity\"<br />    service_namespace  = \"autoscaling\"</p><br /><pre><code>target_tracking_configuration {<br />  predefined_scaling_metric_specification {<br />    predefined_scaling_metric_type = \"ASGAverageCPUUtilization\"<br />  }<br /><br />  target_value = 70<br />}<br /></code></pre><br /><p>}<br />}</p><br /><h3 id=\"basic-predictive-scaling\">Basic Predictive Scaling</h3><br /><p>terraform<br />data \"aws_availability_zones\" \"available\" {}</p><br /><p>resource \"aws_autoscaling_group\" \"example\" {<br />  name_prefix = \"example\"</p><br /><p>launch_configuration = aws_launch_configuration.example.name<br />  availability_zones   = [data.aws_availability_zones.available.names[0]]</p><br /><p>min_size = 0<br />  max_size = 3</p><br /><p>tags = [<br />    {<br />      key                 = \"application\"<br />      value               = \"example\"<br />      propagate_at_launch = true<br />    },<br />  ]<br />}</p><br /><p>resource \"aws_autoscalingplans_scaling_plan\" \"example\" {<br />  name = \"example-predictive-cost-optimization\"</p><br /><p>application_source {<br />    tag_filter {<br />      key    = \"application\"<br />      values = [\"example\"]<br />    }<br />  }</p><br /><p>scaling_instruction {<br />    disable_dynamic_scaling = true</p><br /><pre><code>max_capacity       = 3<br />min_capacity       = 0<br />resource_id        = format(\"autoScalingGroup/%s\", aws_autoscaling_group.example.name)<br />scalable_dimension = \"autoscaling:autoScalingGroup:DesiredCapacity\"<br />service_namespace  = \"autoscaling\"<br /><br />target_tracking_configuration {<br />  predefined_scaling_metric_specification {<br />    predefined_scaling_metric_type = \"ASGAverageCPUUtilization\"<br />  }<br /><br />  target_value = 70<br />}<br /><br />predictive_scaling_max_capacity_behavior = \"SetForecastCapacityToMaxCapacity\"<br />predictive_scaling_mode                  = \"ForecastAndScale\"<br /><br />predefined_load_metric_specification {<br />  predefined_load_metric_type = \"ASGTotalCPUUtilization\"<br />}<br /></code></pre><br /><p>}<br />}</p><br />", "argument-reference": "<h2 id=\"argument-reference\">Argument Reference</h2><p>This resource supports the following arguments:</p><ul><li><code>name</code> - (Required) Name of the scaling plan. Names cannot contain vertical bars, colons, or forward slashes.</li><li><code>application_source</code> - (Required) CloudFormation stack or set of tags. You can create one scaling plan per application source.</li><li><code>scaling_instruction</code> - (Required) Scaling instructions. More details can be found in the <a href=\"https://docs.aws.amazon.com/autoscaling/plans/APIReference/API_ScalingInstruction.html\">AWS Auto Scaling API Reference</a>.</li></ul><p>The <code>application_source</code> object supports the following:</p><ul><li><code>cloudformation_stack_arn</code> - (Optional) ARN of a AWS CloudFormation stack.</li><li><code>tag_filter</code> - (Optional) Set of tags.</li></ul><p>The <code>tag_filter</code> object supports the following:</p><ul><li><code>key</code> - (Required) Tag key.</li><li><code>values</code> - (Optional) Tag values.</li></ul><p>The <code>scaling_instruction</code> object supports the following:</p><ul><li><code>max_capacity</code> - (Required) Maximum capacity of the resource. The exception to this upper limit is if you specify a non-default setting for <code>predictive_scaling_max_capacity_behavior</code>.</li><li><code>min_capacity</code> - (Required) Minimum capacity of the resource.</li><li><code>resource_id</code> - (Required) ID of the resource. This string consists of the resource type and unique identifier.</li><li><code>scalable_dimension</code> - (Required) Scalable dimension associated with the resource. Valid values: <code>autoscaling:autoScalingGroup:DesiredCapacity</code>, <code>dynamodb:index:ReadCapacityUnits</code>, <code>dynamodb:index:WriteCapacityUnits</code>, <code>dynamodb:table:ReadCapacityUnits</code>, <code>dynamodb:table:WriteCapacityUnits</code>, <code>ecs:service:DesiredCount</code>, <code>ec2:spot-fleet-request:TargetCapacity</code>, <code>rds:cluster:ReadReplicaCount</code>.</li><li><code>service_namespace</code> - (Required) Namespace of the AWS service. Valid values: <code>autoscaling</code>, <code>dynamodb</code>, <code>ecs</code>, <code>ec2</code>, <code>rds</code>.</li><li><code>target_tracking_configuration</code> - (Required) Structure that defines new target tracking configurations. Each of these structures includes a specific scaling metric and a target value for the metric, along with various parameters to use with dynamic scaling.<br />More details can be found in the <a href=\"https://docs.aws.amazon.com/autoscaling/plans/APIReference/API_TargetTrackingConfiguration.html\">AWS Auto Scaling API Reference</a>.</li><li><code>customized_load_metric_specification</code> - (Optional) Customized load metric to use for predictive scaling. You must specify either <code>customized_load_metric_specification</code> or <code>predefined_load_metric_specification</code> when configuring predictive scaling.<br />More details can be found in the <a href=\"https://docs.aws.amazon.com/autoscaling/plans/APIReference/API_CustomizedLoadMetricSpecification.html\">AWS Auto Scaling API Reference</a>.</li><li><code>disable_dynamic_scaling</code> - (Optional) Boolean controlling whether dynamic scaling by AWS Auto Scaling is disabled. Defaults to <code>false</code>.</li><li><code>predefined_load_metric_specification</code> - (Optional) Predefined load metric to use for predictive scaling. You must specify either <code>predefined_load_metric_specification</code> or <code>customized_load_metric_specification</code> when configuring predictive scaling.<br />More details can be found in the <a href=\"https://docs.aws.amazon.com/autoscaling/plans/APIReference/API_PredefinedLoadMetricSpecification.html\">AWS Auto Scaling API Reference</a>.</li><li><code>predictive_scaling_max_capacity_behavior</code>- (Optional) Defines the behavior that should be applied if the forecast capacity approaches or exceeds the maximum capacity specified for the resource.<br />Valid values: <code>SetForecastCapacityToMaxCapacity</code>, <code>SetMaxCapacityAboveForecastCapacity</code>, <code>SetMaxCapacityToForecastCapacity</code>.</li><li><code>predictive_scaling_max_capacity_buffer</code> - (Optional) Size of the capacity buffer to use when the forecast capacity is close to or exceeds the maximum capacity.</li><li><code>predictive_scaling_mode</code> - (Optional) Predictive scaling mode. Valid values: <code>ForecastAndScale</code>, <code>ForecastOnly</code>.</li><li><code>scaling_policy_update_behavior</code> - (Optional) Controls whether a resource's externally created scaling policies are kept or replaced. Valid values: <code>KeepExternalPolicies</code>, <code>ReplaceExternalPolicies</code>. Defaults to <code>KeepExternalPolicies</code>.</li><li><code>scheduled_action_buffer_time</code> - (Optional) Amount of time, in seconds, to buffer the run time of scheduled scaling actions when scaling out.</li></ul><p>The <code>customized_load_metric_specification</code> object supports the following:</p><ul><li><code>metric_name</code> - (Required) Name of the metric.</li><li><code>namespace</code> - (Required) Namespace of the metric.</li><li><code>statistic</code> - (Required) Statistic of the metric. Currently, the value must always be <code>Sum</code>.</li><li><code>dimensions</code> - (Optional) Dimensions of the metric.</li><li><code>unit</code> - (Optional) Unit of the metric.</li></ul><p>The <code>predefined_load_metric_specification</code> object supports the following:</p><ul><li><code>predefined_load_metric_type</code> - (Required) Metric type. Valid values: <code>ALBTargetGroupRequestCount</code>, <code>ASGTotalCPUUtilization</code>, <code>ASGTotalNetworkIn</code>, <code>ASGTotalNetworkOut</code>.</li><li><code>resource_label</code> - (Optional) Identifies the resource associated with the metric type.</li></ul><p>The <code>target_tracking_configuration</code> object supports the following:</p><ul><li><code>target_value</code> - (Required) Target value for the metric.</li><li><code>customized_scaling_metric_specification</code> - (Optional) Customized metric. You can specify either <code>customized_scaling_metric_specification</code> or <code>predefined_scaling_metric_specification</code>.<br />More details can be found in the <a href=\"https://docs.aws.amazon.com/autoscaling/plans/APIReference/API_CustomizedScalingMetricSpecification.html\">AWS Auto Scaling API Reference</a>.</li><li><code>disable_scale_in</code> - (Optional) Boolean indicating whether scale in by the target tracking scaling policy is disabled. Defaults to <code>false</code>.</li><li><code>predefined_scaling_metric_specification</code> - (Optional) Predefined metric. You can specify either <code>predefined_scaling_metric_specification</code> or <code>customized_scaling_metric_specification</code>.<br />More details can be found in the <a href=\"https://docs.aws.amazon.com/autoscaling/plans/APIReference/API_PredefinedScalingMetricSpecification.html\">AWS Auto Scaling API Reference</a>.</li><li><code>estimated_instance_warmup</code> - (Optional) Estimated time, in seconds, until a newly launched instance can contribute to the CloudWatch metrics.<br />This value is used only if the resource is an Auto Scaling group.</li><li><code>scale_in_cooldown</code> - (Optional) Amount of time, in seconds, after a scale in activity completes before another scale in activity can start.<br />This value is not used if the scalable resource is an Auto Scaling group.</li><li><code>scale_out_cooldown</code> - (Optional) Amount of time, in seconds, after a scale-out activity completes before another scale-out activity can start.<br />This value is not used if the scalable resource is an Auto Scaling group.</li></ul><p>The <code>customized_scaling_metric_specification</code> object supports the following:</p><ul><li><code>metric_name</code> - (Required) Name of the metric.</li><li><code>namespace</code> - (Required) Namespace of the metric.</li><li><code>statistic</code> - (Required) Statistic of the metric. Valid values: <code>Average</code>, <code>Maximum</code>, <code>Minimum</code>, <code>SampleCount</code>, <code>Sum</code>.</li><li><code>dimensions</code> - (Optional) Dimensions of the metric.</li><li><code>unit</code> - (Optional) Unit of the metric.</li></ul><p>The <code>predefined_scaling_metric_specification</code> object supports the following:</p><ul><li><code>predefined_scaling_metric_type</code> - (Required) Metric type. Valid values: <code>ALBRequestCountPerTarget</code>, <code>ASGAverageCPUUtilization</code>, <code>ASGAverageNetworkIn</code>, <code>ASGAverageNetworkOut</code>, <code>DynamoDBReadCapacityUtilization</code>, <code>DynamoDBWriteCapacityUtilization</code>, <code>ECSServiceAverageCPUUtilization</code>, <code>ECSServiceAverageMemoryUtilization</code>, <code>EC2SpotFleetRequestAverageCPUUtilization</code>, <code>EC2SpotFleetRequestAverageNetworkIn</code>, <code>EC2SpotFleetRequestAverageNetworkOut</code>, <code>RDSReaderAverageCPUUtilization</code>, <code>RDSReaderAverageDatabaseConnections</code>.</li><li><code>resource_label</code> - (Optional) Identifies the resource associated with the metric type.</li></ul>", "attribute-reference": "<h2 id=\"attribute-reference\">Attribute Reference</h2><p>This resource exports the following attributes in addition to the arguments above:</p><ul><li><code>id</code> - Scaling plan identifier.</li><li><code>scaling_plan_version</code> - The version number of the scaling plan. This value is always 1.</li></ul>", "import": "<h2 id=\"import\">Import</h2><p>In Terraform v1.5.0 and later, use an <a href=\"https://developer.hashicorp.com/terraform/language/import\"><code>import</code> block</a> to import Auto Scaling scaling plans using the <code>name</code>. For example:</p><p>terraform<br />import {<br />  to = aws_autoscalingplans_scaling_plan.example<br />  id = \"MyScale1\"<br />}</p><p>Using <code>terraform import</code>, import Auto Scaling scaling plans using the <code>name</code>. For example:</p><p>console<br />% terraform import aws_autoscalingplans_scaling_plan.example MyScale1</p>", "description": "<h1 id=\"resource-aws_autoscalingplans_scaling_plan\">Resource: aws_autoscalingplans_scaling_plan</h1><p>Manages an AWS Auto Scaling scaling plan.<br />More information can be found in the <a href=\"https://docs.aws.amazon.com/autoscaling/plans/userguide/what-is-aws-auto-scaling.html\">AWS Auto Scaling User Guide</a>.</p><p>~&gt; <strong>NOTE:</strong> The AWS Auto Scaling service uses an AWS IAM service-linked role to manage predictive scaling of Amazon EC2 Auto Scaling groups. The service attempts to automatically create this role the first time a scaling plan with predictive scaling enabled is created.<br />An <a href=\"/docs/providers/aws/r/iam_service_linked_role.html\"><code>aws_iam_service_linked_role</code></a> resource can be used to manually manage this role.<br />See the <a href=\"https://docs.aws.amazon.com/autoscaling/plans/userguide/aws-auto-scaling-service-linked-roles.html#create-service-linked-role-manual\">AWS documentation</a> for more details.</p>"}