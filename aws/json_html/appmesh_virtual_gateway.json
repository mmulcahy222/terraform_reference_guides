{"resource-aws-appmesh-virtual-gateway": "<h1 id=\"resource-aws_appmesh_virtual_gateway\">Resource: aws_appmesh_virtual_gateway</h1><p>Provides an AWS App Mesh virtual gateway resource.</p>", "example-usage": "<h2 id=\"example-usage\">Example Usage</h2><h3 id=\"basic\">Basic</h3><br /><p>terraform<br />resource \"aws_appmesh_virtual_gateway\" \"example\" {<br />  name      = \"example-virtual-gateway\"<br />  mesh_name = \"example-service-mesh\"</p><br /><p>spec {<br />    listener {<br />      port_mapping {<br />        port     = 8080<br />        protocol = \"http\"<br />      }<br />    }<br />  }</p><br /><p>tags = {<br />    Environment = \"test\"<br />  }<br />}</p><br /><h3 id=\"access-logs-and-tls\">Access Logs and TLS</h3><br /><p>terraform<br />resource \"aws_appmesh_virtual_gateway\" \"example\" {<br />  name      = \"example-virtual-gateway\"<br />  mesh_name = \"example-service-mesh\"</p><br /><p>spec {<br />    listener {<br />      port_mapping {<br />        port     = 8080<br />        protocol = \"http\"<br />      }</p><br /><pre><code>  tls {<br />    certificate {<br />      acm {<br />        certificate_arn = aws_acm_certificate.example.arn<br />      }<br />    }<br /><br />    mode = \"STRICT\"<br />  }<br />}<br /><br />logging {<br />  access_log {<br />    file {<br />      path = \"/var/log/access.log\"<br />    }<br />  }<br />}<br /></code></pre><br /><p>}<br />}</p><br />", "argument-reference": "<h2 id=\"argument-reference\">Argument Reference</h2><p>This resource supports the following arguments:</p><ul><li><code>name</code> - (Required) Name to use for the virtual gateway. Must be between 1 and 255 characters in length.</li><li><code>mesh_name</code> - (Required) Name of the service mesh in which to create the virtual gateway. Must be between 1 and 255 characters in length.</li><li><code>mesh_owner</code> - (Optional) AWS account ID of the service mesh's owner. Defaults to the account ID the <a href=\"/docs/providers/aws/index.html\">AWS provider</a> is currently connected to.</li><li><code>spec</code> - (Required) Virtual gateway specification to apply.</li><li><code>tags</code> - (Optional) Map of tags to assign to the resource. If configured with a provider <a href=\"https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block\"><code>default_tags</code> configuration block</a> present, tags with matching keys will overwrite those defined at the provider-level.</li></ul><p>The <code>spec</code> object supports the following:</p><ul><li><code>listener</code> - (Required) Listeners that the mesh endpoint is expected to receive inbound traffic from. You can specify one listener.</li><li><code>backend_defaults</code> - (Optional) Defaults for backends.</li><li><code>logging</code> - (Optional) Inbound and outbound access logging information for the virtual gateway.</li></ul><p>The <code>backend_defaults</code> object supports the following:</p><ul><li><code>client_policy</code> - (Optional) Default client policy for virtual gateway backends.</li></ul><p>The <code>client_policy</code> object supports the following:</p><ul><li><code>tls</code> - (Optional) Transport Layer Security (TLS) client policy.</li></ul><p>The <code>tls</code> object supports the following:</p><ul><li><code>certificate</code> (Optional) Virtual gateway's client's Transport Layer Security (TLS) certificate.</li><li><code>enforce</code> - (Optional) Whether the policy is enforced. Default is <code>true</code>.</li><li><code>ports</code> - (Optional) One or more ports that the policy is enforced for.</li><li><code>validation</code> - (Required) TLS validation context.</li></ul><p>The <code>certificate</code> object supports the following:</p><ul><li><code>file</code> - (Optional) Local file certificate.</li><li><code>sds</code> - (Optional) A <a href=\"https://www.envoyproxy.io/docs/envoy/latest/configuration/security/secret#secret-discovery-service-sds\">Secret Discovery Service</a> certificate.</li></ul><p>The <code>file</code> object supports the following:</p><ul><li><code>certificate_chain</code> - (Required) Certificate chain for the certificate.</li><li><code>private_key</code> - (Required) Private key for a certificate stored on the file system of the mesh endpoint that the proxy is running on.</li></ul><p>The <code>sds</code> object supports the following:</p><ul><li><code>secret_name</code> - (Required) Name of the secret secret requested from the Secret Discovery Service provider representing Transport Layer Security (TLS) materials like a certificate or certificate chain.</li></ul><p>The <code>validation</code> object supports the following:</p><ul><li><code>subject_alternative_names</code> - (Optional) SANs for a virtual gateway's listener's Transport Layer Security (TLS) validation context.</li><li><code>trust</code> - (Required) TLS validation context trust.</li></ul><p>The <code>subject_alternative_names</code> object supports the following:</p><ul><li><code>match</code> - (Required) Criteria for determining a SAN's match.</li></ul><p>The <code>match</code> object supports the following:</p><ul><li><code>exact</code> - (Required) Values sent must match the specified values exactly.</li></ul><p>The <code>trust</code> object supports the following:</p><ul><li><code>acm</code> - (Optional) TLS validation context trust for an AWS Certificate Manager (ACM) certificate.</li><li><code>file</code> - (Optional) TLS validation context trust for a local file certificate.</li><li><code>sds</code> - (Optional) TLS validation context trust for a <a href=\"https://www.envoyproxy.io/docs/envoy/latest/configuration/security/secret#secret-discovery-service-sds\">Secret Discovery Service</a> certificate.</li></ul><p>The <code>acm</code> object supports the following:</p><ul><li><code>certificate_authority_arns</code> - (Required) One or more ACM ARNs.</li></ul><p>The <code>file</code> object supports the following:</p><ul><li><code>certificate_chain</code> - (Required) Certificate trust chain for a certificate stored on the file system of the mesh endpoint that the proxy is running on. Must be between 1 and 255 characters in length.</li></ul><p>The <code>sds</code> object supports the following:</p><ul><li><code>secret_name</code> - (Required) Name of the secret for a virtual gateway's Transport Layer Security (TLS) Secret Discovery Service validation context trust.</li></ul><p>The <code>listener</code> object supports the following:</p><ul><li><code>port_mapping</code> - (Required) Port mapping information for the listener.</li><li><code>connection_pool</code> - (Optional) Connection pool information for the listener.</li><li><code>health_check</code> - (Optional) Health check information for the listener.</li><li><code>tls</code> - (Optional) Transport Layer Security (TLS) properties for the listener</li></ul><p>The <code>logging</code> object supports the following:</p><ul><li><code>access_log</code> - (Optional) Access log configuration for a virtual gateway.</li></ul><p>The <code>access_log</code> object supports the following:</p><ul><li><code>file</code> - (Optional) File object to send virtual gateway access logs to.</li></ul><p>The <code>file</code> object supports the following:</p><ul><li><code>format</code> - (Optional) The specified format for the logs.</li><li><code>path</code> - (Required) File path to write access logs to. You can use <code>/dev/stdout</code> to send access logs to standard out. Must be between 1 and 255 characters in length.</li></ul><p>The <code>format</code> object supports the following:</p><ul><li><code>json</code> - (Optional) The logging format for JSON.</li><li><code>text</code> - (Optional) The logging format for text. Must be between 1 and 1000 characters in length.</li></ul><p>The <code>json</code> object supports the following:</p><ul><li><code>key</code> - (Required) The specified key for the JSON. Must be between 1 and 100 characters in length.</li><li><code>value</code> - (Required) The specified value for the JSON. Must be between 1 and 100 characters in length.</li></ul><p>The <code>port_mapping</code> object supports the following:</p><ul><li><code>port</code> - (Required) Port used for the port mapping.</li><li><code>protocol</code> - (Required) Protocol used for the port mapping. Valid values are <code>http</code>, <code>http2</code>, <code>tcp</code> and <code>grpc</code>.</li></ul><p>The <code>connection_pool</code> object supports the following:</p><ul><li><code>grpc</code> - (Optional) Connection pool information for gRPC listeners.</li><li><code>http</code> - (Optional) Connection pool information for HTTP listeners.</li><li><code>http2</code> - (Optional) Connection pool information for HTTP2 listeners.</li></ul><p>The <code>grpc</code> connection pool object supports the following:</p><ul><li><code>max_requests</code> - (Required) Maximum number of inflight requests Envoy can concurrently support across hosts in upstream cluster. Minimum value of <code>1</code>.</li></ul><p>The <code>http</code> connection pool object supports the following:</p><ul><li><code>max_connections</code> - (Required) Maximum number of outbound TCP connections Envoy can establish concurrently with all hosts in upstream cluster. Minimum value of <code>1</code>.</li><li><code>max_pending_requests</code> - (Optional) Number of overflowing requests after <code>max_connections</code> Envoy will queue to upstream cluster. Minimum value of <code>1</code>.</li></ul><p>The <code>http2</code> connection pool object supports the following:</p><ul><li><code>max_requests</code> - (Required) Maximum number of inflight requests Envoy can concurrently support across hosts in upstream cluster. Minimum value of <code>1</code>.</li></ul><p>The <code>health_check</code> object supports the following:</p><ul><li><code>healthy_threshold</code> - (Required) Number of consecutive successful health checks that must occur before declaring listener healthy.</li><li><code>interval_millis</code>- (Required) Time period in milliseconds between each health check execution.</li><li><code>protocol</code> - (Required) Protocol for the health check request. Valid values are <code>http</code>, <code>http2</code>, and <code>grpc</code>.</li><li><code>timeout_millis</code> - (Required) Amount of time to wait when receiving a response from the health check, in milliseconds.</li><li><code>unhealthy_threshold</code> - (Required) Number of consecutive failed health checks that must occur before declaring a virtual gateway unhealthy.</li><li><code>path</code> - (Optional) Destination path for the health check request. This is only required if the specified protocol is <code>http</code> or <code>http2</code>.</li><li><code>port</code> - (Optional) Destination port for the health check request. This port must match the port defined in the <code>port_mapping</code> for the listener.</li></ul><p>The <code>tls</code> object supports the following:</p><ul><li><code>certificate</code> - (Required) Listener's TLS certificate.</li><li><code>mode</code>- (Required) Listener's TLS mode. Valid values: <code>DISABLED</code>, <code>PERMISSIVE</code>, <code>STRICT</code>.</li><li><code>validation</code>- (Optional) Listener's Transport Layer Security (TLS) validation context.</li></ul><p>The <code>certificate</code> object supports the following:</p><ul><li><code>acm</code> - (Optional) An AWS Certificate Manager (ACM) certificate.</li><li><code>file</code> - (Optional) Local file certificate.</li><li><code>sds</code> - (Optional) A <a href=\"https://www.envoyproxy.io/docs/envoy/latest/configuration/security/secret#secret-discovery-service-sds\">Secret Discovery Service</a> certificate.</li></ul><p>The <code>acm</code> object supports the following:</p><ul><li><code>certificate_arn</code> - (Required) ARN for the certificate.</li></ul><p>The <code>file</code> object supports the following:</p><ul><li><code>certificate_chain</code> - (Required) Certificate chain for the certificate. Must be between 1 and 255 characters in length.</li><li><code>private_key</code> - (Required) Private key for a certificate stored on the file system of the mesh endpoint that the proxy is running on. Must be between 1 and 255 characters in length.</li></ul><p>The <code>sds</code> object supports the following:</p><ul><li><code>secret_name</code> - (Required) Name of the secret secret requested from the Secret Discovery Service provider representing Transport Layer Security (TLS) materials like a certificate or certificate chain.</li></ul><p>The <code>validation</code> object supports the following:</p><ul><li><code>subject_alternative_names</code> - (Optional) SANs for a virtual gateway's listener's Transport Layer Security (TLS) validation context.</li><li><code>trust</code> - (Required) TLS validation context trust.</li></ul><p>The <code>subject_alternative_names</code> object supports the following:</p><ul><li><code>match</code> - (Required) Criteria for determining a SAN's match.</li></ul><p>The <code>match</code> object supports the following:</p><ul><li><code>exact</code> - (Required) Values sent must match the specified values exactly.</li></ul><p>The <code>trust</code> object supports the following:</p><ul><li><code>file</code> - (Optional) TLS validation context trust for a local file certificate.</li><li><code>sds</code> - (Optional) TLS validation context trust for a <a href=\"https://www.envoyproxy.io/docs/envoy/latest/configuration/security/secret#secret-discovery-service-sds\">Secret Discovery Service</a> certificate.</li></ul><p>The <code>file</code> object supports the following:</p><ul><li><code>certificate_chain</code> - (Required) Certificate trust chain for a certificate stored on the file system of the mesh endpoint that the proxy is running on. Must be between 1 and 255 characters in length.</li></ul><p>The <code>sds</code> object supports the following:</p><ul><li><code>secret_name</code> - (Required) Name of the secret for a virtual gateway's Transport Layer Security (TLS) Secret Discovery Service validation context trust.</li></ul>", "attribute-reference": "<h2 id=\"attribute-reference\">Attribute Reference</h2><p>This resource exports the following attributes in addition to the arguments above:</p><ul><li><code>id</code> - ID of the virtual gateway.</li><li><code>arn</code> - ARN of the virtual gateway.</li><li><code>created_date</code> - Creation date of the virtual gateway.</li><li><code>last_updated_date</code> - Last update date of the virtual gateway.</li><li><code>resource_owner</code> - Resource owner's AWS account ID.</li><li><code>tags_all</code> - Map of tags assigned to the resource, including those inherited from the provider <a href=\"https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block\"><code>default_tags</code> configuration block</a>.</li></ul>", "import": "<h2 id=\"import\">Import</h2><p>In Terraform v1.5.0 and later, use an <a href=\"https://developer.hashicorp.com/terraform/language/import\"><code>import</code> block</a> to import App Mesh virtual gateway using <code>mesh_name</code> together with the virtual gateway's <code>name</code>. For example:</p><p>terraform<br />import {<br />  to = aws_appmesh_virtual_gateway.example<br />  id = \"mesh/gw1\"<br />}</p><p>Using <code>terraform import</code>, import App Mesh virtual gateway using <code>mesh_name</code> together with the virtual gateway's <code>name</code>. For example:</p><p>console<br />% terraform import aws_appmesh_virtual_gateway.example mesh/gw1</p>", "description": "<h1 id=\"resource-aws_appmesh_virtual_gateway\">Resource: aws_appmesh_virtual_gateway</h1><p>Provides an AWS App Mesh virtual gateway resource.</p>"}