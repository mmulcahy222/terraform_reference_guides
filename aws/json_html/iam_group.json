{"resource-aws-iam-group": "<h1 id=\"resource-aws_iam_group\">Resource: aws_iam_group</h1><p>Provides an IAM group.</p><p>~&gt; <strong>NOTE on user management:</strong> Using <code>aws_iam_group_membership</code> or <code>aws_iam_user_group_membership</code> resources in addition to manually managing user/group membership using the console may lead to configuration drift or conflicts. For this reason, it's recommended to either manage membership entirely with Terraform or entirely within the AWS console.</p>", "example-usage": "<h2 id=\"example-usage\">Example Usage</h2><p>terraform<br />resource \"aws_iam_group\" \"developers\" {<br />  name = \"developers\"<br />  path = \"/users/\"<br />}</p><br />", "argument-reference": "<h2 id=\"argument-reference\">Argument Reference</h2><p>This resource supports the following arguments:</p><ul><li><code>name</code> - (Required) The group's name. The name must consist of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: <code>=,.@-_.</code>. Group names are not distinguished by case. For example, you cannot create groups named both \"ADMINS\" and \"admins\".</li><li><code>path</code> - (Optional, default \"/\") Path in which to create the group.</li></ul>", "attribute-reference": "<h2 id=\"attribute-reference\">Attribute Reference</h2><p>This resource exports the following attributes in addition to the arguments above:</p><ul><li><code>id</code> - The group's ID.</li><li><code>arn</code> - The ARN assigned by AWS for this group.</li><li><code>name</code> - The group's name.</li><li><code>path</code> - The path of the group in IAM.</li><li><code>unique_id</code> - The <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html#GUIDs\">unique ID</a> assigned by AWS.</li></ul>", "import": "<h2 id=\"import\">Import</h2><p>In Terraform v1.5.0 and later, use an <a href=\"https://developer.hashicorp.com/terraform/language/import\"><code>import</code> block</a> to import IAM Groups using the <code>name</code>. For example:</p><p>terraform<br />import {<br />  to = aws_iam_group.developers<br />  id = \"developers\"<br />}</p><p>Using <code>terraform import</code>, import IAM Groups using the <code>name</code>. For example:</p><p>console<br />% terraform import aws_iam_group.developers developers</p>", "description": "<h1 id=\"resource-aws_iam_group\">Resource: aws_iam_group</h1><p>Provides an IAM group.</p><p>~&gt; <strong>NOTE on user management:</strong> Using <code>aws_iam_group_membership</code> or <code>aws_iam_user_group_membership</code> resources in addition to manually managing user/group membership using the console may lead to configuration drift or conflicts. For this reason, it's recommended to either manage membership entirely with Terraform or entirely within the AWS console.</p>"}