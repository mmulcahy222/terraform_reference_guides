{"resource-aws-route53-record": "<h1 id=\"resource-aws_route53_record\">Resource: aws_route53_record</h1><p>Provides a Route53 record resource.</p>", "example-usage": "<h2 id=\"example-usage\">Example Usage</h2><h3 id=\"simple-routing-policy\">Simple routing policy</h3><p><code>terraformresource \"aws_route53_record\" \"www\" {  zone_id = aws_route53_zone.primary.zone_id  name    = \"www.example.com\"  type    = \"A\"  ttl     = 300  records = [aws_eip.lb.public_ip]}</code></p><h3 id=\"weighted-routing-policy\">Weighted routing policy</h3><p>Other routing policies are configured similarly. See <a href=\"https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-policy.html\">Amazon Route 53 Developer Guide</a> for details.</p><p>terraform<br />resource \"aws_route53_record\" \"www-dev\" {<br />  zone_id = aws_route53_zone.primary.zone_id<br />  name    = \"www\"<br />  type    = \"CNAME\"<br />  ttl     = 5</p><p>weighted_routing_policy {<br />    weight = 10<br />  }</p><p>set_identifier = \"dev\"<br />  records        = [\"dev.example.com\"]<br />}</p><p>resource \"aws_route53_record\" \"www-live\" {<br />  zone_id = aws_route53_zone.primary.zone_id<br />  name    = \"www\"<br />  type    = \"CNAME\"<br />  ttl     = 5</p><p>weighted_routing_policy {<br />    weight = 90<br />  }</p><p>set_identifier = \"live\"<br />  records        = [\"live.example.com\"]<br />}<br /></p><h3 id=\"alias-record\">Alias record</h3><p>See <a href=\"https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/resource-record-sets-choosing-alias-non-alias.html\">related part of Amazon Route 53 Developer Guide</a><br />to understand differences between alias and non-alias records.</p><p>TTL for all alias records is <a href=\"https://aws.amazon.com/route53/faqs/#dns_failover_do_i_need_to_adjust\">60 seconds</a>,<br />you cannot change this, therefore <code>ttl</code> has to be omitted in alias records.</p><p>terraform<br />resource \"aws_elb\" \"main\" {<br />  name               = \"foobar-terraform-elb\"<br />  availability_zones = [\"us-east-1c\"]</p><p>listener {<br />    instance_port     = 80<br />    instance_protocol = \"http\"<br />    lb_port           = 80<br />    lb_protocol       = \"http\"<br />  }<br />}</p><p>resource \"aws_route53_record\" \"www\" {<br />  zone_id = aws_route53_zone.primary.zone_id<br />  name    = \"example.com\"<br />  type    = \"A\"</p><p>alias {<br />    name                   = aws_elb.main.dns_name<br />    zone_id                = aws_elb.main.zone_id<br />    evaluate_target_health = true<br />  }<br />}<br /></p><h3 id=\"ns-and-soa-record-management\">NS and SOA Record Management</h3><p>When creating Route 53 zones, the <code>NS</code> and <code>SOA</code> records for the zone are automatically created. Enabling the <code>allow_overwrite</code> argument will allow managing these records in a single Terraform run without the requirement for <code>terraform import</code>.</p><p>terraform<br />resource \"aws_route53_zone\" \"example\" {<br />  name = \"test.example.com\"<br />}</p><p>resource \"aws_route53_record\" \"example\" {<br />  allow_overwrite = true<br />  name            = \"test.example.com\"<br />  ttl             = 172800<br />  type            = \"NS\"<br />  zone_id         = aws_route53_zone.example.zone_id</p><p>records = [<br />    aws_route53_zone.example.name_servers[0],<br />    aws_route53_zone.example.name_servers[1],<br />    aws_route53_zone.example.name_servers[2],<br />    aws_route53_zone.example.name_servers[3],<br />  ]<br />}<br /></p>", "argument-reference": "<h2 id=\"argument-reference\">Argument Reference</h2><p>This resource supports the following arguments:</p><ul><li><code>zone_id</code> - (Required) The ID of the hosted zone to contain this record.</li><li><code>name</code> - (Required) The name of the record.</li><li><code>type</code> - (Required) The record type. Valid values are <code>A</code>, <code>AAAA</code>, <code>CAA</code>, <code>CNAME</code>, <code>DS</code>, <code>MX</code>, <code>NAPTR</code>, <code>NS</code>, <code>PTR</code>, <code>SOA</code>, <code>SPF</code>, <code>SRV</code> and <code>TXT</code>.</li><li><code>ttl</code> - (Required for non-alias records) The TTL of the record.</li><li><code>records</code> - (Required for non-alias records) A string list of records. To specify a single record value longer than 255 characters such as a TXT record for DKIM, add <code>\\\"\\\"</code> inside the Terraform configuration string (e.g., <code>\"first255characters\\\"\\\"morecharacters\"</code>).</li><li><code>set_identifier</code> - (Optional) Unique identifier to differentiate records with routing policies from one another. Required if using <code>cidr_routing_policy</code>, <code>failover_routing_policy</code>, <code>geolocation_routing_policy</code>, <code>latency_routing_policy</code>, <code>multivalue_answer_routing_policy</code>, or <code>weighted_routing_policy</code>.</li><li><code>health_check_id</code> - (Optional) The health check the record should be associated with.</li><li><code>alias</code> - (Optional) An alias block. Conflicts with <code>ttl</code> &amp; <code>records</code>.<br /><a href=\"#alias\">Documented below</a>.</li><li><code>cidr_routing_policy</code> - (Optional) A block indicating a routing policy based on the IP network ranges of requestors. Conflicts with any other routing policy. <a href=\"#cidr-routing-policy\">Documented below</a>.</li><li><code>failover_routing_policy</code> - (Optional) A block indicating the routing behavior when associated health check fails. Conflicts with any other routing policy. <a href=\"#failover-routing-policy\">Documented below</a>.</li><li><code>geolocation_routing_policy</code> - (Optional) A block indicating a routing policy based on the geolocation of the requestor. Conflicts with any other routing policy. <a href=\"#geolocation-routing-policy\">Documented below</a>.</li><li><code>latency_routing_policy</code> - (Optional) A block indicating a routing policy based on the latency between the requestor and an AWS region. Conflicts with any other routing policy. <a href=\"#latency-routing-policy\">Documented below</a>.</li><li><code>multivalue_answer_routing_policy</code> - (Optional) Set to <code>true</code> to indicate a multivalue answer routing policy. Conflicts with any other routing policy.</li><li><code>weighted_routing_policy</code> - (Optional) A block indicating a weighted routing policy. Conflicts with any other routing policy. <a href=\"#weighted-routing-policy\">Documented below</a>.</li><li><code>allow_overwrite</code> - (Optional) Allow creation of this record in Terraform to overwrite an existing record, if any. This does not affect the ability to update the record in Terraform and does not prevent other resources within Terraform or manual Route 53 changes outside Terraform from overwriting this record. <code>false</code> by default. This configuration is not recommended for most environments.</li></ul><p>Exactly one of <code>records</code> or <code>alias</code> must be specified: this determines whether it's an alias record.</p><h3 id=\"alias\">Alias</h3><p>Alias records support the following:</p><ul><li><code>name</code> - (Required) DNS domain name for a CloudFront distribution, S3 bucket, ELB, or another resource record set in this hosted zone.</li><li><code>zone_id</code> - (Required) Hosted zone ID for a CloudFront distribution, S3 bucket, ELB, or Route 53 hosted zone. See <a href=\"/docs/providers/aws/r/elb.html#zone_id\"><code>resource_elb.zone_id</code></a> for example.</li><li><code>evaluate_target_health</code> - (Required) Set to <code>true</code> if you want Route 53 to determine whether to respond to DNS queries using this resource record set by checking the health of the resource record set. Some resources have special requirements, see <a href=\"https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/resource-record-sets-values.html#rrsets-values-alias-evaluate-target-health\">related part of documentation</a>.</li></ul><h3 id=\"cidr-routing-policy\">CIDR Routing Policy</h3><p>CIDR routing policies support the following:</p><ul><li><code>collection_id</code> - (Required) The CIDR collection ID. See the <a href=\"route53_cidr_collection.html\"><code>aws_route53_cidr_collection</code> resource</a> for more details.</li><li><code>location_name</code> - (Required) The CIDR collection location name. See the <a href=\"route53_cidr_location.html\"><code>aws_route53_cidr_location</code> resource</a> for more details. A <code>location_name</code> with an asterisk <code>\"*\"</code> can be used to create a default CIDR record. <code>collection_id</code> is still required for default record.</li></ul><h3 id=\"failover-routing-policy\">Failover Routing Policy</h3><p>Failover routing policies support the following:</p><ul><li><code>type</code> - (Required) <code>PRIMARY</code> or <code>SECONDARY</code>. A <code>PRIMARY</code> record will be served if its healthcheck is passing, otherwise the <code>SECONDARY</code> will be served. See http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover-configuring-options.html#dns-failover-failover-rrsets</li></ul><h3 id=\"geolocation-routing-policy\">Geolocation Routing Policy</h3><p>Geolocation routing policies support the following:</p><ul><li><code>continent</code> - A two-letter continent code. See http://docs.aws.amazon.com/Route53/latest/APIReference/API_GetGeoLocation.html for code details. Either <code>continent</code> or <code>country</code> must be specified.</li><li><code>country</code> - A two-character country code or <code>*</code> to indicate a default resource record set.</li><li><code>subdivision</code> - (Optional) A subdivision code for a country.</li></ul><h3 id=\"latency-routing-policy\">Latency Routing Policy</h3><p>Latency routing policies support the following:</p><ul><li><code>region</code> - (Required) An AWS region from which to measure latency. See http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-policy.html#routing-policy-latency</li></ul><h3 id=\"weighted-routing-policy_1\">Weighted Routing Policy</h3><p>Weighted routing policies support the following:</p><ul><li><code>weight</code> - (Required) A numeric value indicating the relative weight of the record. See http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-policy.html#routing-policy-weighted.</li></ul>", "attribute-reference": "<h2 id=\"attribute-reference\">Attribute Reference</h2><p>This resource exports the following attributes in addition to the arguments above:</p><ul><li><code>name</code> - The name of the record.</li><li><code>fqdn</code> - <a href=\"https://en.wikipedia.org/wiki/Fully_qualified_domain_name\">FQDN</a> built using the zone domain and <code>name</code>.</li></ul>", "import": "<h2 id=\"import\">Import</h2><p>In Terraform v1.5.0 and later, use an <a href=\"https://developer.hashicorp.com/terraform/language/import\"><code>import</code> block</a> to import Route53 Records using the ID of the record, record name, record type, and set identifier. For example:</p><p>Using the ID of the record, which is the zone identifier, record name, and record type, separated by underscores (<code>_</code>):</p><p><code>terraformimport {  to = aws_route53_record.myrecord  id = \"Z4KAPRWWNC7JR_dev.example.com_NS\"}</code></p><p>If the record also contains a set identifier, append it:</p><p><code>terraformimport {  to = aws_route53_record.myrecord  id = \"Z4KAPRWWNC7JR_dev.example.com_NS_dev\"}</code></p><p><strong>Using <code>terraform import</code> to import</strong> Route53 Records using the ID of the record, record name, record type, and set identifier. For example:</p><p>Using the ID of the record, which is the zone identifier, record name, and record type, separated by underscores (<code>_</code>):</p><p><code>console% terraform import aws_route53_record.myrecord Z4KAPRWWNC7JR_dev.example.com_NS</code></p><p>If the record also contains a set identifier, append it:</p><p><code>console% terraform import aws_route53_record.myrecord Z4KAPRWWNC7JR_dev.example.com_NS_dev</code></p>", "description": "<h1 id=\"resource-aws_route53_record\">Resource: aws_route53_record</h1><p>Provides a Route53 record resource.</p>"}