{"resource-aws-codedeploy-deployment-config": "<h1 id=\"resource-aws_codedeploy_deployment_config\">Resource: aws_codedeploy_deployment_config</h1><p>Provides a CodeDeploy deployment config for an application</p>", "example-usage": "<h2 id=\"example-usage\">Example Usage</h2><h3 id=\"server-usage\">Server Usage</h3><p>terraform<br />resource \"aws_codedeploy_deployment_config\" \"foo\" {<br />  deployment_config_name = \"test-deployment-config\"</p><p>minimum_healthy_hosts {<br />    type  = \"HOST_COUNT\"<br />    value = 2<br />  }<br />}</p><p>resource \"aws_codedeploy_deployment_group\" \"foo\" {<br />  app_name               = aws_codedeploy_app.foo_app.name<br />  deployment_group_name  = \"bar\"<br />  service_role_arn       = aws_iam_role.foo_role.arn<br />  deployment_config_name = aws_codedeploy_deployment_config.foo.id</p><p>ec2_tag_filter {<br />    key   = \"filterkey\"<br />    type  = \"KEY_AND_VALUE\"<br />    value = \"filtervalue\"<br />  }</p><p>trigger_configuration {<br />    trigger_events     = [\"DeploymentFailure\"]<br />    trigger_name       = \"foo-trigger\"<br />    trigger_target_arn = \"foo-topic-arn\"<br />  }</p><p>auto_rollback_configuration {<br />    enabled = true<br />    events  = [\"DEPLOYMENT_FAILURE\"]<br />  }</p><p>alarm_configuration {<br />    alarms  = [\"my-alarm-name\"]<br />    enabled = true<br />  }<br />}<br /></p><h3 id=\"lambda-usage\">Lambda Usage</h3><p>terraform<br />resource \"aws_codedeploy_deployment_config\" \"foo\" {<br />  deployment_config_name = \"test-deployment-config\"<br />  compute_platform       = \"Lambda\"</p><p>traffic_routing_config {<br />    type = \"TimeBasedLinear\"</p><pre><code>time_based_linear {  interval   = 10  percentage = 10}</code></pre><p>}<br />}</p><p>resource \"aws_codedeploy_deployment_group\" \"foo\" {<br />  app_name               = aws_codedeploy_app.foo_app.name<br />  deployment_group_name  = \"bar\"<br />  service_role_arn       = aws_iam_role.foo_role.arn<br />  deployment_config_name = aws_codedeploy_deployment_config.foo.id</p><p>auto_rollback_configuration {<br />    enabled = true<br />    events  = [\"DEPLOYMENT_STOP_ON_ALARM\"]<br />  }</p><p>alarm_configuration {<br />    alarms  = [\"my-alarm-name\"]<br />    enabled = true<br />  }<br />}<br /></p>", "argument-reference": "<h2 id=\"argument-reference\">Argument Reference</h2><p>This resource supports the following arguments:</p><ul><li><code>deployment_config_name</code> - (Required) The name of the deployment config.</li><li><code>compute_platform</code> - (Optional) The compute platform can be <code>Server</code>, <code>Lambda</code>, or <code>ECS</code>. Default is <code>Server</code>.</li><li><code>minimum_healthy_hosts</code> - (Optional) A minimum_healthy_hosts block. Required for <code>Server</code> compute platform. Minimum Healthy Hosts are documented below.</li><li><code>traffic_routing_config</code> - (Optional) A traffic_routing_config block. Traffic Routing Config is documented below.</li></ul><p>The <code>minimum_healthy_hosts</code> block supports the following:</p><ul><li><code>type</code> - (Required) The type can either be <code>FLEET_PERCENT</code> or <code>HOST_COUNT</code>.</li><li><code>value</code> - (Required) The value when the type is <code>FLEET_PERCENT</code> represents the minimum number of healthy instances as<br />a percentage of the total number of instances in the deployment. If you specify FLEET_PERCENT, at the start of the<br />deployment, AWS CodeDeploy converts the percentage to the equivalent number of instance and rounds up fractional instances.<br />When the type is <code>HOST_COUNT</code>, the value represents the minimum number of healthy instances as an absolute value.</li></ul><p>The <code>traffic_routing_config</code> block supports the following:</p><ul><li><code>type</code> - (Optional) Type of traffic routing config. One of <code>TimeBasedCanary</code>, <code>TimeBasedLinear</code>, <code>AllAtOnce</code>.</li><li><code>time_based_canary</code> - (Optional) The time based canary configuration information. If <code>type</code> is <code>TimeBasedLinear</code>, use <code>time_based_linear</code> instead.</li><li><code>time_based_linear</code> - (Optional) The time based linear configuration information. If <code>type</code> is <code>TimeBasedCanary</code>, use <code>time_based_canary</code> instead.</li></ul><p>The <code>time_based_canary</code> block supports the following:</p><ul><li><code>interval</code> - (Optional) The number of minutes between the first and second traffic shifts of a <code>TimeBasedCanary</code> deployment.</li><li><code>percentage</code> - (Optional) The percentage of traffic to shift in the first increment of a <code>TimeBasedCanary</code> deployment.</li></ul><p>The <code>time_based_linear</code> block supports the following:</p><ul><li><code>interval</code> - (Optional) The number of minutes between each incremental traffic shift of a <code>TimeBasedLinear</code> deployment.</li><li><code>percentage</code> - (Optional) The percentage of traffic that is shifted at the start of each increment of a <code>TimeBasedLinear</code> deployment.</li></ul>", "attribute-reference": "<h2 id=\"attribute-reference\">Attribute Reference</h2><p>This resource exports the following attributes in addition to the arguments above:</p><ul><li><code>id</code> - The deployment group's config name.</li><li><code>deployment_config_id</code> - The AWS Assigned deployment config id</li></ul>", "import": "<h2 id=\"import\">Import</h2><p>In Terraform v1.5.0 and later, use an <a href=\"https://developer.hashicorp.com/terraform/language/import\"><code>import</code> block</a> to import CodeDeploy Deployment Configurations using the <code>deployment_config_name</code>. For example:</p><p><code>terraformimport {  to = aws_codedeploy_deployment_config.example  id = \"my-deployment-config\"}</code></p><p>Using <code>terraform import</code>, import CodeDeploy Deployment Configurations using the <code>deployment_config_name</code>. For example:</p><p><code>console% terraform import aws_codedeploy_deployment_config.example my-deployment-config</code></p>", "description": "<h1 id=\"resource-aws_codedeploy_deployment_config\">Resource: aws_codedeploy_deployment_config</h1><p>Provides a CodeDeploy deployment config for an application</p>"}