{"resource-aws-db-parameter-group": "<h1 id=\"resource-aws_db_parameter_group\">Resource: aws_db_parameter_group</h1><p>Provides an RDS DB parameter group resource. Documentation of the available parameters for various RDS engines can be found at:</p><ul><li><a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/AuroraMySQL.Reference.html\">Aurora MySQL Parameters</a></li><li><a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/AuroraPostgreSQL.Reference.html\">Aurora PostgreSQL Parameters</a></li><li><a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Appendix.MariaDB.Parameters.html\">MariaDB Parameters</a></li><li><a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_ModifyInstance.Oracle.html#USER_ModifyInstance.Oracle.sqlnet\">Oracle Parameters</a></li><li><a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Appendix.PostgreSQL.CommonDBATasks.html#Appendix.PostgreSQL.CommonDBATasks.Parameters\">PostgreSQL Parameters</a></li></ul><blockquote><p><strong>Hands-on:</strong> For an example of the <code>aws_db_parameter_group</code> in use, follow the <a href=\"https://learn.hashicorp.com/tutorials/terraform/aws-rds?in=terraform/aws&amp;utm_source=WEBSITE&amp;utm_medium=WEB_IO&amp;utm_offer=ARTICLE_PAGE&amp;utm_content=DOCS\">Manage AWS RDS Instances</a> tutorial on HashiCorp Learn.</p></blockquote><p>~&gt; <strong>NOTE:</strong> After applying your changes, you may encounter a perpetual diff in your Terraform plan<br />output for a <code>parameter</code> whose <code>value</code> remains unchanged but whose <code>apply_method</code> is changing<br />(e.g., from <code>immediate</code> to <code>pending-reboot</code>, or <code>pending-reboot</code> to <code>immediate</code>). If only the<br />apply method of a parameter is changing, the AWS API will not register this change. To change<br />the <code>apply_method</code> of a parameter, its value must also change.</p>", "example-usage": "<h2 id=\"example-usage\">Example Usage</h2><h3 id=\"basic-usage\">Basic Usage</h3><p>terraform<br />resource \"aws_db_parameter_group\" \"default\" {<br />  name   = \"rds-pg\"<br />  family = \"mysql5.6\"</p><p>parameter {<br />    name  = \"character_set_server\"<br />    value = \"utf8\"<br />  }</p><p>parameter {<br />    name  = \"character_set_client\"<br />    value = \"utf8\"<br />  }<br />}<br /></p><h3 id=\"create_before_destroy-lifecycle-configuration\"><code>create_before_destroy</code> Lifecycle Configuration</h3><p>The <a href=\"https://developer.hashicorp.com/terraform/language/meta-arguments/lifecycle#create_before_destroy\"><code>create_before_destroy</code></a><br />lifecycle configuration is necessary for modifications that force re-creation of an existing,<br />in-use parameter group. This includes common situations like changing the group <code>name</code> or<br />bumping the <code>family</code> version during a major version upgrade. This configuration will prevent destruction<br />of the deposed parameter group while still in use by the database during upgrade.</p><p>terraform<br />resource \"aws_db_parameter_group\" \"example\" {<br />  name   = \"my-pg\"<br />  family = \"postgres13\"</p><p>parameter {<br />    name  = \"log_connections\"<br />    value = \"1\"<br />  }</p><p>lifecycle {<br />    create_before_destroy = true<br />  }<br />}</p><p>resource \"aws_db_instance\" \"example\" {<br />  # other attributes<br />  parameter_group_name = aws_db_parameter_group.example.name<br />  apply_immediately    = true<br />}<br /></p>", "argument-reference": "<h2 id=\"argument-reference\">Argument Reference</h2><p>This resource supports the following arguments:</p><ul><li><code>name</code> - (Optional, Forces new resource) The name of the DB parameter group. If omitted, Terraform will assign a random, unique name.</li><li><code>name_prefix</code> - (Optional, Forces new resource) Creates a unique name beginning with the specified prefix. Conflicts with <code>name</code>.</li><li><code>family</code> - (Required, Forces new resource) The family of the DB parameter group.</li><li><code>description</code> - (Optional, Forces new resource) The description of the DB parameter group. Defaults to \"Managed by Terraform\".</li><li><code>parameter</code> - (Optional) A list of DB parameters to apply. Note that parameters may differ from a family to an other. Full list of all parameters can be discovered via <a href=\"https://docs.aws.amazon.com/cli/latest/reference/rds/describe-db-parameters.html\"><code>aws rds describe-db-parameters</code></a> after initial creation of the group.</li><li><code>tags</code> - (Optional) A map of tags to assign to the resource. If configured with a provider <a href=\"https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block\"><code>default_tags</code> configuration block</a> present, tags with matching keys will overwrite those defined at the provider-level.</li></ul><p>Parameter blocks support the following:</p><ul><li><code>name</code> - (Required) The name of the DB parameter.</li><li><code>value</code> - (Required) The value of the DB parameter.</li><li><code>apply_method</code> - (Optional) \"immediate\" (default), or \"pending-reboot\". Some<br />    engines can't apply some parameters without a reboot, and you will need to<br />    specify \"pending-reboot\" here.</li></ul>", "attribute-reference": "<h2 id=\"attribute-reference\">Attribute Reference</h2><p>This resource exports the following attributes in addition to the arguments above:</p><ul><li><code>id</code> - The db parameter group name.</li><li><code>arn</code> - The ARN of the db parameter group.</li><li><code>tags_all</code> - A map of tags assigned to the resource, including those inherited from the provider <a href=\"https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block\"><code>default_tags</code> configuration block</a>.</li></ul>", "import": "<h2 id=\"import\">Import</h2><p>In Terraform v1.5.0 and later, use an <a href=\"https://developer.hashicorp.com/terraform/language/import\"><code>import</code> block</a> to import DB Parameter groups using the <code>name</code>. For example:</p><p><code>terraformimport {  to = aws_db_parameter_group.rds_pg  id = \"rds-pg\"}</code></p><p>Using <code>terraform import</code>, import DB Parameter groups using the <code>name</code>. For example:</p><p><code>console% terraform import aws_db_parameter_group.rds_pg rds-pg</code></p>", "description": "<h1 id=\"resource-aws_db_parameter_group\">Resource: aws_db_parameter_group</h1><p>Provides an RDS DB parameter group resource. Documentation of the available parameters for various RDS engines can be found at:</p><ul><li><a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/AuroraMySQL.Reference.html\">Aurora MySQL Parameters</a></li><li><a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/AuroraPostgreSQL.Reference.html\">Aurora PostgreSQL Parameters</a></li><li><a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Appendix.MariaDB.Parameters.html\">MariaDB Parameters</a></li><li><a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_ModifyInstance.Oracle.html#USER_ModifyInstance.Oracle.sqlnet\">Oracle Parameters</a></li><li><a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Appendix.PostgreSQL.CommonDBATasks.html#Appendix.PostgreSQL.CommonDBATasks.Parameters\">PostgreSQL Parameters</a></li></ul><blockquote><p><strong>Hands-on:</strong> For an example of the <code>aws_db_parameter_group</code> in use, follow the <a href=\"https://learn.hashicorp.com/tutorials/terraform/aws-rds?in=terraform/aws&amp;utm_source=WEBSITE&amp;utm_medium=WEB_IO&amp;utm_offer=ARTICLE_PAGE&amp;utm_content=DOCS\">Manage AWS RDS Instances</a> tutorial on HashiCorp Learn.</p></blockquote><p>~&gt; <strong>NOTE:</strong> After applying your changes, you may encounter a perpetual diff in your Terraform plan<br />output for a <code>parameter</code> whose <code>value</code> remains unchanged but whose <code>apply_method</code> is changing<br />(e.g., from <code>immediate</code> to <code>pending-reboot</code>, or <code>pending-reboot</code> to <code>immediate</code>). If only the<br />apply method of a parameter is changing, the AWS API will not register this change. To change<br />the <code>apply_method</code> of a parameter, its value must also change.</p>"}