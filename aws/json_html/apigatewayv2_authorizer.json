{"resource-aws-apigatewayv2-authorizer": "<h1 id=\"resource-aws_apigatewayv2_authorizer\">Resource: aws_apigatewayv2_authorizer</h1><p>Manages an Amazon API Gateway Version 2 authorizer.<br />More information can be found in the <a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api.html\">Amazon API Gateway Developer Guide</a>.</p>", "example-usage": "<h2 id=\"example-usage\">Example Usage</h2><h3 id=\"basic-websocket-api\">Basic WebSocket API</h3><br /><p>terraform<br />resource \"aws_apigatewayv2_authorizer\" \"example\" {<br />  api_id           = aws_apigatewayv2_api.example.id<br />  authorizer_type  = \"REQUEST\"<br />  authorizer_uri   = aws_lambda_function.example.invoke_arn<br />  identity_sources = [\"route.request.header.Auth\"]<br />  name             = \"example-authorizer\"<br />}</p><br /><h3 id=\"basic-http-api\">Basic HTTP API</h3><br /><p>terraform<br />resource \"aws_apigatewayv2_authorizer\" \"example\" {<br />  api_id                            = aws_apigatewayv2_api.example.id<br />  authorizer_type                   = \"REQUEST\"<br />  authorizer_uri                    = aws_lambda_function.example.invoke_arn<br />  identity_sources                  = [\"$request.header.Authorization\"]<br />  name                              = \"example-authorizer\"<br />  authorizer_payload_format_version = \"2.0\"<br />}</p><br />", "argument-reference": "<h2 id=\"argument-reference\">Argument Reference</h2><p>This resource supports the following arguments:</p><ul><li><code>api_id</code> - (Required) API identifier.</li><li><code>authorizer_type</code> - (Required) Authorizer type. Valid values: <code>JWT</code>, <code>REQUEST</code>.<br />Specify <code>REQUEST</code> for a Lambda function using incoming request parameters.<br />For HTTP APIs, specify <code>JWT</code> to use JSON Web Tokens.</li><li><code>name</code> - (Required) Name of the authorizer. Must be between 1 and 128 characters in length.</li><li><code>authorizer_credentials_arn</code> - (Optional) Required credentials as an IAM role for API Gateway to invoke the authorizer.<br />Supported only for <code>REQUEST</code> authorizers.</li><li><code>authorizer_payload_format_version</code> - (Optional) Format of the payload sent to an HTTP API Lambda authorizer. Required for HTTP API Lambda authorizers.<br />Valid values: <code>1.0</code>, <code>2.0</code>.</li><li><code>authorizer_result_ttl_in_seconds</code> - (Optional) Time to live (TTL) for cached authorizer results, in seconds. If it equals 0, authorization caching is disabled.<br />If it is greater than 0, API Gateway caches authorizer responses. The maximum value is 3600, or 1 hour. Defaults to <code>300</code>.<br />Supported only for HTTP API Lambda authorizers.</li><li><code>authorizer_uri</code> - (Optional) Authorizer's Uniform Resource Identifier (URI).<br />For <code>REQUEST</code> authorizers this must be a well-formed Lambda function URI, such as the <code>invoke_arn</code> attribute of the <a href=\"/docs/providers/aws/r/lambda_function.html\"><code>aws_lambda_function</code></a> resource.<br />Supported only for <code>REQUEST</code> authorizers. Must be between 1 and 2048 characters in length.</li><li><code>enable_simple_responses</code> - (Optional) Whether a Lambda authorizer returns a response in a simple format. If enabled, the Lambda authorizer can return a boolean value instead of an IAM policy.<br />Supported only for HTTP APIs.</li><li><code>identity_sources</code> - (Optional) Identity sources for which authorization is requested.<br />For <code>REQUEST</code> authorizers the value is a list of one or more mapping expressions of the specified request parameters.<br />For <code>JWT</code> authorizers the single entry specifies where to extract the JSON Web Token (JWT) from inbound requests.</li><li><code>jwt_configuration</code> - (Optional) Configuration of a JWT authorizer. Required for the <code>JWT</code> authorizer type.<br />Supported only for HTTP APIs.</li></ul><p>The <code>jwt_configuration</code> object supports the following:</p><ul><li><code>audience</code> - (Optional) List of the intended recipients of the JWT. A valid JWT must provide an aud that matches at least one entry in this list.</li><li><code>issuer</code> - (Optional) Base domain of the identity provider that issues JSON Web Tokens, such as the <code>endpoint</code> attribute of the <a href=\"/docs/providers/aws/r/cognito_user_pool.html\"><code>aws_cognito_user_pool</code></a> resource.</li></ul>", "attribute-reference": "<h2 id=\"attribute-reference\">Attribute Reference</h2><p>This resource exports the following attributes in addition to the arguments above:</p><ul><li><code>id</code> - Authorizer identifier.</li></ul>", "import": "<h2 id=\"import\">Import</h2><p>In Terraform v1.5.0 and later, use an <a href=\"https://developer.hashicorp.com/terraform/language/import\"><code>import</code> block</a> to import <code>aws_apigatewayv2_authorizer</code> using the API identifier and authorizer identifier. For example:</p><p>terraform<br />import {<br />  to = aws_apigatewayv2_authorizer.example<br />  id = \"aabbccddee/1122334\"<br />}</p><p>Using <code>terraform import</code>, import <code>aws_apigatewayv2_authorizer</code> using the API identifier and authorizer identifier. For example:</p><p>console<br />% terraform import aws_apigatewayv2_authorizer.example aabbccddee/1122334</p>", "description": "<h1 id=\"resource-aws_apigatewayv2_authorizer\">Resource: aws_apigatewayv2_authorizer</h1><p>Manages an Amazon API Gateway Version 2 authorizer.<br />More information can be found in the <a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api.html\">Amazon API Gateway Developer Guide</a>.</p>"}