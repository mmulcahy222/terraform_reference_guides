{"resource-aws-vpc-dhcp-options": "<h1 id=\"resource-aws_vpc_dhcp_options\">Resource: aws_vpc_dhcp_options</h1><p>Provides a VPC DHCP Options resource.</p>", "example-usage": "<h2 id=\"example-usage\">Example Usage</h2><p>Basic usage:</p><p><code>terraformresource \"aws_vpc_dhcp_options\" \"dns_resolver\" {  domain_name_servers = [\"8.8.8.8\", \"8.8.4.4\"]}</code></p><p>Full usage:</p><p>terraform<br />resource \"aws_vpc_dhcp_options\" \"foo\" {<br />  domain_name          = \"service.consul\"<br />  domain_name_servers  = [\"127.0.0.1\", \"10.0.0.2\"]<br />  ntp_servers          = [\"127.0.0.1\"]<br />  netbios_name_servers = [\"127.0.0.1\"]<br />  netbios_node_type    = 2</p><p>tags = {<br />    Name = \"foo-name\"<br />  }<br />}<br /></p>", "argument-reference": "<h2 id=\"argument-reference\">Argument Reference</h2><p>This resource supports the following arguments:</p><ul><li><code>domain_name</code> - (Optional) the suffix domain name to use by default when resolving non Fully Qualified Domain Names. In other words, this is what ends up being the <code>search</code> value in the <code>/etc/resolv.conf</code> file.</li><li><code>domain_name_servers</code> - (Optional) List of name servers to configure in <code>/etc/resolv.conf</code>. If you want to use the default AWS nameservers you should set this to <code>AmazonProvidedDNS</code>.</li><li><code>ntp_servers</code> - (Optional) List of NTP servers to configure.</li><li><code>netbios_name_servers</code> - (Optional) List of NETBIOS name servers.</li><li><code>netbios_node_type</code> - (Optional) The NetBIOS node type (1, 2, 4, or 8). AWS recommends to specify 2 since broadcast and multicast are not supported in their network. For more information about these node types, see <a href=\"http://www.ietf.org/rfc/rfc2132.txt\">RFC 2132</a>.</li><li><code>tags</code> - (Optional) A map of tags to assign to the resource. If configured with a provider <a href=\"https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block\"><code>default_tags</code> configuration block</a> present, tags with matching keys will overwrite those defined at the provider-level.</li></ul>", "remarks": "<h2 id=\"remarks\">Remarks</h2><ul><li>Notice that all arguments are optional but you have to specify at least one argument.</li><li><code>domain_name_servers</code>, <code>netbios_name_servers</code>, <code>ntp_servers</code> are limited by AWS to maximum four servers only.</li><li>To actually use the DHCP Options Set you need to associate it to a VPC using <a href=\"/docs/providers/aws/r/vpc_dhcp_options_association.html\"><code>aws_vpc_dhcp_options_association</code></a>.</li><li>If you delete a DHCP Options Set, all VPCs using it will be associated to AWS's <code>default</code> DHCP Option Set.</li><li>In most cases unless you're configuring your own DNS you'll want to set <code>domain_name_servers</code> to <code>AmazonProvidedDNS</code>.</li></ul>", "attribute-reference": "<h2 id=\"attribute-reference\">Attribute Reference</h2><p>This resource exports the following attributes in addition to the arguments above:</p><ul><li><code>id</code> - The ID of the DHCP Options Set.</li><li><code>arn</code> - The ARN of the DHCP Options Set.</li><li><code>owner_id</code> - The ID of the AWS account that owns the DHCP options set.</li><li><code>tags_all</code> - A map of tags assigned to the resource, including those inherited from the provider <a href=\"https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block\"><code>default_tags</code> configuration block</a>.</li></ul><p>You can find more technical documentation about DHCP Options Set in the<br />official <a href=\"https://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_DHCP_Options.html\">AWS User Guide</a>.</p>", "import": "<h2 id=\"import\">Import</h2><p>In Terraform v1.5.0 and later, use an <a href=\"https://developer.hashicorp.com/terraform/language/import\"><code>import</code> block</a> to import VPC DHCP Options using the DHCP Options <code>id</code>. For example:</p><p><code>terraformimport {  to = aws_vpc_dhcp_options.my_options  id = \"dopt-d9070ebb\"}</code></p><p>Using <code>terraform import</code>, import VPC DHCP Options using the DHCP Options <code>id</code>. For example:</p><p><code>console% terraform import aws_vpc_dhcp_options.my_options dopt-d9070ebb</code></p>", "description": "<h1 id=\"resource-aws_vpc_dhcp_options\">Resource: aws_vpc_dhcp_options</h1><p>Provides a VPC DHCP Options resource.</p>"}