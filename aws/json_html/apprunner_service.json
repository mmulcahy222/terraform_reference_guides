{"resource-aws-apprunner-service": "<h1 id=\"resource-aws_apprunner_service\">Resource: aws_apprunner_service</h1><p>Manages an App Runner Service.</p>", "example-usage": "<h2 id=\"example-usage\">Example Usage</h2><h3 id=\"service-with-a-code-repository-source\">Service with a Code Repository Source</h3><br /><p>terraform<br />resource \"aws_apprunner_service\" \"example\" {<br />  service_name = \"example\"</p><br /><p>source_configuration {<br />    authentication_configuration {<br />      connection_arn = aws_apprunner_connection.example.arn<br />    }<br />    code_repository {<br />      code_configuration {<br />        code_configuration_values {<br />          build_command = \"python setup.py develop\"<br />          port          = \"8000\"<br />          runtime       = \"PYTHON_3\"<br />          start_command = \"python runapp.py\"<br />        }<br />        configuration_source = \"API\"<br />      }<br />      repository_url = \"https://github.com/example/my-example-python-app\"<br />      source_code_version {<br />        type  = \"BRANCH\"<br />        value = \"main\"<br />      }<br />    }<br />  }</p><br /><p>network_configuration {<br />    egress_configuration {<br />      egress_type       = \"VPC\"<br />      vpc_connector_arn = aws_apprunner_vpc_connector.connector.arn<br />    }<br />  }</p><br /><p>tags = {<br />    Name = \"example-apprunner-service\"<br />  }<br />}</p><br /><h3 id=\"service-with-an-image-repository-source\">Service with an Image Repository Source</h3><br /><p>terraform<br />resource \"aws_apprunner_service\" \"example\" {<br />  service_name = \"example\"</p><br /><p>source_configuration {<br />    image_repository {<br />      image_configuration {<br />        port = \"8000\"<br />      }<br />      image_identifier      = \"public.ecr.aws/aws-containers/hello-app-runner:latest\"<br />      image_repository_type = \"ECR_PUBLIC\"<br />    }<br />    auto_deployments_enabled = false<br />  }</p><br /><p>tags = {<br />    Name = \"example-apprunner-service\"<br />  }<br />}</p><br /><h3 id=\"service-with-observability-configuration\">Service with Observability Configuration</h3><br /><p>terraform<br />resource \"aws_apprunner_service\" \"example\" {<br />  service_name = \"example\"</p><br /><p>observability_configuration {<br />    observability_configuration_arn = aws_apprunner_observability_configuration.example.arn<br />    observability_enabled           = true<br />  }</p><br /><p>source_configuration {<br />    image_repository {<br />      image_configuration {<br />        port = \"8000\"<br />      }<br />      image_identifier      = \"public.ecr.aws/aws-containers/hello-app-runner:latest\"<br />      image_repository_type = \"ECR_PUBLIC\"<br />    }<br />    auto_deployments_enabled = false<br />  }</p><br /><p>tags = {<br />    Name = \"example-apprunner-service\"<br />  }<br />}</p><br /><p>resource \"aws_apprunner_observability_configuration\" \"example\" {<br />  observability_configuration_name = \"example\"</p><br /><p>trace_configuration {<br />    vendor = \"AWSXRAY\"<br />  }<br />}</p><br />", "argument-reference": "<h2 id=\"argument-reference\">Argument Reference</h2><p>The following arguments are required:</p><ul><li><code>service_name</code> - (Forces new resource) Name of the service.</li><li><code>source_configuration</code> - The source to deploy to the App Runner service. Can be a code or an image repository. See <a href=\"#source-configuration\">Source Configuration</a> below for more details.</li></ul><p>The following arguments are optional:</p><ul><li><code>auto_scaling_configuration_arn</code> - ARN of an App Runner automatic scaling configuration resource that you want to associate with your service. If not provided, App Runner associates the latest revision of a default auto scaling configuration.</li><li><code>encryption_configuration</code> - (Forces new resource) An optional custom encryption key that App Runner uses to encrypt the copy of your source repository that it maintains and your service logs. By default, App Runner uses an AWS managed CMK. See <a href=\"#encryption-configuration\">Encryption Configuration</a> below for more details.</li><li><code>health_check_configuration</code> - (Forces new resource) Settings of the health check that AWS App Runner performs to monitor the health of your service. See <a href=\"#health-check-configuration\">Health Check Configuration</a> below for more details.</li><li><code>instance_configuration</code> - The runtime configuration of instances (scaling units) of the App Runner service. See <a href=\"#instance-configuration\">Instance Configuration</a> below for more details.</li><li><code>network_configuration</code> - Configuration settings related to network traffic of the web application that the App Runner service runs. See <a href=\"#network-configuration\">Network Configuration</a> below for more details.</li><li><code>observability_configuration</code> - The observability configuration of your service. See <a href=\"#observability-configuration\">Observability Configuration</a> below for more details.</li><li><code>tags</code> - Key-value map of resource tags. If configured with a provider <a href=\"https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block\"><code>default_tags</code> configuration block</a> present, tags with matching keys will overwrite those defined at the provider-level.</li></ul><h3 id=\"encryption-configuration\">Encryption Configuration</h3><p>The <code>encryption_configuration</code> block supports the following argument:</p><ul><li><code>kms_key</code> - (Required) ARN of the KMS key used for encryption.</li></ul><h3 id=\"health-check-configuration\">Health Check Configuration</h3><p>The <code>health_check_configuration</code> block supports the following arguments:</p><ul><li><code>healthy_threshold</code> - (Optional) Number of consecutive checks that must succeed before App Runner decides that the service is healthy. Defaults to 1. Minimum value of 1. Maximum value of 20.</li><li><code>interval</code> - (Optional) Time interval, in seconds, between health checks. Defaults to 5. Minimum value of 1. Maximum value of 20.</li><li><code>path</code> - (Optional) URL to send requests to for health checks. Defaults to <code>/</code>. Minimum length of 0. Maximum length of 51200.</li><li><code>protocol</code> - (Optional) IP protocol that App Runner uses to perform health checks for your service. Valid values: <code>TCP</code>, <code>HTTP</code>. Defaults to <code>TCP</code>. If you set protocol to <code>HTTP</code>, App Runner sends health check requests to the HTTP path specified by <code>path</code>.</li><li><code>timeout</code> - (Optional) Time, in seconds, to wait for a health check response before deciding it failed. Defaults to 2. Minimum value of  1. Maximum value of 20.</li><li><code>unhealthy_threshold</code> - (Optional) Number of consecutive checks that must fail before App Runner decides that the service is unhealthy. Defaults to 5. Minimum value of  1. Maximum value of 20.</li></ul><h3 id=\"instance-configuration\">Instance Configuration</h3><p>The <code>instance_configuration</code> block supports the following arguments:</p><ul><li><code>cpu</code> - (Optional) Number of CPU units reserved for each instance of your App Runner service represented as a String. Defaults to <code>1024</code>. Valid values: <code>256|512|1024|2048|4096|(0.25|0.5|1|2|4) vCPU</code>.</li><li><code>instance_role_arn</code> - (Optional) ARN of an IAM role that provides permissions to your App Runner service. These are permissions that your code needs when it calls any AWS APIs.</li><li><code>memory</code> - (Optional) Amount of memory, in MB or GB, reserved for each instance of your App Runner service. Defaults to <code>2048</code>. Valid values: <code>512|1024|2048|3072|4096|6144|8192|10240|12288|(0.5|1|2|3|4|6|8|10|12) GB</code>.</li></ul><h3 id=\"source-configuration\">Source Configuration</h3><p>The <code>source_configuration</code> block supports the following arguments:</p><p>~&gt;<strong>Note:</strong> Either <code>code_repository</code> or <code>image_repository</code> must be specified (but not both).</p><ul><li><code>authentication_configuration</code> - (Optional) Describes resources needed to authenticate access to some source repositories. See <a href=\"#authentication-configuration\">Authentication Configuration</a> below for more details.</li><li><code>auto_deployments_enabled</code> - (Optional) Whether continuous integration from the source repository is enabled for the App Runner service. If set to <code>true</code>, each repository change (source code commit or new image version) starts a deployment. Defaults to <code>true</code>.</li><li><code>code_repository</code> - (Optional) Description of a source code repository. See <a href=\"#code-repository\">Code Repository</a> below for more details.</li><li><code>image_repository</code> - (Optional) Description of a source image repository. See <a href=\"#image-repository\">Image Repository</a> below for more details.</li></ul><h3 id=\"authentication-configuration\">Authentication Configuration</h3><p>The <code>authentication_configuration</code> block supports the following arguments:</p><ul><li><code>access_role_arn</code> - (Optional) ARN of the IAM role that grants the App Runner service access to a source repository. Required for ECR image repositories (but not for ECR Public)</li><li><code>connection_arn</code> - (Optional) ARN of the App Runner connection that enables the App Runner service to connect to a source repository. Required for GitHub code repositories.</li></ul><h3 id=\"network-configuration\">Network Configuration</h3><p>The <code>network_configuration</code> block supports the following arguments:</p><ul><li><code>ingress_configuration</code> - (Optional) Network configuration settings for inbound network traffic. See <a href=\"#ingress-configuration\">Ingress Configuration</a> below for more details.</li><li><code>egress_configuration</code> - (Optional) Network configuration settings for outbound message traffic. See <a href=\"#egress-configuration\">Egress Configuration</a> below for more details.</li><li><code>egress_type</code> - (Optional) Type of egress configuration.Set to DEFAULT for access to resources hosted on public networks.Set to VPC to associate your service to a custom VPC specified by VpcConnectorArn.</li><li><code>vpc_connector_arn</code> - ARN of the App Runner VPC connector that you want to associate with your App Runner service. Only valid when EgressType = VPC.</li></ul><h3 id=\"ingress-configuration\">Ingress Configuration</h3><p>The <code>ingress_configuration</code> block supports the following argument:</p><ul><li><code>is_publicly_accessible</code> - (Required) Specifies whether your App Runner service is publicly accessible. To make the service publicly accessible set it to True. To make the service privately accessible, from only within an Amazon VPC set it to False.</li></ul><h3 id=\"egress-configuration\">Egress Configuration</h3><p>The <code>egress_configuration</code> block supports the following argument:</p><ul><li><code>egress_type</code> - The type of egress configuration. Valid values are: <code>DEFAULT</code> and <code>VPC</code>.</li><li><code>vpc_connector_arn</code> - The Amazon Resource Name (ARN) of the App Runner VPC connector that you want to associate with your App Runner service. Only valid when <code>EgressType = VPC</code>.</li></ul><h3 id=\"observability-configuration\">Observability Configuration</h3><p>The <code>observability_configuration</code> block supports the following arguments:</p><ul><li><code>observability_enabled</code> - (Required) When <code>true</code>, an observability configuration resource is associated with the service.</li><li><code>observability_configuration_arn</code> - (Optional) ARN of the observability configuration that is associated with the service. Specified only when <code>observability_enabled</code> is <code>true</code>.</li></ul><h3 id=\"code-repository\">Code Repository</h3><p>The <code>code_repository</code> block supports the following arguments:</p><ul><li><code>code_configuration</code> - (Optional) Configuration for building and running the service from a source code repository. See <a href=\"#code-configuration\">Code Configuration</a> below for more details.</li><li><code>repository_url</code> - (Required) Location of the repository that contains the source code.</li><li><code>source_code_version</code> - (Required) Version that should be used within the source code repository. See <a href=\"#source-code-version\">Source Code Version</a> below for more details.</li></ul><h3 id=\"image-repository\">Image Repository</h3><p>The <code>image_repository</code> block supports the following arguments:</p><ul><li><code>image_configuration</code> - (Optional) Configuration for running the identified image. See <a href=\"#image-configuration\">Image Configuration</a> below for more details.</li><li><code>image_identifier</code> - (Required) Identifier of an image. For an image in Amazon Elastic Container Registry (Amazon ECR), this is an image name. For the<br />  image name format, see Pulling an image in the Amazon ECR User Guide.</li><li><code>image_repository_type</code> - (Required) Type of the image repository. This reflects the repository provider and whether the repository is private or public. Valid values: <code>ECR</code> , <code>ECR_PUBLIC</code>.</li></ul><h3 id=\"code-configuration\">Code Configuration</h3><p>The <code>code_configuration</code> block supports the following arguments:</p><ul><li><code>code_configuration_values</code> - (Optional) Basic configuration for building and running the App Runner service. Use this parameter to quickly launch an App Runner service without providing an apprunner.yaml file in the source code repository (or ignoring the file if it exists). See <a href=\"#code-configuration-values\">Code Configuration Values</a> below for more details.</li><li><code>configuration_source</code> - (Required) Source of the App Runner configuration. Valid values: <code>REPOSITORY</code>, <code>API</code>. Values are interpreted as follows:<ul><li><code>REPOSITORY</code> - App Runner reads configuration values from the apprunner.yaml file in the<br />source code repository and ignores the CodeConfigurationValues parameter.</li><li><code>API</code> - App Runner uses configuration values provided in the CodeConfigurationValues<br />parameter and ignores the apprunner.yaml file in the source code repository.</li></ul></li></ul><h3 id=\"code-configuration-values\">Code Configuration Values</h3><p>The <code>code_configuration_values</code> blocks supports the following arguments:</p><ul><li><code>build_command</code> - (Optional) Command App Runner runs to build your application.</li><li><code>port</code> - (Optional) Port that your application listens to in the container. Defaults to <code>\"8080\"</code>.</li><li><code>runtime</code> - (Required) Runtime environment type for building and running an App Runner service. Represents a programming language runtime. Valid values: <code>PYTHON_3</code>, <code>NODEJS_12</code>, <code>NODEJS_14</code>, <code>NODEJS_16</code>, <code>CORRETTO_8</code>, <code>CORRETTO_11</code>, <code>GO_1</code>, <code>DOTNET_6</code>, <code>PHP_81</code>, <code>RUBY_31</code>.</li><li><code>runtime_environment_secrets</code> - (Optional) Secrets and parameters available to your service as environment variables. A map of key/value pairs, where the key is the desired name of the Secret in the environment (i.e. it does not have to match the name of the secret in Secrets Manager or SSM Parameter Store), and the value is the ARN of the secret from AWS Secrets Manager or the ARN of the parameter in AWS SSM Parameter Store.</li><li><code>runtime_environment_variables</code> - (Optional) Environment variables available to your running App Runner service. A map of key/value pairs. Keys with a prefix of <code>AWSAPPRUNNER</code> are reserved for system use and aren't valid.</li><li><code>start_command</code> - (Optional) Command App Runner runs to start your application.</li></ul><h3 id=\"image-configuration\">Image Configuration</h3><p>The <code>image_configuration</code> block supports the following arguments:</p><ul><li><code>port</code> - (Optional) Port that your application listens to in the container. Defaults to <code>\"8080\"</code>.</li><li><code>runtime_environment_secrets</code> - (Optional) Secrets and parameters available to your service as environment variables. A map of key/value pairs, where the key is the desired name of the Secret in the environment (i.e. it does not have to match the name of the secret in Secrets Manager or SSM Parameter Store), and the value is the ARN of the secret from AWS Secrets Manager or the ARN of the parameter in AWS SSM Parameter Store.</li><li><code>runtime_environment_variables</code> - (Optional) Environment variables available to your running App Runner service. A map of key/value pairs. Keys with a prefix of <code>AWSAPPRUNNER</code> are reserved for system use and aren't valid.</li><li><code>start_command</code> - (Optional) Command App Runner runs to start the application in the source image. If specified, this command overrides the Docker image\u2019s default start command.</li></ul><h3 id=\"source-code-version\">Source Code Version</h3><p>The <code>source_code_version</code> block supports the following arguments:</p><ul><li><code>type</code> - (Required) Type of version identifier. For a git-based repository, branches represent versions. Valid values: <code>BRANCH</code>.</li><li><code>value</code>- (Required) Source code version. For a git-based repository, a branch name maps to a specific version. App Runner uses the most recent commit to the branch.</li></ul>", "attribute-reference": "<h2 id=\"attribute-reference\">Attribute Reference</h2><p>This resource exports the following attributes in addition to the arguments above:</p><ul><li><code>arn</code> - ARN of the App Runner service.</li><li><code>service_id</code> - An alphanumeric ID that App Runner generated for this service. Unique within the AWS Region.</li><li><code>service_url</code> - Subdomain URL that App Runner generated for this service. You can use this URL to access your service web application.</li><li><code>status</code> - Current state of the App Runner service.</li><li><code>tags_all</code> - Map of tags assigned to the resource, including those inherited from the provider <a href=\"https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block\"><code>default_tags</code> configuration block</a>.</li></ul>", "import": "<h2 id=\"import\">Import</h2><p>In Terraform v1.5.0 and later, use an <a href=\"https://developer.hashicorp.com/terraform/language/import\"><code>import</code> block</a> to import App Runner Services using the <code>arn</code>. For example:</p><p>terraform<br />import {<br />  to = aws_apprunner_service.example<br />  id = \"arn:aws:apprunner:us-east-1:1234567890:service/example/0a03292a89764e5882c41d8f991c82fe\"<br />}</p><p>Using <code>terraform import</code>, import App Runner Services using the <code>arn</code>. For example:</p><p>console<br />% terraform import aws_apprunner_service.example arn:aws:apprunner:us-east-1:1234567890:service/example/0a03292a89764e5882c41d8f991c82fe</p>", "description": "<h1 id=\"resource-aws_apprunner_service\">Resource: aws_apprunner_service</h1><p>Manages an App Runner Service.</p>"}