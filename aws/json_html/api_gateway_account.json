{"resource-aws-api-gateway-account": "<h1 id=\"resource-aws_api_gateway_account\">Resource: aws_api_gateway_account</h1><p>Provides a settings of an API Gateway Account. Settings is applied region-wide per <code>provider</code> block.</p><p>-&gt; <strong>Note:</strong> As there is no API method for deleting account settings or resetting it to defaults, destroying this resource will keep your account settings intact</p>", "example-usage": "<h2 id=\"example-usage\">Example Usage</h2><p>terraform<br />resource \"aws_api_gateway_account\" \"demo\" {<br />  cloudwatch_role_arn = aws_iam_role.cloudwatch.arn<br />}</p><p>data \"aws_iam_policy_document\" \"assume_role\" {<br />  statement {<br />    effect = \"Allow\"</p><pre><code>principals {  type        = \"Service\"  identifiers = [\"apigateway.amazonaws.com\"]}actions = [\"sts:AssumeRole\"]</code></pre><p>}<br />}</p><p>resource \"aws_iam_role\" \"cloudwatch\" {<br />  name               = \"api_gateway_cloudwatch_global\"<br />  assume_role_policy = data.aws_iam_policy_document.assume_role.json<br />}</p><p>data \"aws_iam_policy_document\" \"cloudwatch\" {<br />  statement {<br />    effect = \"Allow\"</p><pre><code>actions = [  \"logs:CreateLogGroup\",  \"logs:CreateLogStream\",  \"logs:DescribeLogGroups\",  \"logs:DescribeLogStreams\",  \"logs:PutLogEvents\",  \"logs:GetLogEvents\",  \"logs:FilterLogEvents\",]resources = [\"*\"]</code></pre><p>}<br />}<br />resource \"aws_iam_role_policy\" \"cloudwatch\" {<br />  name   = \"default\"<br />  role   = aws_iam_role.cloudwatch.id<br />  policy = data.aws_iam_policy_document.cloudwatch.json<br />}<br /></p>", "argument-reference": "<h2 id=\"argument-reference\">Argument Reference</h2><p>This resource supports the following arguments:</p><ul><li><code>cloudwatch_role_arn</code> - (Optional) ARN of an IAM role for CloudWatch (to allow logging &amp; monitoring). See more <a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-stage-settings.html#how-to-stage-settings-console\">in AWS Docs</a>. Logging &amp; monitoring can be enabled/disabled and otherwise tuned on the API Gateway Stage level.</li></ul>", "attribute-reference": "<h2 id=\"attribute-reference\">Attribute Reference</h2><p>This resource exports the following attributes in addition to the arguments above:</p><ul><li><code>api_key_version</code> - The version of the API keys used for the account.</li><li><code>throttle_settings</code> - Account-Level throttle settings. See exported fields below.</li><li><code>features</code> - A list of features supported for the account.</li></ul><p><code>throttle_settings</code> block exports the following:</p><ul><li><code>burst_limit</code> - Absolute maximum number of times API Gateway allows the API to be called per second (RPS).</li><li><code>rate_limit</code> - Number of times API Gateway allows the API to be called per second on average (RPS).</li></ul>", "import": "<h2 id=\"import\">Import</h2><p>In Terraform v1.5.0 and later, use an <a href=\"https://developer.hashicorp.com/terraform/language/import\"><code>import</code> block</a> to import API Gateway Accounts using the word <code>api-gateway-account</code>. For example:</p><p><code>terraformimport {  to = aws_api_gateway_account.demo  id = \"api-gateway-account\"}</code></p><p>Using <code>terraform import</code>, import API Gateway Accounts using the word <code>api-gateway-account</code>. For example:</p><p><code>console% terraform import aws_api_gateway_account.demo api-gateway-account</code></p>", "description": "<h1 id=\"resource-aws_api_gateway_account\">Resource: aws_api_gateway_account</h1><p>Provides a settings of an API Gateway Account. Settings is applied region-wide per <code>provider</code> block.</p><p>-&gt; <strong>Note:</strong> As there is no API method for deleting account settings or resetting it to defaults, destroying this resource will keep your account settings intact</p>"}