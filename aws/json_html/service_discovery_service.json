{"resource-aws-service-discovery-service": "<h1 id=\"resource-aws_service_discovery_service\">Resource: aws_service_discovery_service</h1><p>Provides a Service Discovery Service resource.</p>", "example-usage": "<h2 id=\"example-usage\">Example Usage</h2><p>terraform<br />resource \"aws_vpc\" \"example\" {<br />  cidr_block           = \"10.0.0.0/16\"<br />  enable_dns_support   = true<br />  enable_dns_hostnames = true<br />}</p><p>resource \"aws_service_discovery_private_dns_namespace\" \"example\" {<br />  name        = \"example.terraform.local\"<br />  description = \"example\"<br />  vpc         = aws_vpc.example.id<br />}</p><p>resource \"aws_service_discovery_service\" \"example\" {<br />  name = \"example\"</p><p>dns_config {<br />    namespace_id = aws_service_discovery_private_dns_namespace.example.id</p><pre><code>dns_records {  ttl  = 10  type = \"A\"}routing_policy = \"MULTIVALUE\"</code></pre><p>}</p><p>health_check_custom_config {<br />    failure_threshold = 1<br />  }<br />}<br /></p><p>terraform<br />resource \"aws_service_discovery_public_dns_namespace\" \"example\" {<br />  name        = \"example.terraform.com\"<br />  description = \"example\"<br />}</p><p>resource \"aws_service_discovery_service\" \"example\" {<br />  name = \"example\"</p><p>dns_config {<br />    namespace_id = aws_service_discovery_public_dns_namespace.example.id</p><pre><code>dns_records {  ttl  = 10  type = \"A\"}</code></pre><p>}</p><p>health_check_config {<br />    failure_threshold = 10<br />    resource_path     = \"path\"<br />    type              = \"HTTP\"<br />  }<br />}<br /></p>", "argument-reference": "<h2 id=\"argument-reference\">Argument Reference</h2><p>This resource supports the following arguments:</p><ul><li><code>name</code> - (Required, ForceNew) The name of the service.</li><li><code>description</code> - (Optional) The description of the service.</li><li><code>dns_config</code> - (Optional) A complex type that contains information about the resource record sets that you want Amazon Route 53 to create when you register an instance.</li><li><code>health_check_config</code> - (Optional) A complex type that contains settings for an optional health check. Only for Public DNS namespaces.</li><li><code>force_destroy</code> - (Optional, Default:false ) A boolean that indicates all instances should be deleted from the service so that the service can be destroyed without error. These instances are not recoverable.</li><li><code>health_check_custom_config</code> - (Optional, ForceNew) A complex type that contains settings for ECS managed health checks.</li><li><code>namespace_id</code> - (Optional) The ID of the namespace that you want to use to create the service.</li><li><code>type</code> - (Optional) If present, specifies that the service instances are only discoverable using the <code>DiscoverInstances</code> API operation. No DNS records is registered for the service instances. The only valid value is <code>HTTP</code>.</li><li><code>tags</code> - (Optional) A map of tags to assign to the service. If configured with a provider <a href=\"https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block\"><code>default_tags</code> configuration block</a> present, tags with matching keys will overwrite those defined at the provider-level.</li></ul><h3 id=\"dns_config\">dns_config</h3><p>This argument supports the following arguments:</p><ul><li><code>namespace_id</code> - (Required, ForceNew) The ID of the namespace to use for DNS configuration.</li><li><code>dns_records</code> - (Required) An array that contains one DnsRecord object for each resource record set.</li><li><code>routing_policy</code> - (Optional) The routing policy that you want to apply to all records that Route 53 creates when you register an instance and specify the service. Valid Values: MULTIVALUE, WEIGHTED</li></ul><h4 id=\"dns_records\">dns_records</h4><p>This argument supports the following arguments:</p><ul><li><code>ttl</code> - (Required) The amount of time, in seconds, that you want DNS resolvers to cache the settings for this resource record set.</li><li><code>type</code> - (Required, ForceNew) The type of the resource, which indicates the value that Amazon Route 53 returns in response to DNS queries. Valid Values: A, AAAA, SRV, CNAME</li></ul><h3 id=\"health_check_config\">health_check_config</h3><p>This argument supports the following arguments:</p><ul><li><code>failure_threshold</code> - (Optional) The number of consecutive health checks. Maximum value of 10.</li><li><code>resource_path</code> - (Optional) The path that you want Route 53 to request when performing health checks. Route 53 automatically adds the DNS name for the service. If you don't specify a value, the default value is /.</li><li><code>type</code> - (Optional, ForceNew) The type of health check that you want to create, which indicates how Route 53 determines whether an endpoint is healthy. Valid Values: HTTP, HTTPS, TCP</li></ul><h3 id=\"health_check_custom_config\">health_check_custom_config</h3><p>This argument supports the following arguments:</p><ul><li><code>failure_threshold</code> - (Optional, ForceNew) The number of 30-second intervals that you want service discovery to wait before it changes the health status of a service instance.  Maximum value of 10.</li></ul>", "attribute-reference": "<h2 id=\"attribute-reference\">Attribute Reference</h2><p>This resource exports the following attributes in addition to the arguments above:</p><ul><li><code>id</code> - The ID of the service.</li><li><code>arn</code> - The ARN of the service.</li><li><code>tags_all</code> - A map of tags assigned to the resource, including those inherited from the provider <a href=\"https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block\"><code>default_tags</code> configuration block</a>.</li></ul>", "import": "<h2 id=\"import\">Import</h2><p>In Terraform v1.5.0 and later, use an <a href=\"https://developer.hashicorp.com/terraform/language/import\"><code>import</code> block</a> to import Service Discovery Service using the service ID. For example:</p><p><code>terraformimport {  to = aws_service_discovery_service.example  id = \"0123456789\"}</code></p><p>Using <code>terraform import</code>, import Service Discovery Service using the service ID. For example:</p><p><code>console% terraform import aws_service_discovery_service.example 0123456789</code></p>", "description": "<h1 id=\"resource-aws_service_discovery_service\">Resource: aws_service_discovery_service</h1><p>Provides a Service Discovery Service resource.</p>"}