{"resource-aws-cloudwatch-composite-alarm": "<h1 id=\"resource-aws_cloudwatch_composite_alarm\">Resource: aws_cloudwatch_composite_alarm</h1><p>Provides a CloudWatch Composite Alarm resource.</p><p>~&gt; <strong>NOTE:</strong> An alarm (composite or metric) cannot be destroyed when there are other composite alarms depending on it. This can lead to a cyclical dependency on update, as Terraform will unsuccessfully attempt to destroy alarms before updating the rule. Consider using <code>depends_on</code>, references to alarm names, and two-stage updates.</p>", "example-usage": "<h2 id=\"example-usage\">Example Usage</h2><p>terraform<br />resource \"aws_cloudwatch_composite_alarm\" \"example\" {<br />  alarm_description = \"This is a composite alarm!\"<br />  alarm_name        = \"example-composite-alarm\"</p><br /><p>alarm_actions = aws_sns_topic.example.arn<br />  ok_actions    = aws_sns_topic.example.arn</p><br /><p>alarm_rule = &lt;&lt;EOF<br />ALARM(${aws_cloudwatch_metric_alarm.alpha.alarm_name}) OR<br />ALARM(${aws_cloudwatch_metric_alarm.bravo.alarm_name})<br />EOF</p><br /><p>actions_suppressor {<br />    alarm            = \"suppressor-alarm\"<br />    extension_period = 10<br />    wait_period      = 20<br />  }<br />}</p><br />", "argument-reference": "<h2 id=\"argument-reference\">Argument Reference</h2><ul><li><code>actions_enabled</code> - (Optional, Forces new resource) Indicates whether actions should be executed during any changes to the alarm state of the composite alarm. Defaults to <code>true</code>.</li><li><code>actions_suppressor</code> - (Optional) Actions will be suppressed if the suppressor alarm is in the ALARM state.<ul><li><code>alarm</code> - (Required) Can be an AlarmName or an Amazon Resource Name (ARN) from an existing alarm.</li><li><code>extension_period</code> - (Required) The maximum time in seconds that the composite alarm waits after suppressor alarm goes out of the <code>ALARM</code> state. After this time, the composite alarm performs its actions.</li><li><code>wait_period</code> - (Required) The maximum time in seconds that the composite alarm waits for the suppressor alarm to go into the <code>ALARM</code> state. After this time, the composite alarm performs its actions.</li></ul></li><li><code>alarm_actions</code> - (Optional) The set of actions to execute when this alarm transitions to the <code>ALARM</code> state from any other state. Each action is specified as an ARN. Up to 5 actions are allowed.</li><li><code>alarm_description</code> - (Optional) The description for the composite alarm.</li><li><code>alarm_name</code> - (Required) The name for the composite alarm. This name must be unique within the region.</li><li><code>alarm_rule</code> - (Required) An expression that specifies which other alarms are to be evaluated to determine this composite alarm's state. For syntax, see <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/Create_Composite_Alarm.html\">Creating a Composite Alarm</a>. The maximum length is 10240 characters.</li><li><code>insufficient_data_actions</code> - (Optional) The set of actions to execute when this alarm transitions to the <code>INSUFFICIENT_DATA</code> state from any other state. Each action is specified as an ARN. Up to 5 actions are allowed.</li><li><code>ok_actions</code> - (Optional) The set of actions to execute when this alarm transitions to an <code>OK</code> state from any other state. Each action is specified as an ARN. Up to 5 actions are allowed.</li><li><code>tags</code> - (Optional) A map of tags to associate with the alarm. Up to 50 tags are allowed. If configured with a provider <a href=\"https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block\"><code>default_tags</code> configuration block</a> present, tags with matching keys will overwrite those defined at the provider-level.</li></ul>", "attribute-reference": "<h2 id=\"attribute-reference\">Attribute Reference</h2><p>This resource exports the following attributes in addition to the arguments above:</p><ul><li><code>arn</code> - The ARN of the composite alarm.</li><li><code>id</code> - The ID of the composite alarm resource, which is equivalent to its <code>alarm_name</code>.</li><li><code>tags_all</code> - A map of tags assigned to the resource, including those inherited from the provider <a href=\"https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block\"><code>default_tags</code> configuration block</a>.</li></ul>", "import": "<h2 id=\"import\">Import</h2><p>In Terraform v1.5.0 and later, use an <a href=\"https://developer.hashicorp.com/terraform/language/import\"><code>import</code> block</a> to import a CloudWatch Composite Alarm using the <code>alarm_name</code>. For example:</p><p>terraform<br />import {<br />  to = aws_cloudwatch_composite_alarm.test<br />  id = \"my-alarm\"<br />}</p><p>Using <code>terraform import</code>, import a CloudWatch Composite Alarm using the <code>alarm_name</code>. For example:</p><p>console<br />% terraform import aws_cloudwatch_composite_alarm.test my-alarm</p>", "description": "<h1 id=\"resource-aws_cloudwatch_composite_alarm\">Resource: aws_cloudwatch_composite_alarm</h1><p>Provides a CloudWatch Composite Alarm resource.</p><p>~&gt; <strong>NOTE:</strong> An alarm (composite or metric) cannot be destroyed when there are other composite alarms depending on it. This can lead to a cyclical dependency on update, as Terraform will unsuccessfully attempt to destroy alarms before updating the rule. Consider using <code>depends_on</code>, references to alarm names, and two-stage updates.</p>"}