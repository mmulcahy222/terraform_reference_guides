{"resource-aws-opensearchserverless-security-policy": "<h1 id=\"resource-aws_opensearchserverless_security_policy\">Resource: aws_opensearchserverless_security_policy</h1><p>Terraform resource for managing an AWS OpenSearch Serverless Security Policy. See AWS documentation for <a href=\"https://docs.aws.amazon.com/opensearch-service/latest/developerguide/serverless-encryption.html#serverless-encryption-policies\">encryption policies</a> and <a href=\"https://docs.aws.amazon.com/opensearch-service/latest/developerguide/serverless-network.html#serverless-network-policies\">network policies</a>.</p>", "example-usage": "<h2 id=\"example-usage\">Example Usage</h2><h3 id=\"encryption-security-policy\">Encryption Security Policy</h3><h4 id=\"applies-to-a-single-collection\">Applies to a single collection</h4><p><code>terraformresource \"aws_opensearchserverless_security_policy\" \"example\" {  name        = \"example\"  type        = \"encryption\"  description = \"encryption security policy for example-collection\"  policy = jsonencode({    Rules = [      {        Resource = [          \"collection/example-collection\"        ],        ResourceType = \"collection\"      }    ],    AWSOwnedKey = true  })}</code></p><h4 id=\"applies-to-multiple-collections\">Applies to multiple collections</h4><p><code>terraformresource \"aws_opensearchserverless_security_policy\" \"example\" {  name        = \"example\"  type        = \"encryption\"  description = \"encryption security policy for collections that begin with \\\"example\\\"\"  policy = jsonencode({    Rules = [      {        Resource = [          \"collection/example*\"        ],        ResourceType = \"collection\"      }    ],    AWSOwnedKey = true  })}</code></p><h4 id=\"using-a-customer-managed-key\">Using a customer managed key</h4><p><code>terraformresource \"aws_opensearchserverless_security_policy\" \"example\" {  name        = \"example\"  type        = \"encryption\"  description = \"encryption security policy using customer KMS key\"  policy = jsonencode({    Rules = [      {        Resource = [          \"collection/customer-managed-key-collection\"        ],        ResourceType = \"collection\"      }    ],    AWSOwnedKey = false    KmsARN      = \"arn:aws:kms:us-east-1:123456789012:key/93fd6da4-a317-4c17-bfe9-382b5d988b36\"  })}</code></p><h3 id=\"network-security-policy\">Network Security Policy</h3><h4 id=\"allow-public-access-to-the-collection-endpoint-and-the-dashboards-endpoint\">Allow public access to the collection endpoint and the Dashboards endpoint</h4><p><code>terraformresource \"aws_opensearchserverless_security_policy\" \"example\" {  name        = \"example\"  type        = \"network\"  description = \"Public access\"  policy = jsonencode([    {      Description = \"Public access to collection and Dashboards endpoint for example collection\",      Rules = [        {          ResourceType = \"collection\",          Resource = [            \"collection/example-collection\"          ]        },        {          ResourceType = \"dashboard\"          Resource = [            \"collection/example-collection\"          ]        }      ],      AllowFromPublic = true    }  ])}</code></p><h4 id=\"allow-vpc-access-to-the-collection-endpoint-and-the-dashboards-endpoint\">Allow VPC access to the collection endpoint and the Dashboards endpoint</h4><p><code>terraformresource \"aws_opensearchserverless_security_policy\" \"example\" {  name        = \"example\"  type        = \"network\"  description = \"VPC access\"  policy = jsonencode([    {      Description = \"VPC access to collection and Dashboards endpoint for example collection\",      Rules = [        {          ResourceType = \"collection\",          Resource = [            \"collection/example-collection\"          ]        },        {          ResourceType = \"dashboard\"          Resource = [            \"collection/example-collection\"          ]        }      ],      AllowFromPublic = false,      SourceVPCEs = [        \"vpce-050f79086ee71ac05\"      ]    }  ])}</code></p><h4 id=\"mixed-access-for-different-collections\">Mixed access for different collections</h4><p><code>terraformresource \"aws_opensearchserverless_security_policy\" \"example\" {  name        = \"example\"  type        = \"network\"  description = \"Mixed access for marketing and sales\"  policy = jsonencode([    {      \"Description\" : \"Marketing access\",      \"Rules\" : [        {          \"ResourceType\" : \"collection\",          \"Resource\" : [            \"collection/marketing*\"          ]        },        {          \"ResourceType\" : \"dashboard\",          \"Resource\" : [            \"collection/marketing*\"          ]        }      ],      \"AllowFromPublic\" : false,      \"SourceVPCEs\" : [        \"vpce-050f79086ee71ac05\"      ]    },    {      \"Description\" : \"Sales access\",      \"Rules\" : [        {          \"ResourceType\" : \"collection\",          \"Resource\" : [            \"collection/finance\"          ]        }      ],      \"AllowFromPublic\" : true    }  ])}</code></p>", "argument-reference": "<h2 id=\"argument-reference\">Argument Reference</h2><p>The following arguments are required:</p><ul><li><code>name</code> - (Required) Name of the policy.</li><li><code>policy</code> - (Required) JSON policy document to use as the content for the new policy</li><li><code>type</code> - (Required) Type of security policy. One of <code>encryption</code> or <code>network</code>.</li></ul><p>The following arguments are optional:</p><ul><li><code>description</code> - (Optional) Description of the policy. Typically used to store information about the permissions defined in the policy.</li></ul>", "attribute-reference": "<h2 id=\"attribute-reference\">Attribute Reference</h2><p>This resource exports the following attributes in addition to the arguments above:</p><ul><li><code>policy_version</code> - Version of the policy.</li></ul>", "import": "<h2 id=\"import\">Import</h2><p>In Terraform v1.5.0 and later, use an <a href=\"https://developer.hashicorp.com/terraform/language/import\"><code>import</code> block</a> to import OpenSearchServerless Security Policy using the <code>name</code> and <code>type</code> arguments separated by a slash (<code>/</code>). For example:</p><p><code>terraformimport {  to = aws_opensearchserverless_security_policy.example  id = \"example/encryption\"}</code></p><p>Using <code>terraform import</code>, import OpenSearchServerless Security Policy using the <code>name</code> and <code>type</code> arguments separated by a slash (<code>/</code>). For example:</p><p><code>console% terraform import aws_opensearchserverless_security_policy.example example/encryption</code></p>", "description": "<h1 id=\"resource-aws_opensearchserverless_security_policy\">Resource: aws_opensearchserverless_security_policy</h1><p>Terraform resource for managing an AWS OpenSearch Serverless Security Policy. See AWS documentation for <a href=\"https://docs.aws.amazon.com/opensearch-service/latest/developerguide/serverless-encryption.html#serverless-encryption-policies\">encryption policies</a> and <a href=\"https://docs.aws.amazon.com/opensearch-service/latest/developerguide/serverless-network.html#serverless-network-policies\">network policies</a>.</p>"}