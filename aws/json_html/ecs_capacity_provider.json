{"resource-aws-ecs-capacity-provider": "<h1 id=\"resource-aws_ecs_capacity_provider\">Resource: aws_ecs_capacity_provider</h1><p>Provides an ECS cluster capacity provider. More information can be found on the <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/cluster-capacity-providers.html\">ECS Developer Guide</a>.</p><p>~&gt; <strong>NOTE:</strong> Associating an ECS Capacity Provider to an Auto Scaling Group will automatically add the <code>AmazonECSManaged</code> tag to the Auto Scaling Group. This tag should be included in the <code>aws_autoscaling_group</code> resource configuration to prevent Terraform from removing it in subsequent executions as well as ensuring the <code>AmazonECSManaged</code> tag is propagated to all EC2 Instances in the Auto Scaling Group if <code>min_size</code> is above 0 on creation. Any EC2 Instances in the Auto Scaling Group without this tag must be manually be updated, otherwise they may cause unexpected scaling behavior and metrics.</p>", "example-usage": "<h2 id=\"example-usage\">Example Usage</h2><p>terraform<br />resource \"aws_autoscaling_group\" \"test\" {<br />  # ... other configuration, including potentially other tags ...</p><br /><p>tag {<br />    key                 = \"AmazonECSManaged\"<br />    value               = true<br />    propagate_at_launch = true<br />  }<br />}</p><br /><p>resource \"aws_ecs_capacity_provider\" \"test\" {<br />  name = \"test\"</p><br /><p>auto_scaling_group_provider {<br />    auto_scaling_group_arn         = aws_autoscaling_group.test.arn<br />    managed_termination_protection = \"ENABLED\"</p><br /><pre><code>managed_scaling {<br />  maximum_scaling_step_size = 1000<br />  minimum_scaling_step_size = 1<br />  status                    = \"ENABLED\"<br />  target_capacity           = 10<br />}<br /></code></pre><br /><p>}<br />}</p><br />", "argument-reference": "<h2 id=\"argument-reference\">Argument Reference</h2><p>This resource supports the following arguments:</p><ul><li><code>auto_scaling_group_provider</code> - (Required) Configuration block for the provider for the ECS auto scaling group. Detailed below.</li><li><code>name</code> - (Required) Name of the capacity provider.</li><li><code>tags</code> - (Optional) Key-value map of resource tags. If configured with a provider <a href=\"https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block\"><code>default_tags</code> configuration block</a> present, tags with matching keys will overwrite those defined at the provider-level.</li></ul><h3 id=\"auto_scaling_group_provider\"><code>auto_scaling_group_provider</code></h3><ul><li><code>auto_scaling_group_arn</code> - (Required) - ARN of the associated auto scaling group.</li><li><code>managed_scaling</code> - (Optional) - Configuration block defining the parameters of the auto scaling. Detailed below.</li><li><code>managed_termination_protection</code> - (Optional) - Enables or disables container-aware termination of instances in the auto scaling group when scale-in happens. Valid values are <code>ENABLED</code> and <code>DISABLED</code>.</li></ul><h3 id=\"managed_scaling\"><code>managed_scaling</code></h3><ul><li><code>instance_warmup_period</code> - (Optional) Period of time, in seconds, after a newly launched Amazon EC2 instance can contribute to CloudWatch metrics for Auto Scaling group. If this parameter is omitted, the default value of 300 seconds is used.</li><li><code>maximum_scaling_step_size</code> - (Optional) Maximum step adjustment size. A number between 1 and 10,000.</li><li><code>minimum_scaling_step_size</code> - (Optional) Minimum step adjustment size. A number between 1 and 10,000.</li><li><code>status</code> - (Optional) Whether auto scaling is managed by ECS. Valid values are <code>ENABLED</code> and <code>DISABLED</code>.</li><li><code>target_capacity</code> - (Optional) Target utilization for the capacity provider. A number between 1 and 100.</li></ul>", "attribute-reference": "<h2 id=\"attribute-reference\">Attribute Reference</h2><p>This resource exports the following attributes in addition to the arguments above:</p><ul><li><code>arn</code> - ARN that identifies the capacity provider.</li><li><code>id</code> - ARN that identifies the capacity provider.</li><li><code>tags_all</code> - Map of tags assigned to the resource, including those inherited from the provider <a href=\"https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block\"><code>default_tags</code> configuration block</a>.</li></ul>", "import": "<h2 id=\"import\">Import</h2><p>In Terraform v1.5.0 and later, use an <a href=\"https://developer.hashicorp.com/terraform/language/import\"><code>import</code> block</a> to import ECS Capacity Providers using the <code>name</code>. For example:</p><p>terraform<br />import {<br />  to = aws_ecs_capacity_provider.example<br />  id = \"example\"<br />}</p><p>Using <code>terraform import</code>, import ECS Capacity Providers using the <code>name</code>. For example:</p><p>console<br />% terraform import aws_ecs_capacity_provider.example example</p>", "description": "<h1 id=\"resource-aws_ecs_capacity_provider\">Resource: aws_ecs_capacity_provider</h1><p>Provides an ECS cluster capacity provider. More information can be found on the <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/cluster-capacity-providers.html\">ECS Developer Guide</a>.</p><p>~&gt; <strong>NOTE:</strong> Associating an ECS Capacity Provider to an Auto Scaling Group will automatically add the <code>AmazonECSManaged</code> tag to the Auto Scaling Group. This tag should be included in the <code>aws_autoscaling_group</code> resource configuration to prevent Terraform from removing it in subsequent executions as well as ensuring the <code>AmazonECSManaged</code> tag is propagated to all EC2 Instances in the Auto Scaling Group if <code>min_size</code> is above 0 on creation. Any EC2 Instances in the Auto Scaling Group without this tag must be manually be updated, otherwise they may cause unexpected scaling behavior and metrics.</p>"}