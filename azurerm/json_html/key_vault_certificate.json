{"azurerm-key-vault-certificate": "<h1 id=\"azurerm_key_vault_certificate\">azurerm_key_vault_certificate</h1><p>Manages a Key Vault Certificate.</p><p>~&gt; <strong>Note:</strong> The Azure Provider includes a Feature Toggle which will purge a Key Vault Certificate resource on destroy, rather than the default soft-delete. See <a href=\"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/guides/features-block#purge_soft_deleted_certificates_on_destroy\"><code>purge_soft_deleted_certificates_on_destroy</code></a> for more information. </p>", "example-usage-importing-a-pfx": "<h2 id=\"example-usage-importing-a-pfx\">Example Usage (Importing a PFX)</h2><p>~&gt; <strong>Note:</strong> this example assumed the PFX file is located in the same directory at <code>certificate-to-import.pfx</code>.</p><p>provider \"azurerm\" {<br />  features {<br />    key_vault {<br />      purge_soft_deleted_certificates_on_destroy = true<br />      recover_soft_deleted_certificates          = true<br />    }<br />  }<br />}</p><p>data \"azurerm_client_config\" \"current\" {}</p><p>resource \"azurerm_resource_group\" \"example\" {<br />  name     = \"example-resources\"<br />  location = \"West Europe\"<br />}</p><p>resource \"azurerm_key_vault\" \"example\" {<br />  name                = \"examplekeyvault\"<br />  location            = azurerm_resource_group.example.location<br />  resource_group_name = azurerm_resource_group.example.name<br />  tenant_id           = data.azurerm_client_config.current.tenant_id<br />  sku_name            = \"premium\"</p><p>access_policy {<br />    tenant_id = data.azurerm_client_config.current.tenant_id<br />    object_id = data.azurerm_client_config.current.object_id</p><pre><code>certificate_permissions = [  \"Create\",  \"Delete\",  \"DeleteIssuers\",  \"Get\",  \"GetIssuers\",  \"Import\",  \"List\",  \"ListIssuers\",  \"ManageContacts\",  \"ManageIssuers\",  \"SetIssuers\",  \"Update\",]key_permissions = [  \"Backup\",  \"Create\",  \"Decrypt\",  \"Delete\",  \"Encrypt\",  \"Get\",  \"Import\",  \"List\",  \"Purge\",  \"Recover\",  \"Restore\",  \"Sign\",  \"UnwrapKey\",  \"Update\",  \"Verify\",  \"WrapKey\",]secret_permissions = [  \"Backup\",  \"Delete\",  \"Get\",  \"List\",  \"Purge\",  \"Recover\",  \"Restore\",  \"Set\",]</code></pre><p>}<br />}</p><p>resource \"azurerm_key_vault_certificate\" \"example\" {<br />  name         = \"imported-cert\"<br />  key_vault_id = azurerm_key_vault.example.id</p><p>certificate {<br />    contents = filebase64(\"certificate-to-import.pfx\")<br />    password = \"\"<br />  }<br />}</p>", "example-usage-generating-a-new-certificate": "<h2 id=\"example-usage-generating-a-new-certificate\">Example Usage (Generating a new certificate)</h2><p>data \"azurerm_client_config\" \"current\" {}</p><p>resource \"azurerm_resource_group\" \"example\" {<br />  name     = \"example-resources\"<br />  location = \"West Europe\"<br />}</p><p>resource \"azurerm_key_vault\" \"example\" {<br />  name                       = \"examplekeyvault\"<br />  location                   = azurerm_resource_group.example.location<br />  resource_group_name        = azurerm_resource_group.example.name<br />  tenant_id                  = data.azurerm_client_config.current.tenant_id<br />  sku_name                   = \"standard\"<br />  soft_delete_retention_days = 7</p><p>access_policy {<br />    tenant_id = data.azurerm_client_config.current.tenant_id<br />    object_id = data.azurerm_client_config.current.object_id</p><pre><code>certificate_permissions = [  \"Create\",  \"Delete\",  \"DeleteIssuers\",  \"Get\",  \"GetIssuers\",  \"Import\",  \"List\",  \"ListIssuers\",  \"ManageContacts\",  \"ManageIssuers\",  \"Purge\",  \"SetIssuers\",  \"Update\",]key_permissions = [  \"Backup\",  \"Create\",  \"Decrypt\",  \"Delete\",  \"Encrypt\",  \"Get\",  \"Import\",  \"List\",  \"Purge\",  \"Recover\",  \"Restore\",  \"Sign\",  \"UnwrapKey\",  \"Update\",  \"Verify\",  \"WrapKey\",]secret_permissions = [  \"Backup\",  \"Delete\",  \"Get\",  \"List\",  \"Purge\",  \"Recover\",  \"Restore\",  \"Set\",]</code></pre><p>}<br />}</p><p>resource \"azurerm_key_vault_certificate\" \"example\" {<br />  name         = \"generated-cert\"<br />  key_vault_id = azurerm_key_vault.example.id</p><p>certificate_policy {<br />    issuer_parameters {<br />      name = \"Self\"<br />    }</p><pre><code>key_properties {  exportable = true  key_size   = 2048  key_type   = \"RSA\"  reuse_key  = true}lifetime_action {  action {    action_type = \"AutoRenew\"  }  trigger {    days_before_expiry = 30  }}secret_properties {  content_type = \"application/x-pkcs12\"}x509_certificate_properties {  # Server Authentication = 1.3.6.1.5.5.7.3.1  # Client Authentication = 1.3.6.1.5.5.7.3.2  extended_key_usage = [\"1.3.6.1.5.5.7.3.1\"]  key_usage = [    \"cRLSign\",    \"dataEncipherment\",    \"digitalSignature\",    \"keyAgreement\",    \"keyCertSign\",    \"keyEncipherment\",  ]  subject_alternative_names {    dns_names = [\"internal.contoso.com\", \"domain.hello.world\"]  }  subject            = \"CN=hello-world\"  validity_in_months = 12}</code></pre><p>}<br />}</p>", "argument-reference": "<h2 id=\"argument-reference\">Argument Reference</h2><p>The following arguments are supported:</p><ul><li><p><code>name</code> - (Required) Specifies the name of the Key Vault Certificate. Changing this forces a new resource to be created.</p></li><li><p><code>key_vault_id</code> - (Required) The ID of the Key Vault where the Certificate should be created. Changing this forces a new resource to be created.</p></li><li><p><code>certificate</code> - (Optional) A <code>certificate</code> block as defined below, used to Import an existing certificate. Changing this will create a new version of the Key Vault Certificate.</p></li><li><p><code>certificate_policy</code> - (Optional) A <code>certificate_policy</code> block as defined below. Changing this will create a new version of the Key Vault Certificate.</p></li></ul><p>~&gt; <strong>NOTE:</strong> When creating a Key Vault Certificate, at least one of <code>certificate</code> or <code>certificate_policy</code> is required. Provide <code>certificate</code> to import an existing certificate, <code>certificate_policy</code> to generate a new certificate.</p><ul><li><code>tags</code> - (Optional) A mapping of tags to assign to the resource.</li></ul><hr /><p>The <code>certificate</code> block supports the following:</p><ul><li><code>contents</code> - (Required) The base64-encoded certificate contents.</li><li><code>password</code> - (Optional) The password associated with the certificate.</li></ul><p>~&gt; <strong>NOTE:</strong> A PEM certificate is already base64 encoded. To successfully import, the <code>contents</code> property should include a PEM encoded X509 certificate and a private_key in pkcs8 format. There should only be linux style <code>\\n</code> line endings and the whole block should have the PEM begin/end blocks around the certificate data and the private key data.</p><p>To convert a private key to pkcs8 format with openssl use:<br />shell<br />openssl pkcs8 -topk8 -nocrypt -in private_key.pem &gt; private_key_pk8.pem</p><p>The PEM content should look something like:<br />text<br />-----BEGIN CERTIFICATE-----<br />aGVsbG8KaGVsbG8KaGVsbG8KaGVsbG8KaGVsbG8KaGVsbG8KaGVsbG8KaGVsbG8K<br />:<br />aGVsbG8KaGVsbG8KaGVsbG8KaGVsbG8KaGVsbG8KaGVsbG8KaGVsbG8KaGVsbG8K<br />-----END CERTIFICATE-----<br />-----BEGIN PRIVATE KEY-----<br />d29ybGQKd29ybGQKd29ybGQKd29ybGQKd29ybGQKd29ybGQKd29ybGQKd29ybGQK<br />:<br />d29ybGQKd29ybGQKd29ybGQKd29ybGQKd29ybGQKd29ybGQKd29ybGQKd29ybGQK<br />-----END PRIVATE KEY-----</p><hr /><p>The <code>certificate_policy</code> block supports the following:</p><ul><li><code>issuer_parameters</code> - (Required) A <code>issuer_parameters</code> block as defined below.</li><li><code>key_properties</code> - (Required) A <code>key_properties</code> block as defined below.</li><li><code>lifetime_action</code> - (Optional) A <code>lifetime_action</code> block as defined below.</li><li><code>secret_properties</code> - (Required) A <code>secret_properties</code> block as defined below.</li><li><code>x509_certificate_properties</code> - (Optional) A <code>x509_certificate_properties</code> block as defined below. Required when <code>certificate</code> block is not specified.</li></ul><hr /><p>The <code>issuer_parameters</code> block supports the following:</p><ul><li><code>name</code> - (Required) The name of the Certificate Issuer. Possible values include <code>Self</code> (for self-signed certificate), or <code>Unknown</code> (for a certificate issuing authority like <code>Let's Encrypt</code> and Azure direct supported ones). Changing this forces a new resource to be created.</li></ul><hr /><p>The <code>key_properties</code> block supports the following:</p><ul><li><code>curve</code> - (Optional) Specifies the curve to use when creating an <code>EC</code> key. Possible values are <code>P-256</code>, <code>P-256K</code>, <code>P-384</code>, and <code>P-521</code>. This field will be required in a future release if <code>key_type</code> is <code>EC</code> or <code>EC-HSM</code>. Changing this forces a new resource to be created.</li><li><code>exportable</code> - (Required) Is this certificate exportable? Changing this forces a new resource to be created.</li><li><code>key_size</code> - (Optional) The size of the key used in the certificate. Possible values include <code>2048</code>, <code>3072</code>, and <code>4096</code> for <code>RSA</code> keys, or <code>256</code>, <code>384</code>, and <code>521</code> for <code>EC</code> keys. This property is required when using RSA keys. Changing this forces a new resource to be created.</li><li><code>key_type</code> - (Required) Specifies the type of key. Possible values are <code>EC</code>, <code>EC-HSM</code>, <code>RSA</code>, <code>RSA-HSM</code> and <code>oct</code>. Changing this forces a new resource to be created.</li><li><code>reuse_key</code> - (Required) Is the key reusable? Changing this forces a new resource to be created.</li></ul><hr /><p>The <code>lifetime_action</code> block supports the following:</p><ul><li><code>action</code> - (Required) A <code>action</code> block as defined below.</li><li><code>trigger</code> - (Required) A <code>trigger</code> block as defined below.</li></ul><hr /><p>The <code>action</code> block supports the following:</p><ul><li><code>action_type</code> - (Required) The Type of action to be performed when the lifetime trigger is triggerec. Possible values include <code>AutoRenew</code> and <code>EmailContacts</code>. Changing this forces a new resource to be created.</li></ul><hr /><p>The <code>trigger</code> block supports the following:</p><ul><li><code>days_before_expiry</code> - (Optional) The number of days before the Certificate expires that the action associated with this Trigger should run. Changing this forces a new resource to be created. Conflicts with <code>lifetime_percentage</code>.</li><li><code>lifetime_percentage</code> - (Optional) The percentage at which during the Certificates Lifetime the action associated with this Trigger should run. Changing this forces a new resource to be created. Conflicts with <code>days_before_expiry</code>.</li></ul><hr /><p>The <code>secret_properties</code> block supports the following:</p><ul><li><code>content_type</code> - (Required) The Content-Type of the Certificate, such as <code>application/x-pkcs12</code> for a PFX or <code>application/x-pem-file</code> for a PEM. Changing this forces a new resource to be created.</li></ul><hr /><p>The <code>x509_certificate_properties</code> block supports the following:</p><ul><li><code>extended_key_usage</code> - (Optional) A list of Extended/Enhanced Key Usages. Changing this forces a new resource to be created.</li><li><code>key_usage</code> - (Required) A list of uses associated with this Key. Possible values include <code>cRLSign</code>, <code>dataEncipherment</code>, <code>decipherOnly</code>, <code>digitalSignature</code>, <code>encipherOnly</code>, <code>keyAgreement</code>, <code>keyCertSign</code>, <code>keyEncipherment</code> and <code>nonRepudiation</code> and are case-sensitive. Changing this forces a new resource to be created.</li><li><code>subject</code> - (Required) The Certificate's Subject. Changing this forces a new resource to be created.</li><li><code>subject_alternative_names</code> - (Optional) A <code>subject_alternative_names</code> block as defined below. Changing this forces a new resource to be created.</li><li><code>validity_in_months</code> - (Required) The Certificates Validity Period in Months. Changing this forces a new resource to be created.</li></ul><hr /><p>The <code>subject_alternative_names</code> block supports the following:</p><ul><li><code>dns_names</code> - (Optional) A list of alternative DNS names (FQDNs) identified by the Certificate. Changing this forces a new resource to be created.</li><li><code>emails</code> - (Optional) A list of email addresses identified by this Certificate. Changing this forces a new resource to be created.</li><li><code>upns</code> - (Optional) A list of User Principal Names identified by the Certificate. Changing this forces a new resource to be created.</li></ul>", "attributes-reference": "<h2 id=\"attributes-reference\">Attributes Reference</h2><p>In addition to the Arguments listed above - the following Attributes are exported:</p><ul><li><code>id</code> - The Key Vault Certificate ID.</li><li><code>secret_id</code> - The ID of the associated Key Vault Secret.</li><li><code>version</code> - The current version of the Key Vault Certificate.</li><li><code>versionless_id</code> - The Base ID of the Key Vault Certificate.</li><li><code>versionless_secret_id</code> - The Base ID of the Key Vault Secret.</li><li><code>certificate_data</code> - The raw Key Vault Certificate data represented as a hexadecimal string.</li><li><code>certificate_data_base64</code> - The Base64 encoded Key Vault Certificate data.</li><li><code>thumbprint</code> - The X509 Thumbprint of the Key Vault Certificate represented as a hexadecimal string.</li><li><p><code>certificate_attribute</code> - A <code>certificate_attribute</code> block as defined below.</p></li><li><p><code>resource_manager_id</code> - The (Versioned) ID for this Key Vault Certificate. This property points to a specific version of a Key Vault Certificate, as such using this won't auto-rotate values if used in other Azure Services.</p></li><li><p><code>resource_manager_versionless_id</code> - The Versionless ID of the Key Vault Certificate. This property allows other Azure Services (that support it) to auto-rotate their value when the Key Vault Certificate is updated.</p></li></ul><hr /><p>A <code>certificate_attribute</code> block exports the following:</p><ul><li><code>created</code> - The create time of the Key Vault Certificate.</li><li><code>enabled</code> - whether the Key Vault Certificate is enabled.</li><li><code>expires</code> - The expires time of the Key Vault Certificate.</li><li><code>not_before</code> - The not before valid time of the Key Vault Certificate.</li><li><code>recovery_level</code> - The deletion recovery level of the Key Vault Certificate.</li><li><code>updated</code> - The recent update time of the Key Vault Certificate.</li></ul>", "timeouts": "<h2 id=\"timeouts\">Timeouts</h2><p>The <code>timeouts</code> block allows you to specify <a href=\"https://www.terraform.io/language/resources/syntax#operation-timeouts\">timeouts</a> for certain actions:</p><ul><li><code>create</code> - (Defaults to 60 minutes) Used when creating the Key Vault Certificate.</li><li><code>update</code> - (Defaults to 30 minutes) Used when updating the Key Vault Certificate.</li><li><code>read</code> - (Defaults to 30 minutes) Used when retrieving the Key Vault Certificate.</li><li><code>delete</code> - (Defaults to 30 minutes) Used when deleting the Key Vault Certificate.</li></ul>", "import": "<h2 id=\"import\">Import</h2><p>Key Vault Certificates can be imported using the <code>resource id</code>, e.g.</p><p>shell<br />terraform import azurerm_key_vault_certificate.example \"https://example-keyvault.vault.azure.net/certificates/example/fdf067c93bbb4b22bff4d8b7a9a56217\"</p>", "description": "<h1 id=\"azurerm_key_vault_certificate\">azurerm_key_vault_certificate</h1><p>Manages a Key Vault Certificate.</p><p>~&gt; <strong>Note:</strong> The Azure Provider includes a Feature Toggle which will purge a Key Vault Certificate resource on destroy, rather than the default soft-delete. See <a href=\"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/guides/features-block#purge_soft_deleted_certificates_on_destroy\"><code>purge_soft_deleted_certificates_on_destroy</code></a> for more information. </p>"}