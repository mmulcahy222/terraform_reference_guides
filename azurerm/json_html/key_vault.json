{"azurerm-key-vault": "<h1 id=\"azurerm_key_vault\">azurerm_key_vault</h1><p>Manages a Key Vault.</p>", "disclaimers": "<h2 id=\"disclaimers\">Disclaimers</h2><p>~&gt; <strong>Note:</strong> It's possible to define Key Vault Access Policies both within <a href=\"key_vault.html\">the <code>azurerm_key_vault</code> resource</a> via the <code>access_policy</code> block and by using <a href=\"key_vault_access_policy.html\">the <code>azurerm_key_vault_access_policy</code> resource</a>. However it's not possible to use both methods to manage Access Policies within a KeyVault, since there'll be conflicts.</p><p>~&gt; <strong>Note:</strong> It's possible to define Key Vault Certificate Contacts both within <a href=\"key_vault.html\">the <code>azurerm_key_vault</code> resource</a> via the <code>contact</code> block and by using <a href=\"key_vault_certificate_contacts.html\">the <code>azurerm_key_vault_certificate_contacts</code> resource</a>. However it's not possible to use both methods to manage Certificate Contacts within a KeyVault, since there'll be conflicts.</p><p>~&gt; <strong>Note:</strong> Terraform will automatically recover a soft-deleted Key Vault during Creation if one is found - you can opt out of this using the <code>features</code> block within the Provider block.</p>", "example-usage": "<h2 id=\"example-usage\">Example Usage</h2><p>provider \"azurerm\" {<br />  features {<br />    key_vault {<br />      purge_soft_delete_on_destroy    = true<br />      recover_soft_deleted_key_vaults = true<br />    }<br />  }<br />}</p><br /><p>data \"azurerm_client_config\" \"current\" {}</p><br /><p>resource \"azurerm_resource_group\" \"example\" {<br />  name     = \"example-resources\"<br />  location = \"West Europe\"<br />}</p><br /><p>resource \"azurerm_key_vault\" \"example\" {<br />  name                        = \"examplekeyvault\"<br />  location                    = azurerm_resource_group.example.location<br />  resource_group_name         = azurerm_resource_group.example.name<br />  enabled_for_disk_encryption = true<br />  tenant_id                   = data.azurerm_client_config.current.tenant_id<br />  soft_delete_retention_days  = 7<br />  purge_protection_enabled    = false</p><br /><p>sku_name = \"standard\"</p><br /><p>access_policy {<br />    tenant_id = data.azurerm_client_config.current.tenant_id<br />    object_id = data.azurerm_client_config.current.object_id</p><br /><pre><code>key_permissions = [<br />  \"Get\",<br />]<br /><br />secret_permissions = [<br />  \"Get\",<br />]<br /><br />storage_permissions = [<br />  \"Get\",<br />]<br /></code></pre><br /><p>}<br />}</p><br />", "argument-reference": "<h2 id=\"argument-reference\">Argument Reference</h2><p>The following arguments are supported:</p><ul><li><p><code>name</code> - (Required) Specifies the name of the Key Vault. Changing this forces a new resource to be created. The name must be globally unique. If the vault is in a recoverable state then the vault will need to be purged before reusing the name.</p></li><li><p><code>location</code> - (Required) Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.</p></li><li><p><code>resource_group_name</code> - (Required) The name of the resource group in which to create the Key Vault. Changing this forces a new resource to be created.</p></li><li><p><code>sku_name</code> - (Required) The Name of the SKU used for this Key Vault. Possible values are <code>standard</code> and <code>premium</code>.</p></li><li><p><code>tenant_id</code> - (Required) The Azure Active Directory tenant ID that should be used for authenticating requests to the key vault.</p></li></ul><hr /><ul><li><code>access_policy</code> - (Optional) <a href=\"/docs/configuration/attr-as-blocks.html\">A list</a> of up to 1024 objects describing access policies, as described below.</li></ul><p>-&gt; <strong>NOTE</strong> Since <code>access_policy</code> can be configured both inline and via the separate <code>azurerm_key_vault_access_policy</code> resource, we have to explicitly set it to empty slice (<code>[]</code>) to remove it.</p><ul><li><p><code>enabled_for_deployment</code> - (Optional) Boolean flag to specify whether Azure Virtual Machines are permitted to retrieve certificates stored as secrets from the key vault.</p></li><li><p><code>enabled_for_disk_encryption</code> - (Optional) Boolean flag to specify whether Azure Disk Encryption is permitted to retrieve secrets from the vault and unwrap keys.</p></li><li><p><code>enabled_for_template_deployment</code> - (Optional) Boolean flag to specify whether Azure Resource Manager is permitted to retrieve secrets from the key vault.</p></li><li><p><code>enable_rbac_authorization</code> - (Optional) Boolean flag to specify whether Azure Key Vault uses Role Based Access Control (RBAC) for authorization of data actions.</p></li><li><p><code>network_acls</code> - (Optional) A <code>network_acls</code> block as defined below.</p></li><li><p><code>purge_protection_enabled</code> - (Optional) Is Purge Protection enabled for this Key Vault? </p></li></ul><p>!&gt; <strong>Note:</strong> Once Purge Protection has been Enabled it's not possible to Disable it. Support for <a href=\"https://github.com/Azure/azure-rest-api-specs/issues/8075\">disabling purge protection is being tracked in this Azure API issue</a>. Deleting the Key Vault with Purge Protection Enabled will schedule the Key Vault to be deleted (which will happen by Azure in the configured number of days, currently 90 days - which will be configurable in Terraform in the future).</p><ul><li><p><code>public_network_access_enabled</code> - (Optional) Whether public network access is allowed for this Key Vault. Defaults to <code>true</code>.</p></li><li><p><code>soft_delete_retention_days</code> - (Optional) The number of days that items should be retained for once soft-deleted. This value can be between <code>7</code> and <code>90</code> (the default) days.</p></li></ul><p>~&gt; <strong>Note:</strong> This field can only be configured one time and cannot be updated.</p><ul><li><code>contact</code> - (Optional) One or more <code>contact</code> block as defined below.</li></ul><p>~&gt; <strong>Note:</strong> This field can only be set once user has <code>managecontacts</code> certificate permission.</p><ul><li><code>tags</code> - (Optional) A mapping of tags to assign to the resource.</li></ul><hr /><p>A <code>access_policy</code> block supports the following:</p><ul><li><p><code>tenant_id</code> - (Required) The Azure Active Directory tenant ID that should be used for authenticating requests to the key vault. Must match the <code>tenant_id</code> used above.</p></li><li><p><code>object_id</code> - (Required) The object ID of a user, service principal or security group in the Azure Active Directory tenant for the vault. The object ID must be unique for the list of access policies.</p></li><li><p><code>application_id</code> - (Optional) The object ID of an Application in Azure Active Directory.</p></li><li><p><code>certificate_permissions</code> - (Optional) List of certificate permissions, must be one or more from the following: <code>Backup</code>, <code>Create</code>, <code>Delete</code>, <code>DeleteIssuers</code>, <code>Get</code>, <code>GetIssuers</code>, <code>Import</code>, <code>List</code>, <code>ListIssuers</code>, <code>ManageContacts</code>, <code>ManageIssuers</code>, <code>Purge</code>, <code>Recover</code>, <code>Restore</code>, <code>SetIssuers</code> and <code>Update</code>.</p></li><li><p><code>key_permissions</code> - (Optional) List of key permissions. Possible values are <code>Backup</code>, <code>Create</code>, <code>Decrypt</code>, <code>Delete</code>, <code>Encrypt</code>, <code>Get</code>, <code>Import</code>, <code>List</code>, <code>Purge</code>, <code>Recover</code>, <code>Restore</code>, <code>Sign</code>, <code>UnwrapKey</code>, <code>Update</code>, <code>Verify</code>, <code>WrapKey</code>, <code>Release</code>, <code>Rotate</code>, <code>GetRotationPolicy</code> and <code>SetRotationPolicy</code>.</p></li><li><p><code>secret_permissions</code> - (Optional) List of secret permissions, must be one or more from the following: <code>Backup</code>, <code>Delete</code>, <code>Get</code>, <code>List</code>, <code>Purge</code>, <code>Recover</code>, <code>Restore</code> and <code>Set</code>.</p></li><li><p><code>storage_permissions</code> - (Optional) List of storage permissions, must be one or more from the following: <code>Backup</code>, <code>Delete</code>, <code>DeleteSAS</code>, <code>Get</code>, <code>GetSAS</code>, <code>List</code>, <code>ListSAS</code>, <code>Purge</code>, <code>Recover</code>, <code>RegenerateKey</code>, <code>Restore</code>, <code>Set</code>, <code>SetSAS</code> and <code>Update</code>.</p></li></ul><hr /><p>A <code>network_acls</code> block supports the following:</p><ul><li><p><code>bypass</code> - (Required) Specifies which traffic can bypass the network rules. Possible values are <code>AzureServices</code> and <code>None</code>.</p></li><li><p><code>default_action</code> - (Required) The Default Action to use when no rules match from <code>ip_rules</code> / <code>virtual_network_subnet_ids</code>. Possible values are <code>Allow</code> and <code>Deny</code>.</p></li><li><p><code>ip_rules</code> - (Optional) One or more IP Addresses, or CIDR Blocks which should be able to access the Key Vault.</p></li><li><p><code>virtual_network_subnet_ids</code> - (Optional) One or more Subnet IDs which should be able to access this Key Vault.</p></li></ul><hr /><p>A <code>contact</code> block supports the following:</p><ul><li><p><code>email</code> - (Required) E-mail address of the contact.</p></li><li><p><code>name</code> - (Optional) Name of the contact.</p></li><li><p><code>phone</code> - (Optional) Phone number of the contact.</p></li></ul>", "attributes-reference": "<h2 id=\"attributes-reference\">Attributes Reference</h2><p>In addition to the Arguments listed above - the following Attributes are exported:</p><ul><li><p><code>id</code> - The ID of the Key Vault.</p></li><li><p><code>vault_uri</code> - The URI of the Key Vault, used for performing operations on keys and secrets.</p></li></ul>", "timeouts": "<h2 id=\"timeouts\">Timeouts</h2><p>The <code>timeouts</code> block allows you to specify <a href=\"https://www.terraform.io/language/resources/syntax#operation-timeouts\">timeouts</a> for certain actions:</p><ul><li><code>create</code> - (Defaults to 30 minutes) Used when creating the Key Vault.</li><li><code>update</code> - (Defaults to 30 minutes) Used when updating the Key Vault.</li><li><code>read</code> - (Defaults to 5 minutes) Used when retrieving the Key Vault.</li><li><code>delete</code> - (Defaults to 30 minutes) Used when deleting the Key Vault.</li></ul>", "import": "<h2 id=\"import\">Import</h2><p>Key Vault's can be imported using the <code>resource id</code>, e.g.</p><p>shell<br />terraform import azurerm_key_vault.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.KeyVault/vaults/vault1</p>", "description": "<h1 id=\"azurerm_key_vault\">azurerm_key_vault</h1><p>Manages a Key Vault.</p>"}