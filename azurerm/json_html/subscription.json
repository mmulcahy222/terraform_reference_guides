{"azurerm-subscription": "<h1 id=\"azurerm_subscription\">azurerm_subscription</h1><p>Manages an Alias for a Subscription - which adds an Alias to an existing Subscription, allowing it to be managed in Terraform - or create a new Subscription with a new Alias.</p><p>~&gt; <strong>NOTE:</strong> Destroying a Subscription controlled by this resource will place the Subscription into a cancelled state. It is possible to re-activate a subscription within 90-days of cancellation, after which time the Subscription is irrevocably deleted, and the Subscription ID cannot be re-used. For further information see <a href=\"https://docs.microsoft.com/azure/cost-management-billing/manage/cancel-azure-subscription#what-happens-after-subscription-cancellation\">here</a>. Users can optionally delete a Subscription once 72 hours have passed, however, this functionality is not suitable for Terraform. A <code>Deleted</code> subscription cannot be reactivated.</p><p>~&gt; <strong>NOTE:</strong> It is not possible to destroy (cancel) a subscription if it contains resources. If resources are present that are not managed by Terraform then these will need to be removed before the Subscription can be destroyed.</p><p>~&gt; <strong>Note:</strong> This resource will automatically attempt to cancel a subscription when it is deleted. This behavior can be disabled in the provider <code>features</code> block by setting the <code>prevent_cancellation_on_destroy</code> field to <code>true</code> within the <code>subscription</code> block.</p><p>~&gt; <strong>NOTE:</strong> Azure supports Multiple Aliases per Subscription, however, to reliably manage this resource in Terraform only a single Alias is supported.</p><p>~&gt; <strong>NOTE:</strong> When using this resource across tenants the <code>client_id</code> and <code>tenant_id</code> of the <code>provider</code> config block should be for the home tenant details for the SPN / User or a permissions error will likely be encountered. See <a href=\"https://learn.microsoft.com/en-us/azure/cost-management-billing/manage/programmatically-create-subscription\">the official documentation</a> for more details. </p>", "example-usage---creating-a-new-alias-and-subscription-for-an-enrollment-account": "<h2 id=\"example-usage-creating-a-new-alias-and-subscription-for-an-enrollment-account\">Example Usage - creating a new Alias and Subscription for an Enrollment Account</h2><p>data \"azurerm_billing_enrollment_account_scope\" \"example\" {<br />  billing_account_name    = \"1234567890\"<br />  enrollment_account_name = \"0123456\"<br />}</p><p>resource \"azurerm_subscription\" \"example\" {<br />  subscription_name = \"My Example EA Subscription\"<br />  billing_scope_id  = data.azurerm_billing_enrollment_account_scope.example.id<br />}</p>", "example-usage---creating-a-new-alias-and-subscription-for-a-microsoft-customer-account": "<h2 id=\"example-usage-creating-a-new-alias-and-subscription-for-a-microsoft-customer-account\">Example Usage - creating a new Alias and Subscription for a Microsoft Customer Account</h2><p>data \"azurerm_billing_mca_account_scope\" \"example\" {<br />  billing_account_name = \"e879cf0f-2b4d-5431-109a-f72fc9868693:024cabf4-7321-4cf9-be59-df0c77ca51de_2019-05-31\"<br />  billing_profile_name = \"PE2Q-NOIT-BG7-TGB\"<br />  invoice_section_name = \"MTT4-OBS7-PJA-TGB\"<br />}</p><p>resource \"azurerm_subscription\" \"example\" {<br />  subscription_name = \"My Example MCA Subscription\"<br />  billing_scope_id  = data.azurerm_billing_mca_account_scope.example.id<br />}</p>", "example-usage---creating-a-new-alias-and-subscription-for-a-microsoft-partner-account": "<h2 id=\"example-usage-creating-a-new-alias-and-subscription-for-a-microsoft-partner-account\">Example Usage - creating a new Alias and Subscription for a Microsoft Partner Account</h2><p>data \"azurerm_billing_mpa_account_scope\" \"example\" {<br />  billing_account_name = \"e879cf0f-2b4d-5431-109a-f72fc9868693:024cabf4-7321-4cf9-be59-df0c77ca51de_2019-05-31\"<br />  customer_name        = \"2281f543-7321-4cf9-1e23-edb4Oc31a31c\"<br />}</p><p>resource \"azurerm_subscription\" \"example\" {<br />  subscription_name = \"My Example MPA Subscription\"<br />  billing_scope_id  = data.azurerm_billing_mpa_account_scope.example.id<br />}</p>", "example-usage---adding-an-alias-to-an-existing-subscription": "<h2 id=\"example-usage-adding-an-alias-to-an-existing-subscription\">Example Usage - adding an Alias to an existing Subscription</h2><p>resource \"azurerm_subscription\" \"example\" {<br />  alias             = \"examplesub\"<br />  subscription_name = \"My Example Subscription\"<br />  subscription_id   = \"12345678-12234-5678-9012-123456789012\"<br />}</p>", "arguments-reference": "<h2 id=\"arguments-reference\">Arguments Reference</h2><p>The following arguments are supported:</p><ul><li><code>subscription_name</code> - (Required) The Name of the Subscription. This is the Display Name in the portal.</li></ul><hr /><ul><li><p><code>alias</code> - (Optional) The Alias name for the subscription. Terraform will generate a new GUID if this is not supplied. Changing this forces a new Subscription to be created.</p></li><li><p><code>billing_scope_id</code> - (Optional) The Azure Billing Scope ID. Can be a Microsoft Customer Account Billing Scope ID, a Microsoft Partner Account Billing Scope ID or an Enrollment Billing Scope ID.</p></li><li><p><code>subscription_id</code> - (Optional) The ID of the Subscription. Changing this forces a new Subscription to be created.</p></li></ul><p>~&gt; <strong>NOTE:</strong> This value can be specified only for adopting control of an existing Subscription, it cannot be used to provide a custom Subscription ID.</p><p>~&gt; <strong>NOTE:</strong> Either <code>billing_scope_id</code> or <code>subscription_id</code> has to be specified.</p><ul><li><p><code>workload</code> - (Optional) The workload type of the Subscription. Possible values are <code>Production</code> (default) and <code>DevTest</code>. Changing this forces a new Subscription to be created.</p></li><li><p><code>tags</code> - (Optional) A mapping of tags to assign to the Subscription.</p></li></ul>", "attributes-reference": "<h2 id=\"attributes-reference\">Attributes Reference</h2><p>In addition to the Arguments listed above - the following Attributes are exported:</p><ul><li><p><code>id</code> - The Resource ID of the Alias.</p></li><li><p><code>tenant_id</code> - The ID of the Tenant to which the subscription belongs.</p></li></ul>", "timeouts": "<h2 id=\"timeouts\">Timeouts</h2><p>The <code>timeouts</code> block allows you to specify <a href=\"https://www.terraform.io/language/resources/syntax#operation-timeouts\">timeouts</a> for certain actions:</p><ul><li><code>create</code> - (Defaults to 30 minutes) Used when creating the Subscription.</li><li><code>read</code> - (Defaults to 5 minutes) Used when retrieving the Subscription.</li><li><code>update</code> - (Defaults to 30 minutes) Used when updating the Subscription.</li><li><code>delete</code> - (Defaults to 30 minutes) Used when deleting the Subscription.</li></ul>", "import": "<h2 id=\"import\">Import</h2><p>Subscriptions can be imported using the <code>resource id</code>, e.g.</p><p>shell<br />terraform import azurerm_subscription.example \"/providers/Microsoft.Subscription/aliases/subscription1\"</p><p>!&gt; <strong>NOTE:</strong> When importing a Subscription that was not created programmatically, either by this Terraform resource or using the Alias API, it will have no Alias ID to import via <code>terraform import</code>.<br />In this scenario, the <code>subscription_id</code> property can be completed and Terraform will assume control of the existing subscription by creating an Alias. See the <code>adding an Alias to an existing Subscription</code> above. Terrafom requires an alias to correctly manage Subscription resources due to Azure Subscription API design.</p>", "description": "<h1 id=\"azurerm_subscription\">azurerm_subscription</h1><p>Manages an Alias for a Subscription - which adds an Alias to an existing Subscription, allowing it to be managed in Terraform - or create a new Subscription with a new Alias.</p><p>~&gt; <strong>NOTE:</strong> Destroying a Subscription controlled by this resource will place the Subscription into a cancelled state. It is possible to re-activate a subscription within 90-days of cancellation, after which time the Subscription is irrevocably deleted, and the Subscription ID cannot be re-used. For further information see <a href=\"https://docs.microsoft.com/azure/cost-management-billing/manage/cancel-azure-subscription#what-happens-after-subscription-cancellation\">here</a>. Users can optionally delete a Subscription once 72 hours have passed, however, this functionality is not suitable for Terraform. A <code>Deleted</code> subscription cannot be reactivated.</p><p>~&gt; <strong>NOTE:</strong> It is not possible to destroy (cancel) a subscription if it contains resources. If resources are present that are not managed by Terraform then these will need to be removed before the Subscription can be destroyed.</p><p>~&gt; <strong>Note:</strong> This resource will automatically attempt to cancel a subscription when it is deleted. This behavior can be disabled in the provider <code>features</code> block by setting the <code>prevent_cancellation_on_destroy</code> field to <code>true</code> within the <code>subscription</code> block.</p><p>~&gt; <strong>NOTE:</strong> Azure supports Multiple Aliases per Subscription, however, to reliably manage this resource in Terraform only a single Alias is supported.</p><p>~&gt; <strong>NOTE:</strong> When using this resource across tenants the <code>client_id</code> and <code>tenant_id</code> of the <code>provider</code> config block should be for the home tenant details for the SPN / User or a permissions error will likely be encountered. See <a href=\"https://learn.microsoft.com/en-us/azure/cost-management-billing/manage/programmatically-create-subscription\">the official documentation</a> for more details. </p>"}