{"azurerm-disk-encryption-set": "<h1 id=\"azurerm_disk_encryption_set\">azurerm_disk_encryption_set</h1><p>Manages a Disk Encryption Set.</p>", "example-usage": "<h2 id=\"example-usage\">Example Usage</h2><p>data \"azurerm_client_config\" \"current\" {}</p><br /><p>resource \"azurerm_resource_group\" \"example\" {<br />  name     = \"example-resources\"<br />  location = \"West Europe\"<br />}</p><br /><p>resource \"azurerm_key_vault\" \"example\" {<br />  name                        = \"des-example-keyvault\"<br />  location                    = azurerm_resource_group.example.location<br />  resource_group_name         = azurerm_resource_group.example.name<br />  tenant_id                   = data.azurerm_client_config.current.tenant_id<br />  sku_name                    = \"premium\"<br />  enabled_for_disk_encryption = true<br />  purge_protection_enabled    = true<br />}</p><br /><p>resource \"azurerm_key_vault_key\" \"example\" {<br />  name         = \"des-example-key\"<br />  key_vault_id = azurerm_key_vault.example.id<br />  key_type     = \"RSA\"<br />  key_size     = 2048</p><br /><p>depends_on = [<br />    azurerm_key_vault_access_policy.example-user<br />  ]</p><br /><p>key_opts = [<br />    \"decrypt\",<br />    \"encrypt\",<br />    \"sign\",<br />    \"unwrapKey\",<br />    \"verify\",<br />    \"wrapKey\",<br />  ]<br />}</p><br /><p>resource \"azurerm_disk_encryption_set\" \"example\" {<br />  name                = \"des\"<br />  resource_group_name = azurerm_resource_group.example.name<br />  location            = azurerm_resource_group.example.location<br />  key_vault_key_id    = azurerm_key_vault_key.example.id</p><br /><p>identity {<br />    type = \"SystemAssigned\"<br />  }<br />}</p><br /><p>resource \"azurerm_key_vault_access_policy\" \"example-disk\" {<br />  key_vault_id = azurerm_key_vault.example.id</p><br /><p>tenant_id = azurerm_disk_encryption_set.example.identity.0.tenant_id<br />  object_id = azurerm_disk_encryption_set.example.identity.0.principal_id</p><br /><p>key_permissions = [<br />    \"Create\",<br />    \"Delete\",<br />    \"Get\",<br />    \"Purge\",<br />    \"Recover\",<br />    \"Update\",<br />    \"List\",<br />    \"Decrypt\",<br />    \"Sign\",<br />  ]<br />}</p><br /><p>resource \"azurerm_key_vault_access_policy\" \"example-user\" {<br />  key_vault_id = azurerm_key_vault.example.id</p><br /><p>tenant_id = data.azurerm_client_config.current.tenant_id<br />  object_id = data.azurerm_client_config.current.object_id</p><br /><p>key_permissions = [<br />    \"Create\",<br />    \"Delete\",<br />    \"Get\",<br />    \"Purge\",<br />    \"Recover\",<br />    \"Update\",<br />    \"List\",<br />    \"Decrypt\",<br />    \"Sign\",<br />    \"GetRotationPolicy\",<br />  ]<br />}</p><br /><p>resource \"azurerm_role_assignment\" \"example-disk\" {<br />  scope                = azurerm_key_vault.example.id<br />  role_definition_name = \"Key Vault Crypto Service Encryption User\"<br />  principal_id         = azurerm_disk_encryption_set.example.identity.0.principal_id<br />}</p><br />", "example-usage-with-automatic-key-rotation-enabled": "<h2 id=\"example-usage-with-automatic-key-rotation-enabled\">Example Usage with Automatic Key Rotation Enabled</h2><p>data \"azurerm_client_config\" \"current\" {}</p><p>resource \"azurerm_resource_group\" \"example\" {<br />  name     = \"example-resources\"<br />  location = \"West Europe\"<br />}</p><p>resource \"azurerm_key_vault\" \"example\" {<br />  name                        = \"des-example-keyvault\"<br />  location                    = azurerm_resource_group.example.location<br />  resource_group_name         = azurerm_resource_group.example.name<br />  tenant_id                   = data.azurerm_client_config.current.tenant_id<br />  sku_name                    = \"premium\"<br />  enabled_for_disk_encryption = true<br />  purge_protection_enabled    = true<br />}</p><p>resource \"azurerm_key_vault_key\" \"example\" {<br />  name         = \"des-example-key\"<br />  key_vault_id = azurerm_key_vault.example.id<br />  key_type     = \"RSA\"<br />  key_size     = 2048</p><p>depends_on = [<br />    azurerm_key_vault_access_policy.example-user<br />  ]</p><p>key_opts = [<br />    \"decrypt\",<br />    \"encrypt\",<br />    \"sign\",<br />    \"unwrapKey\",<br />    \"verify\",<br />    \"wrapKey\",<br />  ]<br />}</p><p>resource \"azurerm_disk_encryption_set\" \"example\" {<br />  name                = \"des\"<br />  resource_group_name = azurerm_resource_group.example.name<br />  location            = azurerm_resource_group.example.location<br />  key_vault_key_id    = azurerm_key_vault_key.example.versionless_id</p><p>auto_key_rotation_enabled = true</p><p>identity {<br />    type = \"SystemAssigned\"<br />  }<br />}</p><p>resource \"azurerm_key_vault_access_policy\" \"example-disk\" {<br />  key_vault_id = azurerm_key_vault.example.id</p><p>tenant_id = azurerm_disk_encryption_set.example.identity.0.tenant_id<br />  object_id = azurerm_disk_encryption_set.example.identity.0.principal_id</p><p>key_permissions = [<br />    \"Create\",<br />    \"Delete\",<br />    \"Get\",<br />    \"Purge\",<br />    \"Recover\",<br />    \"Update\",<br />    \"List\",<br />    \"Decrypt\",<br />    \"Sign\",<br />  ]<br />}</p><p>resource \"azurerm_key_vault_access_policy\" \"example-user\" {<br />  key_vault_id = azurerm_key_vault.example.id</p><p>tenant_id = data.azurerm_client_config.current.tenant_id<br />  object_id = data.azurerm_client_config.current.object_id</p><p>key_permissions = [<br />    \"Create\",<br />    \"Delete\",<br />    \"Get\",<br />    \"Purge\",<br />    \"Recover\",<br />    \"Update\",<br />    \"List\",<br />    \"Decrypt\",<br />    \"Sign\",<br />    \"GetRotationPolicy\",<br />  ]<br />}</p><p>resource \"azurerm_role_assignment\" \"example-disk\" {<br />  scope                = azurerm_key_vault.example.id<br />  role_definition_name = \"Key Vault Crypto Service Encryption User\"<br />  principal_id         = azurerm_disk_encryption_set.example.identity.0.principal_id<br />}</p>", "argument-reference": "<h2 id=\"argument-reference\">Argument Reference</h2><p>The following arguments are supported:</p><ul><li><p><code>name</code> - (Required) The name of the Disk Encryption Set. Changing this forces a new resource to be created.</p></li><li><p><code>resource_group_name</code> - (Required) Specifies the name of the Resource Group where the Disk Encryption Set should exist. Changing this forces a new resource to be created.</p></li><li><p><code>location</code> - (Required) Specifies the Azure Region where the Disk Encryption Set exists. Changing this forces a new resource to be created.</p></li><li><p><code>key_vault_key_id</code> - (Required) Specifies the URL to a Key Vault Key (either from a Key Vault Key, or the Key URL for the Key Vault Secret).</p></li></ul><p>-&gt; <strong>NOTE</strong> Access to the KeyVault must be granted for this Disk Encryption Set, if you want to further use this Disk Encryption Set in a Managed Disk or Virtual Machine, or Virtual Machine Scale Set. For instructions, please refer to the doc of <a href=\"https://docs.microsoft.com/azure/virtual-machines/linux/disk-encryption\">Server side encryption of Azure managed disks</a>.</p><p>-&gt; <strong>NOTE</strong> A KeyVault using <a href=\"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/key_vault#enable_rbac_authorization\">enable_rbac_authorization</a> requires to use <code>azurerm_role_assignment</code> to assigne the role <code>Key Vault Crypto Service Encryption User</code> to this Disk Encryption Set.<br />In this case, <code>azurerm_key_vault_access_policy</code> is not needed.</p><ul><li><code>auto_key_rotation_enabled</code> - (Optional) Boolean flag to specify whether Azure Disk Encryption Set automatically rotates the encryption Key to latest version or not. Possible values are <code>true</code> or <code>false</code>. Defaults to <code>false</code>.</li></ul><p>-&gt; <strong>NOTE</strong> When <code>auto_key_rotation_enabled</code> is set to <code>true</code> the <code>key_vault_key_id</code> must use the <code>versionless_id</code>.</p><p>-&gt; <strong>NOTE</strong> To validate which Key Vault Key version is currently being used by the service it is recommended that you use the <code>azurerm_disk_encryption_set</code> data source or run a <code>terraform refresh</code> command and check the value of the exported <code>key_vault_key_url</code> field.</p><p>-&gt; <strong>NOTE</strong> It may take between 10 to 20 minutes for the service to update the Key Vault Key URL once the keys have been rotated.</p><ul><li><p><code>encryption_type</code> - (Optional) The type of key used to encrypt the data of the disk. Possible values are <code>EncryptionAtRestWithCustomerKey</code>, <code>EncryptionAtRestWithPlatformAndCustomerKeys</code> and <code>ConfidentialVmEncryptedWithCustomerKey</code>. Defaults to <code>EncryptionAtRestWithCustomerKey</code>. Changing this forces a new resource to be created.</p></li><li><p><code>federated_client_id</code> - (Optional) Multi-tenant application client id to access key vault in a different tenant.</p></li><li><p><code>identity</code> - (Required) An <code>identity</code> block as defined below.</p></li><li><p><code>tags</code> - (Optional) A mapping of tags to assign to the Disk Encryption Set.</p></li></ul><hr /><p>An <code>identity</code> block supports the following:</p><ul><li><p><code>type</code> - (Required) The type of Managed Service Identity that is configured on this Disk Encryption Set. Possible values are <code>SystemAssigned</code>, <code>UserAssigned</code>, <code>SystemAssigned, UserAssigned</code> (to enable both). </p></li><li><p><code>identity_ids</code> - (Optional) A list of User Assigned Managed Identity IDs to be assigned to this Disk Encryption Set.</p></li></ul><p>~&gt; <strong>NOTE:</strong> This is required when <code>type</code> is set to <code>UserAssigned</code> or <code>SystemAssigned, UserAssigned</code>.</p>", "attributes-reference": "<h2 id=\"attributes-reference\">Attributes Reference</h2><p>In addition to the Arguments listed above - the following Attributes are exported:</p><ul><li><p><code>id</code> - The ID of the Disk Encryption Set.</p></li><li><p><code>key_vault_key_url</code> - The URL for the Key Vault Key or Key Vault Secret that is currently being used by the service.</p></li></ul><hr /><p>An <code>identity</code> block exports the following:</p><ul><li><p><code>principal_id</code> - The (Client) ID of the Service Principal.</p></li><li><p><code>tenant_id</code> - The ID of the Tenant the Service Principal is assigned in.</p></li></ul>", "timeouts": "<h2 id=\"timeouts\">Timeouts</h2><p>The <code>timeouts</code> block allows you to specify <a href=\"https://www.terraform.io/language/resources/syntax#operation-timeouts\">timeouts</a> for certain actions:</p><ul><li><code>create</code> - (Defaults to 60 minutes) Used when creating the Disk Encryption Set.</li><li><code>update</code> - (Defaults to 60 minutes) Used when updating the Disk Encryption Set.</li><li><code>read</code> - (Defaults to 5 minutes) Used when retrieving the Disk Encryption Set.</li><li><code>delete</code> - (Defaults to 60 minutes) Used when deleting the Disk Encryption Set.</li></ul>", "import": "<h2 id=\"import\">Import</h2><p>Disk Encryption Sets can be imported using the <code>resource id</code>, e.g.</p><p>shell<br />terraform import azurerm_disk_encryption_set.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Compute/diskEncryptionSets/encryptionSet1</p>", "description": "<h1 id=\"azurerm_disk_encryption_set\">azurerm_disk_encryption_set</h1><p>Manages a Disk Encryption Set.</p>"}