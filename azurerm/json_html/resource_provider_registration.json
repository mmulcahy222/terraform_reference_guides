{"azurerm-resource-provider-registration": "<h1 id=\"azurerm_resource_provider_registration\">azurerm_resource_provider_registration</h1><p>Manages the registration of a Resource Provider - which allows access to the API's supported by this Resource Provider.</p><p>-&gt; The Azure Provider will automatically register all of the Resource Providers which it supports on launch (unless opted-out using the <code>skip_provider_registration</code> field within the provider block).</p><p>!&gt; <strong>Note:</strong> The errors returned from the Azure API when a Resource Provider is unregistered are unclear (example <code>API version '2019-01-01' was not found for 'Microsoft.Foo'</code>) - please ensure that all of the necessary Resource Providers you're using are registered - if in doubt <strong>we strongly recommend letting Terraform register these for you</strong>.</p><p>-&gt; <strong>Note:</strong> Adding or Removing a Preview Feature will re-register the Resource Provider.</p>", "example-usage": "<h2 id=\"example-usage\">Example Usage</h2><p>resource \"azurerm_resource_provider_registration\" \"example\" {<br />  name = \"Microsoft.PolicyInsights\"<br />}</p><br />", "example-usage-registering-a-preview-feature": "<h2 id=\"example-usage-registering-a-preview-feature\">Example Usage (Registering a Preview Feature)</h2><p>provider \"azurerm\" {<br />  features {}</p><p>skip_provider_registration = true<br />}</p><p>resource \"azurerm_resource_provider_registration\" \"example\" {<br />  name = \"Microsoft.ContainerService\"</p><p>feature {<br />    name       = \"AKS-DataPlaneAutoApprove\"<br />    registered = true<br />  }<br />}</p>", "argument-reference": "<h2 id=\"argument-reference\">Argument Reference</h2><p>The following arguments are supported:</p><ul><li><p><code>name</code> - (Required) The namespace of the Resource Provider which should be registered. Changing this forces a new resource to be created.</p></li><li><p><code>feature</code> - (Optional) A list of <code>feature</code> blocks as defined below.</p></li></ul><p>~&gt; <strong>Note:</strong> The <code>feature</code> block allows a Preview Feature to be explicitly Registered or Unregistered for this Resource Provider - once a Feature has been explicitly Registered or Unregistered, it must be specified in the Terraform Configuration (it's not possible to reset this to the default, unspecified, state).</p><hr /><p>A <code>feature</code> block supports the following:</p><ul><li><code>name</code> - (Required) Specifies the name of the feature to register.</li></ul><p>~&gt; <strong>Note:</strong> Only Preview Features which have an <code>ApprovalType</code> of <code>AutoApproval</code> can be managed in Terraform, features which require manual approval by Service Teams are unsupported. <a href=\"https://docs.microsoft.com/rest/api/resources/features\">More information on Resource Provider Preview Features can be found in this document</a></p><ul><li><code>registered</code> - (Required) Should this feature be Registered or Unregistered?</li></ul>", "timeouts": "<h2 id=\"timeouts\">Timeouts</h2><p>The <code>timeouts</code> block allows you to specify <a href=\"https://www.terraform.io/language/resources/syntax#operation-timeouts\">timeouts</a> for certain actions:</p><ul><li><code>create</code> - (Defaults to 120 minutes) Used when registering the Resource Provider/Features.</li><li><code>read</code> - (Defaults to 5 minutes) Used when retrieving the Resource Provider.</li><li><code>update</code> - (Defaults to 120 minutes) Used when updating the Resource Provider/Features.</li><li><code>delete</code> - (Defaults to 30 minutes) Used when unregistering the Resource Provider.</li></ul>", "import": "<h2 id=\"import\">Import</h2><p>Resource Provider Registrations can be imported using the <code>resource id</code>, e.g.</p><p>shell<br />terraform import azurerm_resource_provider_registration.example /subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.PolicyInsights</p>", "description": "<h1 id=\"azurerm_resource_provider_registration\">azurerm_resource_provider_registration</h1><p>Manages the registration of a Resource Provider - which allows access to the API's supported by this Resource Provider.</p><p>-&gt; The Azure Provider will automatically register all of the Resource Providers which it supports on launch (unless opted-out using the <code>skip_provider_registration</code> field within the provider block).</p><p>!&gt; <strong>Note:</strong> The errors returned from the Azure API when a Resource Provider is unregistered are unclear (example <code>API version '2019-01-01' was not found for 'Microsoft.Foo'</code>) - please ensure that all of the necessary Resource Providers you're using are registered - if in doubt <strong>we strongly recommend letting Terraform register these for you</strong>.</p><p>-&gt; <strong>Note:</strong> Adding or Removing a Preview Feature will re-register the Resource Provider.</p>"}