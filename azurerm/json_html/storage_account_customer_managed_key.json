{"azurerm-storage-account-customer-managed-key": "<h1 id=\"azurerm_storage_account_customer_managed_key\">azurerm_storage_account_customer_managed_key</h1><p>Manages a Customer Managed Key for a Storage Account.</p><p>~&gt; <strong>NOTE:</strong> It's possible to define a Customer Managed Key both within <a href=\"storage_account.html\">the <code>azurerm_storage_account</code> resource</a> via the <code>customer_managed_key</code> block and by using <a href=\"storage_account_customer_managed_key.html\">the <code>azurerm_storage_account_customer_managed_key</code> resource</a>. However it's not possible to use both methods to manage a Customer Managed Key for a Storage Account, since there'll be conflicts.</p>", "example-usage": "<h2 id=\"example-usage\">Example Usage</h2><p>data \"azurerm_client_config\" \"current\" {}</p><br /><p>resource \"azurerm_resource_group\" \"example\" {<br />  name     = \"example-resources\"<br />  location = \"West Europe\"<br />}</p><br /><p>resource \"azurerm_key_vault\" \"example\" {<br />  name                = \"examplekv\"<br />  location            = azurerm_resource_group.example.location<br />  resource_group_name = azurerm_resource_group.example.name<br />  tenant_id           = data.azurerm_client_config.current.tenant_id<br />  sku_name            = \"standard\"</p><br /><p>purge_protection_enabled = true<br />}</p><br /><p>resource \"azurerm_key_vault_access_policy\" \"storage\" {<br />  key_vault_id = azurerm_key_vault.example.id<br />  tenant_id    = data.azurerm_client_config.current.tenant_id<br />  object_id    = azurerm_storage_account.example.identity.0.principal_id</p><br /><p>secret_permissions = [\"Get\"]<br />  key_permissions = [<br />    \"Get\",<br />    \"UnwrapKey\",<br />    \"WrapKey\"<br />  ]<br />}</p><br /><p>resource \"azurerm_key_vault_access_policy\" \"client\" {<br />  key_vault_id = azurerm_key_vault.example.id<br />  tenant_id    = data.azurerm_client_config.current.tenant_id<br />  object_id    = data.azurerm_client_config.current.object_id</p><br /><p>secret_permissions = [\"Get\"]<br />  key_permissions = [<br />    \"Get\",<br />    \"Create\",<br />    \"Delete\",<br />    \"List\",<br />    \"Restore\",<br />    \"Recover\",<br />    \"UnwrapKey\",<br />    \"WrapKey\",<br />    \"Purge\",<br />    \"Encrypt\",<br />    \"Decrypt\",<br />    \"Sign\",<br />    \"Verify\",<br />    \"GetRotationPolicy\",<br />    \"SetRotationPolicy\"<br />  ]<br />}</p><br /><p>resource \"azurerm_key_vault_key\" \"example\" {<br />  name         = \"tfex-key\"<br />  key_vault_id = azurerm_key_vault.example.id<br />  key_type     = \"RSA\"<br />  key_size     = 2048<br />  key_opts = [<br />    \"decrypt\",<br />    \"encrypt\",<br />    \"sign\",<br />    \"unwrapKey\",<br />    \"verify\",<br />    \"wrapKey\"<br />  ]</p><br /><p>depends_on = [<br />    azurerm_key_vault_access_policy.client,<br />    azurerm_key_vault_access_policy.storage<br />  ]<br />}</p><br /><p>resource \"azurerm_storage_account\" \"example\" {<br />  name                     = \"examplestor\"<br />  resource_group_name      = azurerm_resource_group.example.name<br />  location                 = azurerm_resource_group.example.location<br />  account_tier             = \"Standard\"<br />  account_replication_type = \"GRS\"</p><br /><p>identity {<br />    type = \"SystemAssigned\"<br />  }</p><br /><p>lifecycle {<br />    ignore_changes = [<br />      customer_managed_key<br />    ]<br />  }<br />}</p><br /><p>resource \"azurerm_storage_account_customer_managed_key\" \"example\" {<br />  storage_account_id = azurerm_storage_account.example.id<br />  key_vault_id       = azurerm_key_vault.example.id<br />  key_name           = azurerm_key_vault_key.example.name<br />}</p><br />", "argument-reference": "<h2 id=\"argument-reference\">Argument Reference</h2><p>The following arguments are supported:</p><ul><li><p><code>storage_account_id</code> - (Required) The ID of the Storage Account. Changing this forces a new resource to be created.</p></li><li><p><code>key_vault_id</code> - (Required) The ID of the Key Vault. </p></li><li><p><code>key_name</code> - (Required) The name of Key Vault Key.</p></li><li><p><code>key_version</code> - (Optional) The version of Key Vault Key. Remove or omit this argument to enable Automatic Key Rotation.</p></li><li><p><code>user_assigned_identity_id</code> - (Optional) The ID of a user assigned identity.</p></li></ul>", "attributes-reference": "<h2 id=\"attributes-reference\">Attributes Reference</h2><p>In addition to the Arguments listed above - the following Attributes are exported:</p><ul><li><code>id</code> - The ID of the Storage Account.</li></ul><hr />", "timeouts": "<h2 id=\"timeouts\">Timeouts</h2><p>The <code>timeouts</code> block allows you to specify <a href=\"https://www.terraform.io/language/resources/syntax#operation-timeouts\">timeouts</a> for certain actions:</p><ul><li><code>create</code> - (Defaults to 30 minutes) Used when creating the Storage Account Customer Managed Keys.</li><li><code>update</code> - (Defaults to 30 minutes) Used when updating the Storage Account Customer Managed Keys.</li><li><code>read</code> - (Defaults to 5 minutes) Used when retrieving the Storage Account Customer Managed Keys.</li><li><code>delete</code> - (Defaults to 30 minutes) Used when deleting the Storage Account Customer Managed Keys.</li></ul>", "import": "<h2 id=\"import\">Import</h2><p>Customer Managed Keys for a Storage Account can be imported using the <code>resource id</code> of the Storage Account, e.g.</p><p>shell<br />terraform import azurerm_storage_account_customer_managed_key.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myresourcegroup/providers/Microsoft.Storage/storageAccounts/myaccount</p>", "description": "<h1 id=\"azurerm_storage_account_customer_managed_key\">azurerm_storage_account_customer_managed_key</h1><p>Manages a Customer Managed Key for a Storage Account.</p><p>~&gt; <strong>NOTE:</strong> It's possible to define a Customer Managed Key both within <a href=\"storage_account.html\">the <code>azurerm_storage_account</code> resource</a> via the <code>customer_managed_key</code> block and by using <a href=\"storage_account_customer_managed_key.html\">the <code>azurerm_storage_account_customer_managed_key</code> resource</a>. However it's not possible to use both methods to manage a Customer Managed Key for a Storage Account, since there'll be conflicts.</p>"}