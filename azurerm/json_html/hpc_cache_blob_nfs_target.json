{"azurerm-hpc-cache-blob-nfs-target": "<h1 id=\"azurerm_hpc_cache_blob_nfs_target\">azurerm_hpc_cache_blob_nfs_target</h1><p>Manages a Blob NFSv3 Target within a HPC Cache.</p><p>~&gt; <strong>NOTE:</strong>: By request of the service team the provider no longer automatically registering the <code>Microsoft.StorageCache</code> Resource Provider for this resource. To register it you can run <code>az provider register --namespace 'Microsoft.StorageCache'</code>.</p><p>~&gt; <strong>NOTE:</strong>: This resource depends on the NFSv3 enabled Storage Account, which has some prerequisites need to meet. Please checkout: <a href=\"https://docs.microsoft.com/azure/storage/blobs/network-file-system-protocol-support-how-to?tabs=azure-powershell\">https://docs.microsoft.com/azure/storage/blobs/network-file-system-protocol-support-how-to?tabs=azure-powershell</a>.</p>", "example-usage": "<h2 id=\"example-usage\">Example Usage</h2><p><br />provider \"azurerm\" {<br />  features {}<br />}</p><p>provider \"azuread\" {}</p><p>resource \"azurerm_resource_group\" \"example\" {<br />  name     = \"example-rg\"<br />  location = \"west europe\"<br />}</p><p>resource \"azurerm_virtual_network\" \"example\" {<br />  name                = \"example-vnet\"<br />  address_space       = [\"10.0.0.0/16\"]<br />  location            = azurerm_resource_group.example.location<br />  resource_group_name = azurerm_resource_group.example.name<br />}</p><p>resource \"azurerm_subnet\" \"example\" {<br />  name                 = \"example-subnet\"<br />  resource_group_name  = azurerm_resource_group.example.name<br />  virtual_network_name = azurerm_virtual_network.example.name<br />  address_prefixes     = [\"10.0.2.0/24\"]<br />  service_endpoints    = [\"Microsoft.Storage\"]<br />}</p><p>data \"azuread_service_principal\" \"example\" {<br />  display_name = \"HPC Cache Resource Provider\"<br />}</p><p>resource \"azurerm_storage_account\" \"example\" {<br />  name                      = \"examplestorageaccount\"<br />  resource_group_name       = azurerm_resource_group.example.name<br />  location                  = azurerm_resource_group.example.location<br />  account_tier              = \"Standard\"<br />  account_kind              = \"StorageV2\"<br />  account_replication_type  = \"LRS\"<br />  is_hns_enabled            = true<br />  nfsv3_enabled             = true<br />  enable_https_traffic_only = false<br />  network_rules {<br />    default_action             = \"Deny\"<br />    virtual_network_subnet_ids = [azurerm_subnet.example.id]<br />  }<br />}</p>", "due-to-https-github-com-hashicorp-terraform-provider-azurerm-issues-2977-and-the-fact": "<h1 id=\"due-to-httpsgithubcomhashicorpterraform-provider-azurermissues2977-and-the-fact\">Due to https://github.com/hashicorp/terraform-provider-azurerm/issues/2977 and the fact</h1>", "that-the-nfsv3-enabled-storage-account-can-t-allow-public-network-access---otherwise-the-nfsv3-protocol-will-fail": "<h1 id=\"that-the-nfsv3-enabled-storage-account-cant-allow-public-network-access-otherwise-the-nfsv3-protocol-will-fail\">that the NFSv3 enabled storage account can't allow public network access - otherwise the NFSv3 protocol will fail,</h1>", "we-have-to-use-the-arm-template-to-deploy-the-storage-container-as-a-workaround": "<h1 id=\"we-have-to-use-the-arm-template-to-deploy-the-storage-container-as-a-workaround\">we have to use the ARM template to deploy the storage container as a workaround.</h1>", "once-the-issue-above-got-resolved-we-can-instead-use-the-azurerm-storage-container-resource": "<h1 id=\"once-the-issue-above-got-resolved-we-can-instead-use-the-azurerm_storage_container-resource\">Once the issue above got resolved, we can instead use the azurerm_storage_container resource.</h1><p>resource \"azurerm_resource_group_template_deployment\" \"storage-containers\" {<br />  name                = \"example-deployment\"<br />  resource_group_name = azurerm_storage_account.example.resource_group_name<br />  deployment_mode     = \"Incremental\"</p><p>parameters_content = jsonencode({<br />    location = {<br />      value = azurerm_storage_account.example.location<br />    },<br />    storageAccountName = {<br />      value = azurerm_storage_account.example.name<br />    },<br />    containerName = {<br />      value = \"example-container\"<br />    }<br />  })</p><p>template_content = &lt;&lt;EOF<br />{<br />  \"$schema\": \"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#\",<br />  \"contentVersion\": \"1.0.0.0\",<br />  \"parameters\": {<br />    \"storageAccountName\": {<br />      \"type\": \"String\"<br />    },<br />    \"containerName\": {<br />      \"type\": \"String\"<br />    },<br />    \"location\": {<br />      \"type\": \"String\"<br />    }<br />  },<br />  \"resources\": [<br />    {<br />      \"type\": \"Microsoft.Storage/storageAccounts\",<br />      \"apiVersion\": \"2019-06-01\",<br />      \"name\": \"[parameters('storageAccountName')]\",<br />      \"location\": \"[parameters('location')]\",<br />      \"sku\": {<br />        \"name\": \"Standard_LRS\",<br />        \"tier\": \"Standard\"<br />      },<br />      \"kind\": \"StorageV2\",<br />      \"properties\": {<br />        \"accessTier\": \"Hot\"<br />      },<br />      \"resources\": [<br />        {<br />          \"type\": \"blobServices/containers\",<br />          \"apiVersion\": \"2019-06-01\",<br />          \"name\": \"[concat('default/', parameters('containerName'))]\",<br />          \"dependsOn\": [<br />            \"[parameters('storageAccountName')]\"<br />          ]<br />        }<br />      ]<br />    }<br />  ],</p><p>\"outputs\": {<br />    \"id\": {<br />      \"type\": \"String\",<br />      \"value\": \"[resourceId('Microsoft.Storage/storageAccounts/blobServices/containers', parameters('storageAccountName'), 'default', parameters('containerName'))]\"<br />    }<br />  }<br />}<br />EOF<br />}</p><p>resource \"azurerm_role_assignment\" \"example_storage_account_contrib\" {<br />  scope                = azurerm_storage_account.example.id<br />  role_definition_name = \"Storage Account Contributor\"<br />  principal_id         = data.azuread_service_principal.example.object_id<br />}</p><p>resource \"azurerm_role_assignment\" \"example_storage_blob_data_contrib\" {<br />  scope                = azurerm_storage_account.example.id<br />  role_definition_name = \"Storage Blob Data Contributor\"<br />  principal_id         = data.azuread_service_principal.example.object_id<br />}</p><p>resource \"azurerm_hpc_cache\" \"example\" {<br />  name                = \"example-hpc-cache\"<br />  resource_group_name = azurerm_resource_group.example.name<br />  location            = azurerm_resource_group.example.location<br />  cache_size_in_gb    = 3072<br />  subnet_id           = azurerm_subnet.example.id<br />  sku_name            = \"Standard_2G\"<br />}</p><p>resource \"azurerm_hpc_cache_blob_nfs_target\" \"example\" {<br />  name                 = \"example-hpc-target\"<br />  resource_group_name  = azurerm_resource_group.example.name<br />  cache_name           = azurerm_hpc_cache.example.name<br />  storage_container_id = jsondecode(azurerm_resource_group_template_deployment.storage-containers.output_content).id.value<br />  namespace_path       = \"/p1\"<br />  usage_model          = \"READ_HEAVY_INFREQ\"<br />}<br /></p>", "arguments-reference": "<h2 id=\"arguments-reference\">Arguments Reference</h2><p>The following arguments are supported:</p><ul><li><p><code>cache_name</code> - (Required) The name of the HPC Cache, which the HPC Cache Blob NFS Target will be added to. Changing this forces a new HPC Cache Blob NFS Target to be created.</p></li><li><p><code>name</code> - (Required) The name which should be used for this HPC Cache Blob NFS Target. Changing this forces a new HPC Cache Blob NFS Target to be created.</p></li><li><p><code>namespace_path</code> - (Required) The client-facing file path of the HPC Cache Blob NFS Target.</p></li><li><p><code>resource_group_name</code> - (Required) The name of the Resource Group where the HPC Cache Blob NFS Target should exist. Changing this forces a new HPC Cache Blob NFS Target to be created.</p></li><li><p><code>storage_container_id</code> - (Required) The Resource Manager ID of the Storage Container used as the HPC Cache Blob NFS Target. Changing this forces a new resource to be created.</p></li></ul><p>-&gt; <strong>Note:</strong> This is the Resource Manager ID of the Storage Container, rather than the regular ID - and can be accessed on the <code>azurerm_storage_container</code> Data Source/Resource as <code>resource_manager_id</code>.</p><ul><li><code>usage_model</code> - (Required) The type of usage of the HPC Cache Blob NFS Target. Possible values are: <code>READ_HEAVY_INFREQ</code>, <code>READ_HEAVY_CHECK_180</code>, <code>READ_ONLY</code>, <code>READ_WRITE</code>, <code>WRITE_WORKLOAD_15</code>, <code>WRITE_AROUND</code>, <code>WRITE_WORKLOAD_CHECK_30</code>, <code>WRITE_WORKLOAD_CHECK_60</code> and <code>WRITE_WORKLOAD_CLOUDWS</code>.</li></ul><hr /><ul><li><code>access_policy_name</code> - (Optional) The name of the access policy applied to this target. Defaults to <code>default</code>.</li></ul>", "attributes-reference": "<h2 id=\"attributes-reference\">Attributes Reference</h2><p>In addition to the Arguments listed above - the following Attributes are exported:</p><ul><li><code>id</code> - The ID of the HPC Cache Blob NFS Target.</li></ul>", "timeouts": "<h2 id=\"timeouts\">Timeouts</h2><p>The <code>timeouts</code> block allows you to specify <a href=\"https://www.terraform.io/language/resources/syntax#operation-timeouts\">timeouts</a> for certain actions:</p><ul><li><code>create</code> - (Defaults to 30 minutes) Used when creating the HPC Cache Blob NFS Target.</li><li><code>read</code> - (Defaults to 5 minutes) Used when retrieving the HPC Cache Blob NFS Target.</li><li><code>update</code> - (Defaults to 30 minutes) Used when updating the HPC Cache Blob NFS Target.</li><li><code>delete</code> - (Defaults to 30 minutes) Used when deleting the HPC Cache Blob NFS Target.</li></ul>", "import": "<h2 id=\"import\">Import</h2><p>HPC Cache Blob NFS Targets can be imported using the <code>resource id</code>, e.g.</p><p><code>shellterraform import azurerm_hpc_cache_blob_nfs_target.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.StorageCache/caches/cache1/storageTargets/target1</code></p>", "description": "<h1 id=\"azurerm_hpc_cache_blob_nfs_target\">azurerm_hpc_cache_blob_nfs_target</h1><p>Manages a Blob NFSv3 Target within a HPC Cache.</p><p>~&gt; <strong>NOTE:</strong>: By request of the service team the provider no longer automatically registering the <code>Microsoft.StorageCache</code> Resource Provider for this resource. To register it you can run <code>az provider register --namespace 'Microsoft.StorageCache'</code>.</p><p>~&gt; <strong>NOTE:</strong>: This resource depends on the NFSv3 enabled Storage Account, which has some prerequisites need to meet. Please checkout: <a href=\"https://docs.microsoft.com/azure/storage/blobs/network-file-system-protocol-support-how-to?tabs=azure-powershell\">https://docs.microsoft.com/azure/storage/blobs/network-file-system-protocol-support-how-to?tabs=azure-powershell</a>.</p>"}