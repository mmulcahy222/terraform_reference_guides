{"azurerm-key-vault-access-policy": "<h1 id=\"azurerm_key_vault_access_policy\">azurerm_key_vault_access_policy</h1><p>Manages a Key Vault Access Policy.</p><p>~&gt; <strong>NOTE:</strong> It's possible to define Key Vault Access Policies both within <a href=\"key_vault.html\">the <code>azurerm_key_vault</code> resource</a> via the <code>access_policy</code> block and by using <a href=\"key_vault_access_policy.html\">the <code>azurerm_key_vault_access_policy</code> resource</a>. However it's not possible to use both methods to manage Access Policies within a KeyVault, since there'll be conflicts.</p><p>-&gt; <strong>NOTE:</strong> Azure permits a maximum of 1024 Access Policies per Key Vault - <a href=\"https://docs.microsoft.com/azure/key-vault/key-vault-secure-your-key-vault#data-plane-access-control\">more information can be found in this document</a>.</p>", "example-usage": "<h2 id=\"example-usage\">Example Usage</h2><p>data \"azurerm_client_config\" \"current\" {}</p><br /><p>resource \"azurerm_resource_group\" \"example\" {<br />  name     = \"example-resources\"<br />  location = \"West Europe\"<br />}</p><br /><p>resource \"azurerm_key_vault\" \"example\" {<br />  name                = \"examplekeyvault\"<br />  location            = azurerm_resource_group.example.location<br />  resource_group_name = azurerm_resource_group.example.name<br />  tenant_id           = data.azurerm_client_config.current.tenant_id<br />  sku_name            = \"premium\"<br />}</p><br /><p>resource \"azurerm_key_vault_access_policy\" \"example\" {<br />  key_vault_id = azurerm_key_vault.example.id<br />  tenant_id    = data.azurerm_client_config.current.tenant_id<br />  object_id    = data.azurerm_client_config.current.object_id</p><br /><p>key_permissions = [<br />    \"Get\",<br />  ]</p><br /><p>secret_permissions = [<br />    \"Get\",<br />  ]<br />}</p><br /><p>data \"azuread_service_principal\" \"example\" {<br />  display_name = \"example-app\"<br />}</p><br /><p>resource \"azurerm_key_vault_access_policy\" \"example-principal\" {<br />  key_vault_id = azurerm_key_vault.example.id<br />  tenant_id    = data.azurerm_client_config.current.tenant_id<br />  object_id    = data.azuread_service_principal.example.object_id</p><br /><p>key_permissions = [<br />    \"Get\", \"List\", \"Encrypt\", \"Decrypt\"<br />  ]<br />}</p><br />", "argument-reference": "<h2 id=\"argument-reference\">Argument Reference</h2><p>The following arguments are supported:</p><ul><li><p><code>key_vault_id</code> - (Required) Specifies the id of the Key Vault resource. Changing this forces a new resource to be created.</p></li><li><p><code>tenant_id</code> - (Required) The Azure Active Directory tenant ID that should be used for authenticating requests to the key vault. Changing this forces a new resource to be created.</p></li><li><p><code>object_id</code> - (Required) The object ID of a user, service principal or security group in the Azure Active Directory tenant for the vault. The object ID of a service principal can be fetched from  <code>azuread_service_principal.object_id</code>. The object ID must be unique for the list of access policies. Changing this forces a new resource to be created.</p></li><li><p><code>application_id</code> - (Optional) The object ID of an Application in Azure Active Directory. Changing this forces a new resource to be created.</p></li><li><p><code>certificate_permissions</code> - (Optional) List of certificate permissions, must be one or more from the following: <code>Backup</code>, <code>Create</code>, <code>Delete</code>, <code>DeleteIssuers</code>, <code>Get</code>, <code>GetIssuers</code>, <code>Import</code>, <code>List</code>, <code>ListIssuers</code>, <code>ManageContacts</code>, <code>ManageIssuers</code>, <code>Purge</code>, <code>Recover</code>, <code>Restore</code>, <code>SetIssuers</code> and <code>Update</code>.</p></li><li><p><code>key_permissions</code> - (Optional) List of key permissions, must be one or more from the following: <code>Backup</code>, <code>Create</code>, <code>Decrypt</code>, <code>Delete</code>, <code>Encrypt</code>, <code>Get</code>, <code>Import</code>, <code>List</code>, <code>Purge</code>, <code>Recover</code>, <code>Restore</code>, <code>Sign</code>, <code>UnwrapKey</code>, <code>Update</code>, <code>Verify</code>, <code>WrapKey</code>, <code>Release</code>, <code>Rotate</code>, <code>GetRotationPolicy</code> and <code>SetRotationPolicy</code>.</p></li><li><p><code>secret_permissions</code> - (Optional) List of secret permissions, must be one or more from the following: <code>Backup</code>, <code>Delete</code>, <code>Get</code>, <code>List</code>, <code>Purge</code>, <code>Recover</code>, <code>Restore</code> and <code>Set</code>.</p></li><li><p><code>storage_permissions</code> - (Optional) List of storage permissions, must be one or more from the following: <code>Backup</code>, <code>Delete</code>, <code>DeleteSAS</code>, <code>Get</code>, <code>GetSAS</code>, <code>List</code>, <code>ListSAS</code>, <code>Purge</code>, <code>Recover</code>, <code>RegenerateKey</code>, <code>Restore</code>, <code>Set</code>, <code>SetSAS</code> and <code>Update</code>.</p></li></ul>", "attributes-reference": "<h2 id=\"attributes-reference\">Attributes Reference</h2><p>In addition to the Arguments listed above - the following Attributes are exported:</p><ul><li><code>id</code> - Key Vault Access Policy ID.</li></ul><p>-&gt; <strong>NOTE:</strong> This Identifier is unique to Terraform and doesn't map to an existing object within Azure.</p>", "timeouts": "<h2 id=\"timeouts\">Timeouts</h2><p>The <code>timeouts</code> block allows you to specify <a href=\"https://www.terraform.io/language/resources/syntax#operation-timeouts\">timeouts</a> for certain actions:</p><ul><li><code>create</code> - (Defaults to 30 minutes) Used when creating the Key Vault Access Policy.</li><li><code>update</code> - (Defaults to 30 minutes) Used when updating the Key Vault Access Policy.</li><li><code>read</code> - (Defaults to 5 minutes) Used when retrieving the Key Vault Access Policy.</li><li><code>delete</code> - (Defaults to 30 minutes) Used when deleting the Key Vault Access Policy.</li></ul>", "import": "<h2 id=\"import\">Import</h2><p>Key Vault Access Policies can be imported using the Resource ID of the Key Vault, plus some additional metadata.</p><p>If both an <code>object_id</code> and <code>application_id</code> are specified, then the Access Policy can be imported using the following code:</p><p>shell<br />terraform import azurerm_key_vault_access_policy.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.KeyVault/vaults/test-vault/objectId/11111111-1111-1111-1111-111111111111/applicationId/22222222-2222-2222-2222-222222222222</p><p>where <code>11111111-1111-1111-1111-111111111111</code> is the <code>object_id</code> and <code>22222222-2222-2222-2222-222222222222</code> is the <code>application_id</code>.</p><hr /><p>Access Policies with an <code>object_id</code> but no <code>application_id</code> can be imported using the following command:</p><p>shell<br />terraform import azurerm_key_vault_access_policy.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.KeyVault/vaults/test-vault/objectId/11111111-1111-1111-1111-111111111111</p><p>where <code>11111111-1111-1111-1111-111111111111</code> is the <code>object_id</code>.</p><p>-&gt; <strong>NOTE:</strong> Both Identifiers are unique to Terraform and don't map to an existing object within Azure.</p>", "description": "<h1 id=\"azurerm_key_vault_access_policy\">azurerm_key_vault_access_policy</h1><p>Manages a Key Vault Access Policy.</p><p>~&gt; <strong>NOTE:</strong> It's possible to define Key Vault Access Policies both within <a href=\"key_vault.html\">the <code>azurerm_key_vault</code> resource</a> via the <code>access_policy</code> block and by using <a href=\"key_vault_access_policy.html\">the <code>azurerm_key_vault_access_policy</code> resource</a>. However it's not possible to use both methods to manage Access Policies within a KeyVault, since there'll be conflicts.</p><p>-&gt; <strong>NOTE:</strong> Azure permits a maximum of 1024 Access Policies per Key Vault - <a href=\"https://docs.microsoft.com/azure/key-vault/key-vault-secure-your-key-vault#data-plane-access-control\">more information can be found in this document</a>.</p>"}