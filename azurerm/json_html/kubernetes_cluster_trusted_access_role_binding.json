{"azurerm-kubernetes-cluster-trusted-access-role-binding": "<h1 id=\"azurerm_kubernetes_cluster_trusted_access_role_binding\">azurerm_kubernetes_cluster_trusted_access_role_binding</h1><p>Manages a Kubernetes Cluster Trusted Access Role Binding<br />~&gt; <strong>Note:</strong> This Resource is in <strong>Preview</strong> to use this you must be opted into the Preview. You can do this by running <code>az feature register --namespace Microsoft.ContainerService --name TrustedAccessPreview</code> and then <code>az provider register -n Microsoft.ContainerService</code><br />.</p>", "example-usage": "<h2 id=\"example-usage\">Example Usage</h2><p>resource \"azurerm_application_insights\" \"example\" {<br />  name                = \"example\"<br />  location            = azurerm_resource_group.example.location<br />  resource_group_name = azurerm_resource_group.example.name<br />  application_type    = \"example-value\"<br />}<br />data \"azurerm_client_config\" \"test\" {}<br />resource \"azurerm_key_vault\" \"example\" {<br />  name                       = \"example\"<br />  location                   = azurerm_resource_group.example.location<br />  resource_group_name        = azurerm_resource_group.example.name<br />  tenant_id                  = data.azurerm_client_config.example.tenant_id<br />  sku_name                   = \"example-value\"<br />  soft_delete_retention_days = \"example-value\"<br />}<br />resource \"azurerm_key_vault_access_policy\" \"example\" {<br />  key_vault_id    = azurerm_key_vault.example.id<br />  tenant_id       = data.azurerm_client_config.example.tenant_id<br />  object_id       = data.azurerm_client_config.example.object_id<br />  key_permissions = \"example-value\"<br />}<br />resource \"azurerm_kubernetes_cluster\" \"example\" {<br />  name                = \"example\"<br />  location            = azurerm_resource_group.example.location<br />  resource_group_name = azurerm_resource_group.example.name<br />  dns_prefix          = \"acctestaksexample\"<br />  default_node_pool {<br />    name       = \"example-value\"<br />    node_count = \"example-value\"<br />    vm_size    = \"example-value\"<br />  }<br />  identity {<br />    type = \"example-value\"<br />  }<br />}<br />resource \"azurerm_machine_learning_workspace\" \"example\" {<br />  name                    = \"example\"<br />  location                = azurerm_resource_group.example.location<br />  resource_group_name     = azurerm_resource_group.example.name<br />  key_vault_id            = azurerm_key_vault.example.id<br />  storage_account_id      = azurerm_storage_account.example.id<br />  application_insights_id = azurerm_application_insights.example.id<br />  identity {<br />    type = \"example-value\"<br />  }<br />}<br />resource \"azurerm_resource_group\" \"example\" {<br />  name     = \"example-resources\"<br />  location = \"West Europe\"<br />}<br />resource \"azurerm_storage_account\" \"example\" {<br />  name                     = \"example\"<br />  location                 = azurerm_resource_group.example.location<br />  resource_group_name      = azurerm_resource_group.example.name<br />  account_tier             = \"example-value\"<br />  account_replication_type = \"example-value\"<br />}<br />resource \"azurerm_kubernetes_cluster_trusted_access_role_binding\" \"example\" {<br />  kubernetes_cluster_id = azurerm_kubernetes_cluster.example.id<br />  name                  = \"example\"<br />  roles                 = \"example-value\"<br />  source_resource_id    = azurerm_machine_learning_workspace.example.id<br />}</p><br />", "arguments-reference": "<h2 id=\"arguments-reference\">Arguments Reference</h2><p>The following arguments are supported:</p><ul><li><p><code>kubernetes_cluster_id</code> - (Required) Specifies the Kubernetes Cluster Id within which this Kubernetes Cluster Trusted Access Role Binding should exist. Changing this forces a new Kubernetes Cluster Trusted Access Role Binding to be created.</p></li><li><p><code>name</code> - (Required) Specifies the name of this Kubernetes Cluster Trusted Access Role Binding. Changing this forces a new Kubernetes Cluster Trusted Access Role Binding to be created.</p></li><li><p><code>roles</code> - (Required) A list of roles to bind, each item is a resource type qualified role name.</p></li><li><p><code>source_resource_id</code> - (Required) The ARM resource ID of source resource that trusted access is configured for. Changing this forces a new Kubernetes Cluster Trusted Access Role Binding to be created.</p></li></ul>", "attributes-reference": "<h2 id=\"attributes-reference\">Attributes Reference</h2><p>In addition to the Arguments listed above - the following Attributes are exported:</p><ul><li><code>id</code> - The ID of the Kubernetes Cluster Trusted Access Role Binding.</li></ul><hr />", "timeouts": "<h2 id=\"timeouts\">Timeouts</h2><p>The <code>timeouts</code> block allows you to specify <a href=\"https://www.terraform.io/docs/configuration/resources.html#timeouts\">timeouts</a> for certain actions:</p><ul><li><code>create</code> - (Defaults to 30 minutes) Used when creating this Kubernetes Cluster Trusted Access Role Binding.</li><li><code>delete</code> - (Defaults to 30 minutes) Used when deleting this Kubernetes Cluster Trusted Access Role Binding.</li><li><code>read</code> - (Defaults to 5 minutes) Used when retrieving this Kubernetes Cluster Trusted Access Role Binding.</li><li><code>update</code> - (Defaults to 30 minutes) Used when updating this Kubernetes Cluster Trusted Access Role Binding.</li></ul>", "import": "<h2 id=\"import\">Import</h2><p>An existing Kubernetes Cluster Trusted Access Role Binding can be imported into Terraform using the <code>resource id</code>, e.g.</p><p>shell<br />terraform import azurerm_kubernetes_cluster_trusted_access_role_binding.example /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{managedClusterName}/trustedAccessRoleBindings/{trustedAccessRoleBindingName}</p><ul><li>Where <code>{subscriptionId}</code> is the ID of the Azure Subscription where the Kubernetes Cluster Trusted Access Role Binding exists. For example <code>12345678-1234-9876-4563-123456789012</code>.</li><li>Where <code>{resourceGroupName}</code> is the name of Resource Group where this Kubernetes Cluster Trusted Access Role Binding exists. For example <code>example-resource-group</code>.</li><li>Where <code>{managedClusterName}</code> is the name of the Managed Cluster. For example <code>managedClusterValue</code>.</li><li>Where <code>{trustedAccessRoleBindingName}</code> is the name of the Trusted Access Role Binding. For example <code>trustedAccessRoleBindingValue</code>.</li></ul>", "description": "<h1 id=\"azurerm_kubernetes_cluster_trusted_access_role_binding\">azurerm_kubernetes_cluster_trusted_access_role_binding</h1><p>Manages a Kubernetes Cluster Trusted Access Role Binding<br />~&gt; <strong>Note:</strong> This Resource is in <strong>Preview</strong> to use this you must be opted into the Preview. You can do this by running <code>az feature register --namespace Microsoft.ContainerService --name TrustedAccessPreview</code> and then <code>az provider register -n Microsoft.ContainerService</code><br />.</p>"}