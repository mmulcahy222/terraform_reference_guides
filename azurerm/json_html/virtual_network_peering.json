{"azurerm-virtual-network-peering": "<h1 id=\"azurerm_virtual_network_peering\">azurerm_virtual_network_peering</h1><p>Manages a virtual network peering which allows resources to access other<br />resources in the linked virtual network.</p>", "example-usage": "<h2 id=\"example-usage\">Example Usage</h2><p><br />resource \"azurerm_resource_group\" \"example\" {<br />  name     = \"peeredvnets-rg\"<br />  location = \"West Europe\"<br />}</p><p>resource \"azurerm_virtual_network\" \"example-1\" {<br />  name                = \"peternetwork1\"<br />  resource_group_name = azurerm_resource_group.example.name<br />  address_space       = [\"10.0.1.0/24\"]<br />  location            = azurerm_resource_group.example.location<br />}</p><p>resource \"azurerm_virtual_network\" \"example-2\" {<br />  name                = \"peternetwork2\"<br />  resource_group_name = azurerm_resource_group.example.name<br />  address_space       = [\"10.0.2.0/24\"]<br />  location            = azurerm_resource_group.example.location<br />}</p><p>resource \"azurerm_virtual_network_peering\" \"example-1\" {<br />  name                      = \"peer1to2\"<br />  resource_group_name       = azurerm_resource_group.example.name<br />  virtual_network_name      = azurerm_virtual_network.example-1.name<br />  remote_virtual_network_id = azurerm_virtual_network.example-2.id<br />}</p><p>resource \"azurerm_virtual_network_peering\" \"example-2\" {<br />  name                      = \"peer2to1\"<br />  resource_group_name       = azurerm_resource_group.example.name<br />  virtual_network_name      = azurerm_virtual_network.example-2.name<br />  remote_virtual_network_id = azurerm_virtual_network.example-1.id<br />}<br /></p>", "example-usage-global-virtual-network-peering": "<h2 id=\"example-usage-global-virtual-network-peering\">Example Usage (Global virtual network peering)</h2><p><br />variable \"location\" {<br />  default = [<br />    \"uksouth\",<br />    \"southeastasia\",<br />  ]<br />}</p><p>variable \"vnet_address_space\" {<br />  default = [<br />    \"10.0.0.0/16\",<br />    \"10.1.0.0/16\",<br />  ]<br />}</p><p>resource \"azurerm_resource_group\" \"example\" {<br />  count    = length(var.location)<br />  name     = \"rg-global-vnet-peering-${count.index}\"<br />  location = element(var.location, count.index)<br />}</p><p>resource \"azurerm_virtual_network\" \"vnet\" {<br />  count               = length(var.location)<br />  name                = \"vnet-${count.index}\"<br />  resource_group_name = element(azurerm_resource_group.example.<em>.name, count.index)<br />  address_space       = [element(var.vnet_address_space, count.index)]<br />  location            = element(azurerm_resource_group.example.</em>.location, count.index)<br />}</p><p>resource \"azurerm_subnet\" \"nva\" {<br />  count                = length(var.location)<br />  name                 = \"nva\"<br />  resource_group_name  = element(azurerm_resource_group.example.<em>.name, count.index)<br />  virtual_network_name = element(azurerm_virtual_network.vnet.</em>.name, count.index)<br />  address_prefix = cidrsubnet(<br />    element(<br />      azurerm_virtual_network.vnet[count.index].address_space,<br />      count.index,<br />    ),<br />    13,<br />    0,<br />  ) # /29<br />}</p>", "enable-global-peering-between-the-two-virtual-network": "<h1 id=\"enable-global-peering-between-the-two-virtual-network\">enable global peering between the two virtual network</h1><p>resource \"azurerm_virtual_network_peering\" \"peering\" {<br />  count                        = length(var.location)<br />  name                         = \"peering-to-${element(azurerm_virtual_network.vnet.<em>.name, 1 - count.index)}\"<br />  resource_group_name          = element(azurerm_resource_group.example.</em>.name, count.index)<br />  virtual_network_name         = element(azurerm_virtual_network.vnet.<em>.name, count.index)<br />  remote_virtual_network_id    = element(azurerm_virtual_network.vnet.</em>.id, 1 - count.index)<br />  allow_virtual_network_access = true<br />  allow_forwarded_traffic      = true</p><p># <code>allow_gateway_transit</code> must be set to false for vnet Global Peering<br />  allow_gateway_transit = false<br />}<br /></p>", "example-usage-triggers": "<h2 id=\"example-usage-triggers\">Example Usage (Triggers)</h2><p><br />resource \"azurerm_resource_group\" \"example\" {<br />  name     = \"peeredvnets-rg\"<br />  location = \"West Europe\"<br />}</p><p>resource \"azurerm_virtual_network\" \"example-1\" {<br />  name                = \"peternetwork1\"<br />  resource_group_name = azurerm_resource_group.example.name<br />  address_space       = [\"10.0.1.0/24\"]<br />  location            = azurerm_resource_group.example.location<br />}</p><p>resource \"azurerm_virtual_network\" \"example-2\" {<br />  name                = \"peternetwork2\"<br />  resource_group_name = azurerm_resource_group.example.name<br />  address_space       = [\"10.0.2.0/24\"]<br />  location            = azurerm_resource_group.example.location<br />}</p><p>resource \"azurerm_virtual_network_peering\" \"example-1\" {<br />  name                      = \"peer1to2\"<br />  resource_group_name       = azurerm_resource_group.example.name<br />  virtual_network_name      = azurerm_virtual_network.example-1.name<br />  remote_virtual_network_id = azurerm_virtual_network.example-2.id</p><p>triggers = {<br />    remote_address_space = join(\",\", azurerm_virtual_network.example-2.address_space)<br />  }<br />}</p><p>resource \"azurerm_virtual_network_peering\" \"example-2\" {<br />  name                      = \"peer2to1\"<br />  resource_group_name       = azurerm_resource_group.example.name<br />  virtual_network_name      = azurerm_virtual_network.example-2.name<br />  remote_virtual_network_id = azurerm_virtual_network.example-1.id</p><p>triggers = {<br />    remote_address_space = join(\",\", azurerm_virtual_network.example-1.address_space)<br />  }<br />}<br /></p>", "argument-reference": "<h2 id=\"argument-reference\">Argument Reference</h2><p>The following arguments are supported:</p><ul><li><p><code>name</code> - (Required) The name of the virtual network peering. Changing this forces a new resource to be created.</p></li><li><p><code>virtual_network_name</code> - (Required) The name of the virtual network. Changing this forces a new resource to be created.</p></li><li><p><code>remote_virtual_network_id</code> - (Required) The full Azure resource ID of the remote virtual network. Changing this forces a new resource to be created.</p></li><li><p><code>resource_group_name</code> - (Required) The name of the resource group in which to create the virtual network peering. Changing this forces a new resource to be created.</p></li><li><p><code>allow_virtual_network_access</code> - (Optional) Controls if the VMs in the remote virtual network can access VMs in the local virtual network. Defaults to <code>true</code>.</p></li><li><p><code>allow_forwarded_traffic</code> - (Optional) Controls if forwarded traffic from VMs in the remote virtual network is allowed. Defaults to <code>false</code>.</p></li><li><p><code>allow_gateway_transit</code> - (Optional) Controls gatewayLinks can be used in the remote virtual network\u2019s link to the local virtual network. Defaults to <code>false</code>.</p></li><li><p><code>use_remote_gateways</code> - (Optional) Controls if remote gateways can be used on the local virtual network. If the flag is set to <code>true</code>, and <code>allow_gateway_transit</code> on the remote peering is also <code>true</code>, virtual network will use gateways of remote virtual network for transit. Only one peering can have this flag set to <code>true</code>. This flag cannot be set if virtual network already has a gateway. Defaults to <code>false</code>.</p></li></ul><p>-&gt; <strong>NOTE:</strong> <code>use_remote_gateways</code> must be set to <code>false</code> if using Global Virtual Network Peerings.</p><ul><li><code>triggers</code> - (Optional) A mapping of key values pairs that can be used to sync network routes from the remote virtual network to the local virtual network. See <a href=\"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/virtual_network_peering#example-usage-triggers\">the trigger example</a> for an example on how to set it up.</li></ul>", "attributes-reference": "<h2 id=\"attributes-reference\">Attributes Reference</h2><p>In addition to the Arguments listed above - the following Attributes are exported:</p><ul><li><code>id</code> - The ID of the Virtual Network Peering.</li></ul>", "timeouts": "<h2 id=\"timeouts\">Timeouts</h2><p>The <code>timeouts</code> block allows you to specify <a href=\"https://www.terraform.io/language/resources/syntax#operation-timeouts\">timeouts</a> for certain actions:</p><ul><li><code>create</code> - (Defaults to 30 minutes) Used when creating the Virtual Network Peering.</li><li><code>update</code> - (Defaults to 30 minutes) Used when updating the Virtual Network Peering.</li><li><code>read</code> - (Defaults to 5 minutes) Used when retrieving the Virtual Network Peering.</li><li><code>delete</code> - (Defaults to 30 minutes) Used when deleting the Virtual Network Peering.</li></ul>", "note": "<h2 id=\"note\">Note</h2><p>Virtual Network peerings cannot be created, updated or deleted concurrently.</p>", "import": "<h2 id=\"import\">Import</h2><p>Virtual Network Peerings can be imported using the <code>resource id</code>, e.g.</p><p><code>shellterraform import azurerm_virtual_network_peering.examplePeering /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Network/virtualNetworks/myvnet1/virtualNetworkPeerings/myvnet1peering</code></p>", "description": "<h1 id=\"azurerm_virtual_network_peering\">azurerm_virtual_network_peering</h1><p>Manages a virtual network peering which allows resources to access other<br />resources in the linked virtual network.</p>"}