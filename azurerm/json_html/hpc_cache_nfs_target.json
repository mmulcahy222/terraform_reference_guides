{"azurerm-hpc-cache-nfs-target": "<h1 id=\"azurerm_hpc_cache_nfs_target\">azurerm_hpc_cache_nfs_target</h1><p>Manages a NFS Target within a HPC Cache.</p><p>~&gt; <strong>NOTE:</strong>: By request of the service team the provider no longer automatically registering the <code>Microsoft.StorageCache</code> Resource Provider for this resource. To register it you can run <code>az provider register --namespace 'Microsoft.StorageCache'</code>.</p>", "example-usage": "<h2 id=\"example-usage\">Example Usage</h2><p><br />resource \"azurerm_resource_group\" \"example\" {<br />  name     = \"example-resources\"<br />  location = \"West Europe\"<br />}</p><p>resource \"azurerm_virtual_network\" \"example\" {<br />  name                = \"examplevn\"<br />  address_space       = [\"10.0.0.0/16\"]<br />  location            = azurerm_resource_group.example.location<br />  resource_group_name = azurerm_resource_group.example.name<br />}</p><p>resource \"azurerm_subnet\" \"example_hpc\" {<br />  name                 = \"examplesubnethpc\"<br />  resource_group_name  = azurerm_resource_group.example.name<br />  virtual_network_name = azurerm_virtual_network.example.name<br />  address_prefixes     = [\"10.0.1.0/24\"]<br />}</p><p>resource \"azurerm_hpc_cache\" \"example\" {<br />  name                = \"examplehpccache\"<br />  resource_group_name = azurerm_resource_group.example.name<br />  location            = azurerm_resource_group.example.location<br />  cache_size_in_gb    = 3072<br />  subnet_id           = azurerm_subnet.example_hpc.id<br />  sku_name            = \"Standard_2G\"<br />}</p><p>resource \"azurerm_subnet\" \"example_vm\" {<br />  name                 = \"examplesubnetvm\"<br />  resource_group_name  = azurerm_resource_group.example.name<br />  virtual_network_name = azurerm_virtual_network.example.name<br />  address_prefixes     = [\"10.0.2.0/24\"]<br />}</p><p>resource \"azurerm_network_interface\" \"example\" {<br />  name                = \"examplenic\"<br />  location            = azurerm_resource_group.example.location<br />  resource_group_name = azurerm_resource_group.example.name</p><p>ip_configuration {<br />    name                          = \"internal\"<br />    subnet_id                     = azurerm_subnet.example_vm.id<br />    private_ip_address_allocation = \"Dynamic\"<br />  }<br />}</p><p>locals {<br />  custom_data = &lt;&lt;CUSTOM_DATA</p>", "bin-bash": "<h1 id=\"binbash\">!/bin/bash</h1><p>sudo -i <br />apt-get install -y nfs-kernel-server<br />mkdir -p /export/a/1<br />mkdir -p /export/a/2<br />mkdir -p /export/b<br />cat &lt;&lt; EOF &gt; /etc/exports<br />/export/a <em>(rw,fsid=0,insecure,no_subtree_check,async)<br />/export/b </em>(rw,fsid=0,insecure,no_subtree_check,async)<br />EOF<br />systemctl start nfs-server<br />exportfs -arv<br />CUSTOM_DATA<br />}</p><p>resource \"azurerm_linux_virtual_machine\" \"example\" {<br />  name                = \"examplevm\"<br />  resource_group_name = azurerm_resource_group.example.name<br />  location            = azurerm_resource_group.example.location<br />  size                = \"Standard_F2\"<br />  admin_username      = \"adminuser\"<br />  network_interface_ids = [<br />    azurerm_network_interface.example.id,<br />  ]</p><p>admin_ssh_key {<br />    username   = \"adminuser\"<br />    public_key = file(\"~/.ssh/id_rsa.pub\")<br />  }</p><p>os_disk {<br />    caching              = \"ReadWrite\"<br />    storage_account_type = \"Standard_LRS\"<br />  }</p><p>source_image_reference {<br />    publisher = \"Canonical\"<br />    offer     = \"UbuntuServer\"<br />    sku       = \"18.04-LTS\"<br />    version   = \"latest\"<br />  }</p><p>custom_data = base64encode(local.custom_data)<br />}</p><p>resource \"azurerm_hpc_cache_nfs_target\" \"example\" {<br />  name                = \"examplehpcnfstarget\"<br />  resource_group_name = azurerm_resource_group.example.name<br />  cache_name          = azurerm_hpc_cache.example.name<br />  target_host_name    = azurerm_linux_virtual_machine.example.private_ip_address<br />  usage_model         = \"READ_HEAVY_INFREQ\"<br />  namespace_junction {<br />    namespace_path = \"/nfs/a1\"<br />    nfs_export     = \"/export/a\"<br />    target_path    = \"1\"<br />  }<br />  namespace_junction {<br />    namespace_path = \"/nfs/b\"<br />    nfs_export     = \"/export/b\"<br />  }<br />}<br /></p>", "argument-reference": "<h2 id=\"argument-reference\">Argument Reference</h2><p>The following arguments are supported:</p><ul><li><p><code>name</code> - (Required) The name of the HPC Cache NFS Target. Changing this forces a new resource to be created.</p></li><li><p><code>resource_group_name</code> - (Required) The name of the Resource Group in which to create the HPC Cache NFS Target. Changing this forces a new resource to be created.</p></li><li><p><code>cache_name</code> - (Required) The name HPC Cache, which the HPC Cache NFS Target will be added to. Changing this forces a new resource to be created.</p></li><li><p><code>target_host_name</code> - (Required) The IP address or fully qualified domain name (FQDN) of the HPC Cache NFS target. Changing this forces a new resource to be created.</p></li><li><p><code>usage_model</code> - (Required) The type of usage of the HPC Cache NFS Target. Possible values are: <code>READ_HEAVY_INFREQ</code>, <code>READ_HEAVY_CHECK_180</code>, <code>READ_ONLY</code>, <code>READ_WRITE</code>, <code>WRITE_WORKLOAD_15</code>, <code>WRITE_AROUND</code>, <code>WRITE_WORKLOAD_CHECK_30</code>, <code>WRITE_WORKLOAD_CHECK_60</code> and <code>WRITE_WORKLOAD_CLOUDWS</code>.</p></li><li><p><code>namespace_junction</code> - (Required) Can be specified multiple times to define multiple <code>namespace_junction</code>. Each <code>namespace_juntion</code> block supports fields documented below.</p></li></ul><hr /><p>A <code>namespace_junction</code> block supports the following:</p><ul><li><p><code>namespace_path</code> - (Required) The client-facing file path of this NFS target within the HPC Cache NFS Target.</p></li><li><p><code>nfs_export</code> - (Required) The NFS export of this NFS target within the HPC Cache NFS Target.</p></li><li><p><code>target_path</code> - (Optional) The relative subdirectory path from the <code>nfs_export</code> to map to the <code>namespace_path</code>. Defaults to <code>\"\"</code>, in which case the whole <code>nfs_export</code> is exported.</p></li><li><p><code>access_policy_name</code> - (Optional) The name of the access policy applied to this target. Defaults to <code>default</code>.</p></li></ul>", "attributes-reference": "<h2 id=\"attributes-reference\">Attributes Reference</h2><p>In addition to the Arguments listed above - the following Attributes are exported:</p><ul><li><code>id</code> - The ID of the HPC Cache NFS Target.</li></ul>", "timeouts": "<h2 id=\"timeouts\">Timeouts</h2><p>The <code>timeouts</code> block allows you to specify <a href=\"https://www.terraform.io/language/resources/syntax#operation-timeouts\">timeouts</a> for certain actions:</p><ul><li><code>create</code> - (Defaults to 30 minutes) Used when creating the HPC Cache NFS Target.</li><li><code>read</code> - (Defaults to 5 minutes) Used when retrieving the HPC Cache NFS Target.</li><li><code>update</code> - (Defaults to 30 minutes) Used when updating the HPC Cache NFS Target.</li><li><code>delete</code> - (Defaults to 30 minutes) Used when deleting the HPC Cache NFS Target.</li></ul>", "import": "<h2 id=\"import\">Import</h2><p>NFS Target within a HPC Cache can be imported using the <code>resource id</code>, e.g.</p><p><code>shellterraform import azurerm_hpc_cache_nfs_target.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.StorageCache/caches/cache1/storageTargets/target1</code></p>", "description": "<h1 id=\"azurerm_hpc_cache_nfs_target\">azurerm_hpc_cache_nfs_target</h1><p>Manages a NFS Target within a HPC Cache.</p><p>~&gt; <strong>NOTE:</strong>: By request of the service team the provider no longer automatically registering the <code>Microsoft.StorageCache</code> Resource Provider for this resource. To register it you can run <code>az provider register --namespace 'Microsoft.StorageCache'</code>.</p>"}