{"google-composer-environment": "<h1 id=\"google_composer_environment\">google_composer_environment</h1><p>An environment for running orchestration tasks.</p><p>Environments run Apache Airflow software on Google infrastructure.</p><p>To get more information about Environments, see:</p><ul><li><a href=\"https://cloud.google.com/composer/docs\">Cloud Composer documentation</a></li><li><a href=\"https://cloud.google.com/composer/docs/reference/rest/v1beta1/projects.locations.environments\">Cloud Composer API documentation</a></li><li>How-to Guides (Cloud Composer 1)</li><li><a href=\"https://cloud.google.com/composer/docs/how-to/managing/creating\">Creating environments</a></li><li><a href=\"https://cloud.google.com/composer/docs/scale-environments\">Scaling environments</a></li><li><a href=\"https://cloud.google.com/composer/docs/how-to/managing/configuring-shared-vpc\">Configuring Shared VPC for Composer Environments</a></li><li>How-to Guides (Cloud Composer 2)</li><li><a href=\"https://cloud.google.com/composer/docs/composer-2/create-environments\">Creating environments</a></li><li><a href=\"https://cloud.google.com/composer/docs/composer-2/scale-environments\">Scaling environments</a></li><li><a href=\"https://cloud.google.com/composer/docs/composer-2/configure-shared-vpc\">Configuring Shared VPC for Composer Environments</a></li><li><a href=\"http://airflow.apache.org/\">Apache Airflow Documentation</a></li></ul><p>~&gt; <strong>Warning:</strong> We <strong>STRONGLY</strong> recommend you read the <a href=\"https://cloud.google.com/composer/docs/how-to\">GCP<br />guides</a> as the Environment resource requires a long<br />deployment process and involves several layers of GCP infrastructure, including a Kubernetes Engine<br />cluster, Cloud Storage, and Compute networking resources. Due to limitations of the API, Terraform<br />will not be able to automatically find or manage many of these underlying resources. In particular:* It can take up to one hour to create or update an environment resource. In addition, GCP may only<br />  detect some errors in configuration when they are used (e.g. ~40-50 minutes into the creation<br />  process), and is prone to limited error reporting. If you encounter confusing or uninformative<br />  errors, please verify your configuration is valid against GCP Cloud Composer before filing bugs<br />  against the Terraform provider. * <strong>Environments create Google Cloud Storage buckets that do not get<br />  cleaned up automatically</strong> on environment deletion. <a href=\"https://cloud.google.com/composer/docs/concepts/cloud-storage\">More about Composer's use of Cloud<br />  Storage</a>. * Please review the <a href=\"https://cloud.google.com/composer/docs/known-issues\">known<br />  issues</a> for Composer if you are having<br />  problems.</p>", "example-usage": "<h2 id=\"example-usage\">Example Usage</h2><h3 id=\"basic-usage-cloud-composer-1\">Basic Usage (Cloud Composer 1)</h3><br /><p>resource \"google_composer_environment\" \"test\" {<br />  name   = \"example-composer-env\"<br />  region = \"us-central1\"<br />}</p><br /><h3 id=\"basic-usage-cloud-composer-2\">Basic Usage (Cloud Composer 2)</h3><br /><p>resource \"google_composer_environment\" \"test\" {<br />  name   = \"example-composer-env\"<br />  region = \"us-central1\"<br /> config {<br />    software_config {<br />      image_version = \"composer-2-airflow-2\"<br />    }<br />  }<br />}</p><br /><h3 id=\"with-gke-and-compute-resource-dependencies\">With GKE and Compute Resource Dependencies</h3><br /><p><strong>NOTE</strong> To use custom service accounts, you need to give at least <code>role/composer.worker</code> to the service account being used by the GKE Nodes on the Composer project.<br />For more information, see the <a href=\"https://cloud.devsite.corp.google.com/composer/docs/how-to/access-control\">Access Control</a> page in the Cloud Composer documentation.<br />You may need to assign additional roles depending on what the Airflow DAGs will be running.</p><br /><p><strong>NOTE</strong> We STRONGLY recommend you read the <a href=\"https://cloud.google.com/composer/docs/how-to\">Cloud Composer guides</a><br />as the Environment<br />resource requires a long deployment process and involves several layers of<br />Google Cloud infrastructure, including a Kubernetes Engine cluster, Cloud<br />Storage, and Compute networking resources. Composer manages most of these<br />resources fully and as a result, Terraform may not be able to automatically<br />find or manage the underlying resources. In particular:<br />* It can take up to 50 minutes to create or update an environment resource and<br />some errors may be detected later in the process. Also, some error messages may<br />not be clear at first sight because they involve issues with the underlying<br />resources. If you encounter such errors, please review Composer logs and verify<br />if your configuration is valid against Cloud Composer before filing bugs<br />against the Terraform provider.<br />* Environments create Google Cloud Storage buckets that contain your DAGs and<br />other work files. These buckets do not get deleted automatically on environment<br />deletion. This is by design; it ensures that DAGs source code and other<br />valuable data don\u2019t get lost when an environment is deleted. <a href=\"https://cloud.google.com/composer/docs/concepts/cloud-storage\">More about<br />Composer's use of Cloud Storage</a>.<br />* Please review the <a href=\"https://cloud.google.com/composer/docs/known-issues\">known issues</a> for Cloud Composer if you are having problems.</p><br /><h4 id=\"gke-and-compute-resource-dependencies-cloud-composer-1\">GKE and Compute Resource Dependencies (Cloud Composer 1)</h4><br /><p>resource \"google_composer_environment\" \"test\" {<br />  name   = \"example-composer-env\"<br />  region = \"us-central1\"<br />  config {<br />    node_count = 4</p><br /><pre><code>node_config {<br />  zone         = \"us-central1-a\"<br />  machine_type = \"n1-standard-1\"<br /><br />  network    = google_compute_network.test.id<br />  subnetwork = google_compute_subnetwork.test.id<br /><br />  service_account = google_service_account.test.name<br />}<br /><br />database_config {<br />  machine_type = \"db-n1-standard-2\"<br />}<br /><br />web_server_config {<br />  machine_type = \"composer-n1-webserver-2\"<br />}<br /></code></pre><br /><p>}<br />}</p><br /><p>resource \"google_compute_network\" \"test\" {<br />  name                    = \"composer-test-network\"<br />  auto_create_subnetworks = false<br />}</p><br /><p>resource \"google_compute_subnetwork\" \"test\" {<br />  name          = \"composer-test-subnetwork\"<br />  ip_cidr_range = \"10.2.0.0/16\"<br />  region        = \"us-central1\"<br />  network       = google_compute_network.test.id<br />}</p><br /><p>resource \"google_service_account\" \"test\" {<br />  account_id   = \"composer-env-account\"<br />  display_name = \"Test Service Account for Composer Environment\"<br />}</p><br /><p>resource \"google_project_iam_member\" \"composer-worker\" {<br />  role   = \"roles/composer.worker\"<br />  member = \"serviceAccount:${google_service_account.test.email}\"<br />}</p><br /><h4 id=\"gke-and-compute-resource-dependencies-cloud-composer-2\">GKE and Compute Resource Dependencies (Cloud Composer 2)</h4><br /><p>provider \"google\" {<br />  project = \"bigdata-writers\"<br />}</p><br /><p>resource \"google_composer_environment\" \"test\" {<br />  name   = \"example-composer-env-tf-c2\"<br />  region = \"us-central1\"<br />  config {</p><br /><pre><code>software_config {<br />  image_version = \"composer-2-airflow-2\"<br />}<br /><br />workloads_config {<br />  scheduler {<br />    cpu        = 0.5<br />    memory_gb  = 1.875<br />    storage_gb = 1<br />    count      = 1<br />  }<br />  web_server {<br />    cpu        = 0.5<br />    memory_gb  = 1.875<br />    storage_gb = 1<br />  }<br />  worker {<br />    cpu = 0.5<br />    memory_gb  = 1.875<br />    storage_gb = 1<br />    min_count  = 1<br />    max_count  = 3<br />  }<br /><br /><br />}<br />environment_size = \"ENVIRONMENT_SIZE_SMALL\"<br /><br />node_config {<br />  network    = google_compute_network.test.id<br />  subnetwork = google_compute_subnetwork.test.id<br />  service_account = google_service_account.test.name<br />}<br /></code></pre><br /><p>}<br />}</p><br /><p>resource \"google_compute_network\" \"test\" {<br />  name                    = \"composer-test-network3\"<br />  auto_create_subnetworks = false<br />}</p><br /><p>resource \"google_compute_subnetwork\" \"test\" {<br />  name          = \"composer-test-subnetwork\"<br />  ip_cidr_range = \"10.2.0.0/16\"<br />  region        = \"us-central1\"<br />  network       = google_compute_network.test.id<br />}</p><br /><p>resource \"google_service_account\" \"test\" {<br />  account_id   = \"composer-env-account\"<br />  display_name = \"Test Service Account for Composer Environment\"<br />}</p><br /><p>resource \"google_project_iam_member\" \"composer-worker\" {<br />  project = \"your-project-id\"<br />  role    = \"roles/composer.worker\"<br />  member  = \"serviceAccount:${google_service_account.test.email}\"<br />}</p><br /><h3 id=\"with-software-airflow-config\">With Software (Airflow) Config</h3><br /><p>resource \"google_composer_environment\" \"test\" {<br />  name   = \"mycomposer\"<br />  region = \"us-central1\"</p><br /><p>config {<br />    software_config {<br />      scheduler_count = 2 // only in Composer 1 with Airflow 2, use workloads_config in Composer 2<br />      airflow_config_overrides = {<br />        core-dags_are_paused_at_creation = \"True\"<br />      }</p><br /><pre><code>  pypi_packages = {<br />    numpy = \"\"<br />    scipy = \"==1.1.0\"<br />  }<br /><br />  env_variables = {<br />    FOO = \"bar\"<br />  }<br />}<br /></code></pre><br /><p>}<br />}</p><br />", "argument-reference---cloud-composer-1": "<h2 id=\"argument-reference-cloud-composer-1\">Argument Reference - Cloud Composer 1</h2><p>The following arguments are supported:</p><ul><li><p><code>name</code> -<br />  (Required)<br />  Name of the environment</p></li><li><p><code>config</code> -<br />  (Optional)<br />  Configuration parameters for this environment  Structure is <a href=\"#nested_config\">documented below</a>.</p></li><li><p><code>labels</code> -<br />  (Optional)<br />  User-defined labels for this environment. The labels map can contain<br />  no more than 64 entries. Entries of the labels map are UTF8 strings<br />  that comply with the following restrictions:<br />  Label keys must be between 1 and 63 characters long and must conform<br />  to the following regular expression: <code>[a-z]([-a-z0-9]*[a-z0-9])?</code>.<br />  Label values must be between 0 and 63 characters long and must<br />  conform to the regular expression <code>([a-z]([-a-z0-9]*[a-z0-9])?)?</code>.<br />  No more than 64 labels can be associated with a given environment.<br />  Both keys and values must be &lt;= 128 bytes in size.</p></li><li><p><code>region</code> -<br />  (Optional)<br />  The location or Compute Engine region for the environment.</p></li><li><p><code>project</code> -<br />  (Optional) The ID of the project in which the resource belongs.<br />  If it is not provided, the provider project is used.</p></li></ul><p><a name=\"nested_config\"></a>The <code>config</code> block supports:</p><ul><li><p><code>node_count</code> -<br />  (Optional, Cloud Composer 1 only)<br />  The number of nodes in the Kubernetes Engine cluster of the environment.</p></li><li><p><code>node_config</code> -<br />  (Optional)<br />  The configuration used for the Kubernetes Engine cluster.  Structure is <a href=\"#nested_node_config\">documented below</a>.</p></li><li><p><code>recovery_config</code> -<br />  (Optional, Cloud Composer 2 only)<br />  The configuration settings for recovery. Structure is <a href=\"#nested_recovery_config\">documented below</a>.</p></li><li><p><code>software_config</code> -<br />  (Optional)<br />  The configuration settings for software inside the environment.  Structure is <a href=\"#nested_software_config\">documented below</a>.</p></li><li><p><code>private_environment_config</code> -<br />  (Optional)<br />  The configuration used for the Private IP Cloud Composer environment. Structure is <a href=\"#nested_private_environment_config\">documented below</a>.</p></li><li><p><code>web_server_network_access_control</code> -<br />  (Optional, Cloud Composer 1 only)<br />  The network-level access control policy for the Airflow web server.<br />  If unspecified, no network-level access restrictions are applied.</p></li><li><p><code>database_config</code> -<br />  (Optional, Cloud Composer 1 only)<br />  The configuration settings for Cloud SQL instance used internally<br />  by Apache Airflow software.</p></li><li><p><code>web_server_config</code> -<br />  (Optional, Cloud Composer 1 only)<br />  The configuration settings for the Airflow web server App Engine instance.</p></li><li><p><code>encryption_config</code> -<br />  (Optional)<br />  The encryption options for the Cloud Composer environment and its<br />  dependencies.</p></li><li><p><code>maintenance_window</code> -<br />  (Optional, <a href=\"https://terraform.io/docs/providers/google/guides/provider_versions.html\">Beta</a>)<br />  The configuration settings for Cloud Composer maintenance windows.</p></li><li><p><code>master_authorized_networks_config</code> -<br />  (Optional)<br />  Configuration options for the master authorized networks feature. Enabled<br />  master authorized networks will disallow all external traffic to access<br />  Kubernetes master through HTTPS except traffic from the given CIDR blocks,<br />  Google Compute Engine Public IPs and Google Prod IPs. Structure is<br /><a href=\"#nested_master_authorized_networks_config\">documented below</a>.</p></li></ul><p><a name=\"nested_node_config\"></a>The <code>node_config</code> block supports:</p><ul><li><p><code>zone</code> -<br />  (Optional, Cloud Composer 1 only)<br />  The Compute Engine zone in which to deploy the VMs running the<br />  Apache Airflow software, specified as the zone name or<br />  relative resource name (e.g. \"projects/{project}/zones/{zone}\"). Must<br />  belong to the enclosing environment's project and region.</p></li><li><p><code>machine_type</code> -<br />  (Optional, Cloud Composer 1 only)<br />  The Compute Engine machine type used for cluster instances,<br />  specified as a name or relative resource name. For example:<br />  \"projects/{project}/zones/{zone}/machineTypes/{machineType}\". Must belong<br />  to the enclosing environment's project and region/zone.</p></li><li><p><code>network</code> -<br />  (Optional)<br />  The Compute Engine network to be used for machine<br />  communications, specified as a self-link, relative resource name<br />  (for example \"projects/{project}/global/networks/{network}\"), by name.</p></li></ul><p>The network must belong to the environment's project. If unspecified, the \"default\" network ID in the environment's<br />  project is used. If a Custom Subnet Network is provided, subnetwork must also be provided.</p><ul><li><p><code>subnetwork</code> -<br />  (Optional)<br />  The Compute Engine subnetwork to be used for machine<br />  communications, specified as a self-link, relative resource name (for example,<br />  \"projects/{project}/regions/{region}/subnetworks/{subnetwork}\"), or by name. If subnetwork is provided,<br />  network must also be provided and the subnetwork must belong to the enclosing environment's project and region.</p></li><li><p><code>disk_size_gb</code> -<br />  (Optional, Cloud Composer 1 only)<br />  The disk size in GB used for node VMs. Minimum size is 20GB.<br />  If unspecified, defaults to 100GB. Cannot be updated.</p></li><li><p><code>oauth_scopes</code> -<br />  (Optional, Cloud Composer 1 only)<br />  The set of Google API scopes to be made available on all node<br />  VMs. Cannot be updated. If empty, defaults to<br /><code>[\"https://www.googleapis.com/auth/cloud-platform\"]</code>.</p></li><li><p><code>service_account</code> -<br />  (Optional)<br />  The Google Cloud Platform Service Account to be used by the<br />  node VMs. If a service account is not specified, the \"default\"<br />  Compute Engine service account is used. Cannot be updated. If given,<br />  note that the service account must have <code>roles/composer.worker</code><br />  for any GCP resources created under the Cloud Composer Environment.</p></li><li><p><code>tags</code> -<br />  (Optional)<br />  The list of instance tags applied to all node VMs. Tags are<br />  used to identify valid sources or targets for network<br />  firewalls. Each tag within the list must comply with RFC1035.<br />  Cannot be updated.</p></li><li><p><code>ip_allocation_policy</code> -<br />  (Optional)<br />  Configuration for controlling how IPs are allocated in the GKE cluster.<br />  Structure is <a href=\"#nested_ip_allocation_policy\">documented below</a>.<br />  Cannot be updated.</p></li><li><p><code>max_pods_per_node</code> -<br />  (Optional, <a href=\"https://terraform.io/docs/providers/google/guides/provider_versions.html\">Beta</a>,<br />  Cloud Composer 1 only)<br />  The maximum pods per node in the GKE cluster allocated during environment<br />  creation. Lowering this value reduces IP address consumption by the Cloud<br />  Composer Kubernetes cluster. This value can only be set if the environment is VPC-Native.<br />  The range of possible values is 8-110, and the default is 32.<br />  Cannot be updated.</p></li><li><p><code>enable_ip_masq_agent</code> -<br />  (Optional)<br />  Deploys 'ip-masq-agent' daemon set in the GKE cluster and defines<br />  nonMasqueradeCIDRs equals to pod IP range so IP masquerading is used for<br />  all destination addresses, except between pods traffic.<br />  See the <a href=\"https://cloud.google.com/composer/docs/enable-ip-masquerade-agent\">documentation</a>.</p></li></ul><p><a name=\"nested_software_config\"></a>The <code>software_config</code> block supports:</p><ul><li><code>airflow_config_overrides</code> -<br />  (Optional) Apache Airflow configuration properties to override. Property keys contain the section and property names,<br />  separated by a hyphen, for example \"core-dags_are_paused_at_creation\".</li></ul><p>Section names must not contain hyphens (\"-\"), opening square brackets (\"[\"), or closing square brackets (\"]\").<br />  The property name must not be empty and cannot contain \"=\" or \";\". Section and property names cannot contain<br />  characters: \".\" Apache Airflow configuration property names must be written in snake_case. Property values can<br />  contain any character, and can be written in any lower/upper case format. Certain Apache Airflow configuration<br />  property values are <a href=\"https://cloud.google.com/composer/docs/concepts/airflow-configurations#airflow_configuration_blacklists\">blacklisted</a>,<br />  and cannot be overridden.</p><ul><li><p><code>pypi_packages</code> -<br />  (Optional)<br />  Custom Python Package Index (PyPI) packages to be installed<br />  in the environment. Keys refer to the lowercase package name (e.g. \"numpy\"). Values are the lowercase extras and<br />  version specifier (e.g. \"==1.12.0\", \"[devel,gcp_api]\", \"[devel]&gt;=1.8.2, &lt;1.9.2\"). To specify a package without<br />  pinning it to a version specifier, use the empty string as the value.</p></li><li><p><code>env_variables</code> -<br />  (Optional)<br />  Additional environment variables to provide to the Apache Airflow scheduler, worker, and webserver processes.<br />  Environment variable names must match the regular expression <code>[a-zA-Z_][a-zA-Z0-9_]*</code>.<br />  They cannot specify Apache Airflow software configuration overrides (they cannot match the regular expression<br /><code>AIRFLOW__[A-Z0-9_]+__[A-Z0-9_]+</code>), and they cannot match any of the following reserved names:</p></li></ul><p>AIRFLOW_HOME<br />  C_FORCE_ROOT<br />  CONTAINER_NAME<br />  DAGS_FOLDER<br />  GCP_PROJECT<br />  GCS_BUCKET<br />  GKE_CLUSTER_NAME<br />  SQL_DATABASE<br />  SQL_INSTANCE<br />  SQL_PASSWORD<br />  SQL_PROJECT<br />  SQL_REGION<br />  SQL_USER</p><ul><li><code>image_version</code> -<br />  (Optional in Cloud Composer 1, required in Cloud Composer 2)</li></ul><p>The version of the software running in the environment. This encapsulates both the version of Cloud Composer<br />  functionality and the version of Apache Airflow. It must match the regular expression<br /><code>composer-([0-9]+(\\.[0-9]+\\.[0-9]+(-preview\\.[0-9]+)?)?|latest)-airflow-([0-9]+(\\.[0-9]+(\\.[0-9]+)?)?)</code>.<br />  The Cloud Composer portion of the image version is a full semantic version, or an alias in the form of major<br />  version number or 'latest'.<br />  The Apache Airflow portion of the image version is a full semantic version that points to one of the<br />  supported Apache Airflow versions, or an alias in the form of only major or major.minor versions specified.<br />  For more information about Cloud Composer images, see<br /><a href=\"https://cloud.google.com/composer/docs/concepts/versioning/composer-versions\">Cloud Composer version list</a>.</p><ul><li><p><code>python_version</code> -<br />  (Optional, Cloud Composer 1 only)<br />  The major version of Python used to run the Apache Airflow scheduler, worker, and webserver processes.<br />  Can be set to '2' or '3'. If not specified, the default is '3'.</p></li><li><p><code>scheduler_count</code> -<br />  (Optional, Cloud Composer 1 with Airflow 2 only)<br />  The number of schedulers for Airflow.</p></li></ul><p>See <a href=\"https://cloud.google.com/composer/docs/how-to/managing/configuring-private-ip\">documentation</a> for setting up private environments. <a name=\"nested_private_environment_config\"></a>The <code>private_environment_config</code> block supports:</p><ul><li><p><code>connection_type</code> -<br />  (Optional, Cloud Composer 2 only)<br />  Mode of internal communication within the Composer environment. Must be one<br />  of <code>\"VPC_PEERING\"</code> or <code>\"PRIVATE_SERVICE_CONNECT\"</code>.</p></li><li><p><code>enable_private_endpoint</code> -<br />  If true, access to the public endpoint of the GKE cluster is denied.<br />  If this field is set to true, the <code>ip_allocation_policy.use_ip_aliases</code> field must<br />  also be set to true for Cloud Composer 1 environments.</p></li><li><p><code>master_ipv4_cidr_block</code> -<br />  (Optional)<br />  The IP range in CIDR notation to use for the hosted master network. This range is used<br />  for assigning internal IP addresses to the cluster master or set of masters and to the<br />  internal load balancer virtual IP. This range must not overlap with any other ranges<br />  in use within the cluster's network.<br />  If left blank, the default value of is used. See <a href=\"https://cloud.google.com/composer/docs/how-to/managing/configuring-private-ip#defaults\">documentation</a> for default values per region.</p></li><li><p><code>cloud_sql_ipv4_cidr_block</code> -<br />  (Optional)<br />  The CIDR block from which IP range in tenant project will be reserved for Cloud SQL. Needs to be disjoint from <code>web_server_ipv4_cidr_block</code></p></li><li><p><code>web_server_ipv4_cidr_block</code> -<br />  (Optional, Cloud Composer 1 only)<br />  The CIDR block from which IP range for web server will be reserved. Needs to be disjoint from <code>master_ipv4_cidr_block</code> and <code>cloud_sql_ipv4_cidr_block</code>.</p></li><li><p><code>enable_privately_used_public_ips</code> -<br />  (Optional)<br />  When enabled, IPs from public (non-RFC1918) ranges can be used for<br /><code>ip_allocation_policy.cluster_ipv4_cidr_block</code> and <code>ip_allocation_policy.service_ipv4_cidr_block</code>.</p></li></ul><p>The <code>web_server_network_access_control</code> supports:</p><ul><li><code>allowed_ip_range</code> -<br />  A collection of allowed IP ranges with descriptions. Structure is <a href=\"#nested_allowed_ip_range\">documented below</a>.</li></ul><p><a name=\"nested_allowed_ip_range\"></a>The <code>allowed_ip_range</code> supports:</p><ul><li><p><code>value</code> -<br />  (Required)<br />  IP address or range, defined using CIDR notation, of requests that this rule applies to.<br />  Examples: <code>192.168.1.1</code> or <code>192.168.0.0/16</code> or <code>2001:db8::/32</code> or <code>2001:0db8:0000:0042:0000:8a2e:0370:7334</code>.<br />  IP range prefixes should be properly truncated. For example,<br /><code>1.2.3.4/24</code> should be truncated to <code>1.2.3.0/24</code>. Similarly, for IPv6, <code>2001:db8::1/32</code> should be truncated to <code>2001:db8::/32</code>.</p></li><li><p><code>description</code> -<br />  (Optional)<br />  A description of this ip range.</p></li></ul><p><a name=\"nested_ip_allocation_policy\"></a>The <code>ip_allocation_policy</code> block supports:</p><ul><li><p><code>use_ip_aliases</code> -<br />  (Optional, Cloud Composer 1 only)<br />  Whether or not to enable Alias IPs in the GKE cluster. If true, a VPC-native cluster is created.<br />  Defaults to true if the <code>ip_allocation_policy</code> block is present in config.</p></li><li><p><code>cluster_secondary_range_name</code> -<br />  (Optional)<br />  The name of the cluster's secondary range used to allocate IP addresses to pods.<br />  Specify either <code>cluster_secondary_range_name</code> or <code>cluster_ipv4_cidr_block</code> but not both.<br />  For Cloud Composer 1 environments, this field is applicable only when <code>use_ip_aliases</code> is true.</p></li><li><p><code>services_secondary_range_name</code> -<br />  (Optional)<br />  The name of the services' secondary range used to allocate IP addresses to the cluster.<br />  Specify either <code>services_secondary_range_name</code> or <code>services_ipv4_cidr_block</code> but not both.<br />  For Cloud Composer 1 environments, this field is applicable only when <code>use_ip_aliases</code> is true.</p></li><li><p><code>cluster_ipv4_cidr_block</code> -<br />  (Optional)<br />  The IP address range used to allocate IP addresses to pods in the cluster.<br />  For Cloud Composer 1 environments, this field is applicable only when <code>use_ip_aliases</code> is true.<br />  Set to blank to have GKE choose a range with the default size.<br />  Set to /netmask (e.g. /14) to have GKE choose a range with a specific netmask.<br />  Set to a CIDR notation (e.g. 10.96.0.0/14) from the RFC-1918 private networks<br />  (e.g. 10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16) to pick a specific range to use.<br />  Specify either <code>cluster_secondary_range_name</code> or <code>cluster_ipv4_cidr_block</code> but not both.</p></li><li><p><code>services_ipv4_cidr_block</code> -<br />  (Optional)<br />  The IP address range used to allocate IP addresses in this cluster.<br />  For Cloud Composer 1 environments, this field is applicable only when <code>use_ip_aliases</code> is true.<br />  Set to blank to have GKE choose a range with the default size.<br />  Set to /netmask (e.g. /14) to have GKE choose a range with a specific netmask.<br />  Set to a CIDR notation (e.g. 10.96.0.0/14) from the RFC-1918 private networks<br />  (e.g. 10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16) to pick a specific range to use.<br />  Specify either <code>services_secondary_range_name</code> or <code>services_ipv4_cidr_block</code> but not both.</p></li></ul><p><a name=\"nested_database_config\"></a>The <code>database_config</code> block supports:</p><ul><li><code>machine_type</code> -<br />  (Required)<br />  Cloud SQL machine type used by Airflow database. It has to be one of: db-n1-standard-2,<br />  db-n1-standard-4, db-n1-standard-8 or db-n1-standard-16.</li></ul><p><a name=\"nested_web_server_config\"></a>The <code>web_server_config</code> block supports:</p><ul><li><code>machine_type</code> -<br />  (Required)<br />  Machine type on which Airflow web server is running. It has to be one of: composer-n1-webserver-2,<br />  composer-n1-webserver-4 or composer-n1-webserver-8.<br />  Value custom is returned only in response, if Airflow web server parameters were<br />  manually changed to a non-standard values.</li></ul><p><a name=\"nested_encryption_config\"></a>The <code>encryption_config</code> block supports:</p><ul><li><code>kms_key_name</code> -<br />  (Required)<br />  Customer-managed Encryption Key available through Google's Key Management Service. It must<br />  be the fully qualified resource name,<br />  i.e. projects/project-id/locations/location/keyRings/keyring/cryptoKeys/key. Cannot be updated.</li></ul><p><a name=\"nested_maintenance_window\"></a>The <code>maintenance_window</code> block supports:* <code>start_time</code> -<br />  (Required)<br />  Start time of the first recurrence of the maintenance window.</p><ul><li><p><code>end_time</code> -<br />  (Required)<br />  Maintenance window end time. It is used only to calculate the duration of the maintenance window.<br />  The value for end-time must be in the future, relative to 'start_time'.</p></li><li><p><code>recurrence</code> -<br />  (Required)<br />  Maintenance window recurrence. Format is a subset of RFC-5545 (https://tools.ietf.org/html/rfc5545) 'RRULE'.<br />  The only allowed values for 'FREQ' field are 'FREQ=DAILY' and 'FREQ=WEEKLY;BYDAY=...'.<br />  Example values: 'FREQ=WEEKLY;BYDAY=TU,WE', 'FREQ=DAILY'.</p></li></ul><p><a name=\"nested_master_authorized_networks_config\"></a>The <code>master_authorized_networks_config</code> block supports:* <code>enabled</code> -<br />  (Required)<br />  Whether or not master authorized networks is enabled.</p><ul><li><code>cidr_blocks</code> -<br /><code>cidr_blocks</code>define up to 50 external networks that could access Kubernetes master through HTTPS. Structure is <a href=\"#nested_cidr_blocks\">documented below</a>.</li></ul><p><a name=\"nested_cidr_blocks\"></a>The <code>cidr_blocks</code> supports:</p><ul><li><p><code>display_name</code> -<br />  (Optional)<br /><code>display_name</code> is a field for users to identify CIDR blocks.</p></li><li><p><code>cidr_block</code> -<br />  (Required)<br />  `cidr_block&lt; must be specified in CIDR notation.</p></li></ul>", "argument-reference---cloud-composer-2": "<h2 id=\"argument-reference-cloud-composer-2\">Argument Reference - Cloud Composer 2</h2><p>The following arguments are supported:</p><ul><li><p><code>name</code> -<br />  (Required)<br />  Name of the environment</p></li><li><p><code>config</code> -<br />  (Optional)<br />  Configuration parameters for this environment. Structure is documented below.</p></li><li><p><code>labels</code> -<br />  (Optional)<br />  User-defined labels for this environment. The labels map can contain<br />  no more than 64 entries. Entries of the labels map are UTF8 strings<br />  that comply with the following restrictions:<br />  Label keys must be between 1 and 63 characters long and must conform<br />  to the following regular expression: <code>[a-z]([-a-z0-9]*[a-z0-9])?</code>.<br />  Label values must be between 0 and 63 characters long and must<br />  conform to the regular expression <code>([a-z]([-a-z0-9]*[a-z0-9])?)?</code>.<br />  No more than 64 labels can be associated with a given environment.<br />  Both keys and values must be &lt;= 128 bytes in size.</p></li><li><p><code>region</code> -<br />  (Optional)<br />  The location or Compute Engine region for the environment.</p></li><li><p><code>project</code> -<br />  (Optional) The ID of the project in which the resource belongs.<br />  If it is not provided, the provider project is used.</p></li></ul><p>The <code>config</code> block supports:</p><ul><li><p><code>node_config</code> -<br />  (Optional)<br />  The configuration used for the Kubernetes Engine cluster. Structure is documented below.</p></li><li><p><code>software_config</code> -<br />  (Optional)<br />  The configuration settings for software (Airflow) inside the environment. Structure is<br />  documented below.</p></li><li><p><code>private_environment_config</code> -<br />  (Optional)<br />  The configuration used for the Private IP Cloud Composer environment. Structure is documented<br />  below.</p></li><li><p><code>encryption_config</code> -<br />  (Optional)<br />  The encryption options for the Cloud Composer environment and its<br />  dependencies.</p></li><li><p><code>maintenance_window</code> -<br />  (Optional)<br />  The configuration settings for Cloud Composer maintenance windows.</p></li><li><p><code>workloads_config</code> -<br />  (Optional, Cloud Composer 2 only)<br />  The Kubernetes workloads configuration for GKE cluster associated with the<br />  Cloud Composer environment.</p></li><li><p><code>environment_size</code> -<br />  (Optional, Cloud Composer 2 only)<br />  The environment size controls the performance parameters of the managed<br />  Cloud Composer infrastructure that includes the Airflow database. Values for<br />  environment size are <code>ENVIRONMENT_SIZE_SMALL</code>, <code>ENVIRONMENT_SIZE_MEDIUM</code>,<br />  and <code>ENVIRONMENT_SIZE_LARGE</code>.</p></li><li><p><code>resilience_mode</code> -<br />  (Optional, Cloud Composer 2.1.15 or newer only)<br />  The resilience mode states whether high resilience is enabled for <br />  the environment or not. Values for resilience mode are <code>HIGH_RESILIENCE</code> <br />  for high resilience and <code>STANDARD_RESILIENCE</code> for standard<br />  resilience.</p></li><li><p><code>master_authorized_networks_config</code> -<br />  (Optional)<br />  Configuration options for the master authorized networks feature. Enabled<br />  master authorized networks will disallow all external traffic to access<br />  Kubernetes master through HTTPS except traffic from the given CIDR blocks,<br />  Google Compute Engine Public IPs and Google Prod IPs. Structure is<br />  documented below.</p></li></ul><p>The <code>node_config</code> block supports:</p><ul><li><code>network</code> -<br />  (Optional)<br />  The Compute Engine network to be used for machine<br />  communications, specified as a self-link, relative resource name<br />  (for example \"projects/{project}/global/networks/{network}\"), by name.</li></ul><p>The network must belong to the environment's project. If unspecified, the \"default\" network ID in the environment's<br />  project is used. If a Custom Subnet Network is provided, subnetwork must also be provided.</p><ul><li><p><code>subnetwork</code> -<br />  (Optional)<br />  The Compute Engine subnetwork to be used for machine<br />  communications, specified as a self-link, relative resource name (for example,<br />  \"projects/{project}/regions/{region}/subnetworks/{subnetwork}\"), or by name. If subnetwork is provided,<br />  network must also be provided and the subnetwork must belong to the enclosing environment's project and region.</p></li><li><p><code>service_account</code> -<br />  (Optional)<br />  The Google Cloud Platform Service Account to be used by the<br />  node VMs. If a service account is not specified, the \"default\"<br />  Compute Engine service account is used. Cannot be updated. If given,<br />  note that the service account must have <code>roles/composer.worker</code><br />  for any GCP resources created under the Cloud Composer Environment.</p></li><li><p><code>tags</code> -<br />  (Optional)<br />  The list of instance tags applied to all node VMs. Tags are<br />  used to identify valid sources or targets for network<br />  firewalls. Each tag within the list must comply with RFC1035.<br />  Cannot be updated.</p></li><li><p><code>ip_allocation_policy</code> -<br />  (Optional)<br />  Configuration for controlling how IPs are allocated in the GKE cluster.<br />  Structure is documented below.<br />  Cannot be updated.</p></li><li><p><code>enable_ip_masq_agent</code> -<br />  (Optional)<br />  IP Masq Agent translates Pod IP addresses to node IP addresses, so that <br />  destinations and services targeted from Airflow DAGs and tasks only receive <br />  packets from node IP addresses instead of Pod IP addresses<br />  See the <a href=\"https://cloud.google.com/composer/docs/enable-ip-masquerade-agent\">documentation</a>.</p></li></ul><p>The <code>software_config</code> block supports:</p><ul><li><code>airflow_config_overrides</code> -<br />  (Optional) Apache Airflow configuration properties to override. Property keys contain the section and property names,<br />  separated by a hyphen, for example \"core-dags_are_paused_at_creation\".</li></ul><p>Section names must not contain hyphens (\"-\"), opening square brackets (\"[\"), or closing square brackets (\"]\").<br />  The property name must not be empty and cannot contain \"=\" or \";\". Section and property names cannot contain<br />  characters: \".\" Apache Airflow configuration property names must be written in snake_case. Property values can<br />  contain any character, and can be written in any lower/upper case format. Certain Apache Airflow configuration<br />  property values are <a href=\"https://cloud.google.com/composer/docs/concepts/airflow-configurations#airflow_configuration_blacklists\">blacklisted</a>,<br />  and cannot be overridden.</p><ul><li><p><code>pypi_packages</code> -<br />  (Optional)<br />  Custom Python Package Index (PyPI) packages to be installed<br />  in the environment. Keys refer to the lowercase package name (e.g. \"numpy\"). Values are the lowercase extras and<br />  version specifier (e.g. \"==1.12.0\", \"[devel,gcp_api]\", \"[devel]&gt;=1.8.2, &lt;1.9.2\"). To specify a package without<br />  pinning it to a version specifier, use the empty string as the value.</p></li><li><p><code>env_variables</code> -<br />  (Optional)<br />  Additional environment variables to provide to the Apache Airflow scheduler, worker, and webserver processes.<br />  Environment variable names must match the regular expression <code>[a-zA-Z_][a-zA-Z0-9_]*</code>.<br />  They cannot specify Apache Airflow software configuration overrides (they cannot match the regular expression<br /><code>AIRFLOW__[A-Z0-9_]+__[A-Z0-9_]+</code>), and they cannot match any of the following reserved names:</p></li></ul><p>AIRFLOW_HOME<br />  C_FORCE_ROOT<br />  CONTAINER_NAME<br />  DAGS_FOLDER<br />  GCP_PROJECT<br />  GCS_BUCKET<br />  GKE_CLUSTER_NAME<br />  SQL_DATABASE<br />  SQL_INSTANCE<br />  SQL_PASSWORD<br />  SQL_PROJECT<br />  SQL_REGION<br />  SQL_USER</p><ul><li><code>image_version</code> -<br />  (Required in Cloud Composer 2, optional in Cloud Composer 1)</li></ul><p><strong>In Cloud Composer 2, you must specify an image with Cloud Composer 2</strong>. Otherwise, the default image for Cloud Composer 1 is used. For more information about Cloud Composer images, see<br /><a href=\"https://cloud.google.com/composer/docs/concepts/versioning/composer-versions\">Cloud Composer version list</a>.</p><p>The version of the software running in the environment. This encapsulates both the version of Cloud Composer<br />  functionality and the version of Apache Airflow. It must match the regular expression<br /><code>composer-([0-9]+(\\.[0-9]+\\.[0-9]+(-preview\\.[0-9]+)?)?|latest)-airflow-([0-9]+(\\.[0-9]+(\\.[0-9]+)?)?)</code>.<br />  The Cloud Composer portion of the image version is a full semantic version, or an alias in the form of major<br />  version number or 'latest'.<br />  The Apache Airflow portion of the image version is a full semantic version that points to one of the<br />  supported Apache Airflow versions, or an alias in the form of only major or major.minor versions specified.<br /><strong>Important</strong>: In-place upgrade is only available using <code>google-beta</code> provider. It's because updating the<br /><code>image_version</code> is still in beta. Using <code>google-beta</code> provider, you can upgrade in-place between minor or<br />  patch versions of Cloud Composer or Apache Airflow. For example, you can upgrade your environment from<br /><code>composer-1.16.x</code> to <code>composer-1.17.x</code>, or from <code>airflow-2.1.x</code> to <code>airflow-2.2.x</code>. You cannot upgrade between<br />  major Cloud Composer or Apache Airflow versions (from <code>1.x.x</code> to <code>2.x.x</code>). To do so, create a new environment.</p><ul><li><code>cloud_data_lineage_integration</code> -<br />  (Optional, <a href=\"https://terraform.io/docs/providers/google/guides/provider_versions.html\">Beta</a>,<br />  Cloud Composer environments in versions composer-2.1.2-airflow-<em>.</em>.* and newer)<br />  The configuration for Cloud Data Lineage integration. Structure is<br /><a href=\"#nested_cloud_data_lineage_integration\">documented below</a>.</li></ul><p><a name=\"nested_cloud_data_lineage_integration\"></a>The <code>cloud_data_lineage_integration</code> block supports:* <code>enabled</code> -<br />  (Required)<br />  Whether or not Cloud Data Lineage integration is enabled.</p><p>See <a href=\"https://cloud.google.com/composer/docs/how-to/managing/configuring-private-ip\">documentation</a> for setting up private environments. The <code>private_environment_config</code> block supports:</p><ul><li><p><code>enable_private_endpoint</code> -<br />  If true, access to the public endpoint of the GKE cluster is denied.</p></li><li><p><code>master_ipv4_cidr_block</code> -<br />  (Optional)<br />  The IP range in CIDR notation to use for the hosted master network. This range is used<br />  for assigning internal IP addresses to the cluster master or set of masters and to the<br />  internal load balancer virtual IP. This range must not overlap with any other ranges<br />  in use within the cluster's network.<br />  If left blank, the default value of is used. See <a href=\"https://cloud.google.com/composer/docs/how-to/managing/configuring-private-ip#defaults\">documentation</a> for default values per region.</p></li><li><p><code>cloud_sql_ipv4_cidr_block</code> -<br />  (Optional)<br />  The CIDR block from which IP range in tenant project will be reserved for Cloud SQL. Needs to be disjoint from <code>web_server_ipv4_cidr_block</code></p></li><li><p><code>cloud_composer_network_ipv4_cidr_block\"</code> -<br />  (Optional, Cloud Composer 2 only)<br />  The CIDR block from which IP range for Cloud Composer Network in tenant project will be reserved. Needs to be disjoint from private_cluster_config.master_ipv4_cidr_block and cloud_sql_ipv4_cidr_block.</p></li><li><p><code>enable_privately_used_public_ips</code> -<br />  (Optional)<br />  When enabled, IPs from public (non-RFC1918) ranges can be used for<br /><code>ip_allocation_policy.cluster_ipv4_cidr_block</code> and <code>ip_allocation_policy.service_ipv4_cidr_block</code>.</p></li><li><p><code>cloud_composer_connection_subnetwork</code> -<br />  (Optional)<br />  When specified, the environment will use Private Service Connect instead of VPC peerings to connect<br />  to Cloud SQL in the Tenant Project, and the PSC endpoint in the Customer Project will use an IP<br />  address from this subnetwork. This field is supported for Cloud Composer environments in<br />  versions <code>composer-2.*.*-airflow-*.*.*</code> and newer.</p></li></ul><p>The <code>ip_allocation_policy</code> block supports:</p><ul><li><p><code>cluster_secondary_range_name</code> -<br />  (Optional)<br />  The name of the cluster's secondary range used to allocate IP addresses to pods.<br />  Specify either <code>cluster_secondary_range_name</code> or <code>cluster_ipv4_cidr_block</code> but not both.</p></li><li><p><code>services_secondary_range_name</code> -<br />  (Optional)<br />  The name of the services' secondary range used to allocate IP addresses to the cluster.<br />  Specify either <code>services_secondary_range_name</code> or <code>services_ipv4_cidr_block</code> but not both.</p></li><li><p><code>cluster_ipv4_cidr_block</code> -<br />  (Optional)<br />  The IP address range used to allocate IP addresses to pods in the cluster.<br />  For Cloud Composer 1 environments, this field is applicable only when <code>use_ip_aliases</code> is true.<br />  Set to blank to have GKE choose a range with the default size.<br />  Set to /netmask (e.g. /14) to have GKE choose a range with a specific netmask.<br />  Set to a CIDR notation (e.g. 10.96.0.0/14) from the RFC-1918 private networks<br />  (e.g. 10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16) to pick a specific range to use.<br />  Specify either <code>cluster_secondary_range_name</code> or <code>cluster_ipv4_cidr_block</code> but not both.</p></li><li><p><code>services_ipv4_cidr_block</code> -<br />  (Optional)<br />  The IP address range used to allocate IP addresses in this cluster.<br />  For Cloud Composer 1 environments, this field is applicable only when <code>use_ip_aliases</code> is true.<br />  Set to blank to have GKE choose a range with the default size.<br />  Set to /netmask (e.g. /14) to have GKE choose a range with a specific netmask.<br />  Set to a CIDR notation (e.g. 10.96.0.0/14) from the RFC-1918 private networks<br />  (e.g. 10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16) to pick a specific range to use.<br />  Specify either <code>services_secondary_range_name</code> or <code>services_ipv4_cidr_block</code> but not both.</p></li></ul><p><a name=\"nested_encryption_config_comp_2\"></a>The <code>encryption_config</code> block supports:</p><ul><li><code>kms_key_name</code> -<br />  (Required)<br />  Customer-managed Encryption Key available through Google's Key Management Service. It must<br />  be the fully qualified resource name,<br />  i.e. projects/project-id/locations/location/keyRings/keyring/cryptoKeys/key. Cannot be updated.</li></ul><p><a name=\"nested_maintenance_window_comp_2\"></a>The <code>maintenance_window</code> block supports:</p><ul><li><p><code>start_time</code> -<br />  (Required)<br />  Start time of the first recurrence of the maintenance window.</p></li><li><p><code>end_time</code> -<br />  (Required)<br />  Maintenance window end time. It is used only to calculate the duration of the maintenance window.<br />  The value for end-time must be in the future, relative to 'start_time'.</p></li><li><p><code>recurrence</code> -<br />  (Required)<br />  Maintenance window recurrence. Format is a subset of RFC-5545 (https://tools.ietf.org/html/rfc5545) 'RRULE'.<br />  The only allowed values for 'FREQ' field are 'FREQ=DAILY' and 'FREQ=WEEKLY;BYDAY=...'.<br />  Example values: 'FREQ=WEEKLY;BYDAY=TU,WE', 'FREQ=DAILY'.</p></li></ul><p>The <code>recovery_config</code> block supports:</p><ul><li><code>scheduled_snapshots_config</code> -<br />  (Optional)<br />  The recovery configuration settings for the Cloud Composer environment.</li></ul><p>The <code>scheduled_snapshots_config</code> block supports:</p><ul><li><p><code>enabled</code> -<br />  (Optional)<br />  When enabled, Cloud Composer periodically saves snapshots of your environment to a Cloud Storage bucket.</p></li><li><p><code>snapshot_location</code> -<br />  (Optional)<br />  The URI of a bucket folder where to save the snapshot.</p></li><li><p><code>snapshot_creation_schedule</code> -<br />  (Optional)<br />  Snapshot schedule, in the unix-cron format.</p></li><li><p><code>time_zone</code> -<br />  (Optional)<br />  A time zone for the schedule. This value is a time offset and does not take into account daylight saving time changes. Valid values are from UTC-12 to UTC+12. Examples: UTC, UTC-01, UTC+03.</p></li></ul><p>The <code>workloads_config</code> block supports:</p><ul><li><p><code>scheduler</code> -<br />  (Optional)<br />  Configuration for resources used by Airflow schedulers.</p></li><li><p><code>triggerer</code> -<br />  (Optional, <a href=\"https://terraform.io/docs/providers/google/guides/provider_versions.html\">Beta</a>)<br />  Configuration for resources used by Airflow triggerer.</p></li><li><p><code>web_server</code> -<br />  (Optional)<br />  Configuration for resources used by Airflow web server.</p></li><li><p><code>worker</code> -<br />  (Optional)<br />  Configuration for resources used by Airflow workers.</p></li></ul><p>The <code>scheduler</code> block supports:</p><ul><li><p><code>cpu</code> -<br />  (Optional)<br />  The number of CPUs for a single Airflow scheduler.</p></li><li><p><code>memory_gb</code> -<br />  (Optional)<br />  The amount of memory (GB) for a single Airflow scheduler.</p></li><li><p><code>storage_gb</code> -<br />  (Optional)<br />  The amount of storage (GB) for a single Airflow scheduler.</p></li><li><p><code>count</code> -<br />  (Optional)<br />  The number of schedulers.</p></li></ul><p>The <code>triggerer</code> block supports:</p><ul><li><p><code>cpu</code> -<br />  (Required)<br />  The number of CPUs for a single Airflow triggerer.</p></li><li><p><code>memory_gb</code> -<br />  (Required)<br />  The amount of memory (GB) for a single Airflow triggerer.</p></li><li><p><code>count</code> -<br />  (Required)<br />  The number of Airflow triggerers.</p></li></ul><p>The <code>web_server</code> block supports:</p><ul><li><p><code>cpu</code> -<br />  (Optional)<br />  The number of CPUs for the Airflow web server.</p></li><li><p><code>memory_gb</code> -<br />  (Optional)<br />  The amount of memory (GB) for the Airflow web server.</p></li><li><p><code>storage_gb</code> -<br />  (Optional)<br />  The amount of storage (GB) for the Airflow web server.</p></li></ul><p>The <code>worker</code> block supports:</p><ul><li><p><code>cpu</code> -<br />  (Optional)<br />  The number of CPUs for a single Airflow worker.</p></li><li><p><code>memory_gb</code> -<br />  (Optional)<br />  The amount of memory (GB) for a single Airflow worker.</p></li><li><p><code>float storage_gb</code><br />  (Optional)<br />  The amount of storage (GB) for a single Airflow worker.</p></li><li><p><code>min_count</code> -<br />  (Optional)<br />  The minimum number of Airflow workers that the environment can run. The number of workers in the<br />  environment does not go above this number, even if a lower number of workers can handle the load.</p></li><li><p><code>max_count</code> -<br />  (Optional)<br />  The maximum number of Airflow workers that the environment can run. The number of workers in the<br />  environment does not go above this number, even if a higher number of workers is required to<br />  handle the load.</p></li></ul>", "attributes-reference": "<h2 id=\"attributes-reference\">Attributes Reference</h2><p>In addition to the arguments listed above, the following computed attributes are exported:</p><ul><li><p><code>id</code> - an identifier for the resource with format <code>projects/{{project}}/locations/{{region}}/environments/{{name}}</code></p></li><li><p><code>config.0.gke_cluster</code> -<br />  The Kubernetes Engine cluster used to run this environment.</p></li><li><p><code>config.0.dag_gcs_prefix</code> -<br />  The Cloud Storage prefix of the DAGs for this environment.<br />  Although Cloud Storage objects reside in a flat namespace, a<br />  hierarchical file tree can be simulated using '/'-delimited<br />  object name prefixes. DAG objects for this environment<br />  reside in a simulated directory with this prefix.</p></li><li><p><code>config.0.airflow_uri</code> -<br />  The URI of the Apache Airflow Web UI hosted within this<br />  environment.</p></li></ul>", "timeouts": "<h2 id=\"timeouts\">Timeouts</h2><p>This resource provides the following<br /><a href=\"https://developer.hashicorp.com/terraform/plugin/sdkv2/resources/retries-and-customizable-timeouts\">Timeouts</a> configuration options: configuration options:</p><ul><li><code>create</code> - Default is 60 minutes.</li><li><code>update</code> - Default is 60 minutes.</li><li><code>delete</code> - Default is 6 minutes.</li></ul>", "import": "<h2 id=\"import\">Import</h2><p>Environment can be imported using any of these accepted formats:</p><p>$ terraform import google_composer_environment.default projects/{{project}}/locations/{{region}}/environments/{{name}}<br />$ terraform import google_composer_environment.default {{project}}/{{region}}/{{name}}<br />$ terraform import google_composer_environment.default {{name}}</p>", "description": "<h1 id=\"google_composer_environment\">google_composer_environment</h1><p>An environment for running orchestration tasks.</p><p>Environments run Apache Airflow software on Google infrastructure.</p><p>To get more information about Environments, see:</p><ul><li><a href=\"https://cloud.google.com/composer/docs\">Cloud Composer documentation</a></li><li><a href=\"https://cloud.google.com/composer/docs/reference/rest/v1beta1/projects.locations.environments\">Cloud Composer API documentation</a></li><li>How-to Guides (Cloud Composer 1)</li><li><a href=\"https://cloud.google.com/composer/docs/how-to/managing/creating\">Creating environments</a></li><li><a href=\"https://cloud.google.com/composer/docs/scale-environments\">Scaling environments</a></li><li><a href=\"https://cloud.google.com/composer/docs/how-to/managing/configuring-shared-vpc\">Configuring Shared VPC for Composer Environments</a></li><li>How-to Guides (Cloud Composer 2)</li><li><a href=\"https://cloud.google.com/composer/docs/composer-2/create-environments\">Creating environments</a></li><li><a href=\"https://cloud.google.com/composer/docs/composer-2/scale-environments\">Scaling environments</a></li><li><a href=\"https://cloud.google.com/composer/docs/composer-2/configure-shared-vpc\">Configuring Shared VPC for Composer Environments</a></li><li><a href=\"http://airflow.apache.org/\">Apache Airflow Documentation</a></li></ul><p>~&gt; <strong>Warning:</strong> We <strong>STRONGLY</strong> recommend you read the <a href=\"https://cloud.google.com/composer/docs/how-to\">GCP<br />guides</a> as the Environment resource requires a long<br />deployment process and involves several layers of GCP infrastructure, including a Kubernetes Engine<br />cluster, Cloud Storage, and Compute networking resources. Due to limitations of the API, Terraform<br />will not be able to automatically find or manage many of these underlying resources. In particular:* It can take up to one hour to create or update an environment resource. In addition, GCP may only<br />  detect some errors in configuration when they are used (e.g. ~40-50 minutes into the creation<br />  process), and is prone to limited error reporting. If you encounter confusing or uninformative<br />  errors, please verify your configuration is valid against GCP Cloud Composer before filing bugs<br />  against the Terraform provider. * <strong>Environments create Google Cloud Storage buckets that do not get<br />  cleaned up automatically</strong> on environment deletion. <a href=\"https://cloud.google.com/composer/docs/concepts/cloud-storage\">More about Composer's use of Cloud<br />  Storage</a>. * Please review the <a href=\"https://cloud.google.com/composer/docs/known-issues\">known<br />  issues</a> for Composer if you are having<br />  problems.</p>"}