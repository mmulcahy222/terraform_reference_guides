{"iam-policy-for-folders": "<h1 id=\"iam-policy-for-folders\">IAM policy for folders</h1><p>Four different resources help you manage your IAM policy for a folder. Each of these resources serves a different use case:</p><ul><li><code>google_folder_iam_policy</code>: Authoritative. Sets the IAM policy for the folder and replaces any existing policy already attached.</li><li><code>google_folder_iam_binding</code>: Authoritative for a given role. Updates the IAM policy to grant a role to a list of members. Other roles within the IAM policy for the folder are preserved.</li><li><code>google_folder_iam_member</code>: Non-authoritative. Updates the IAM policy to grant a role to a new member. Other members for the role for the folder are preserved.</li><li><code>google_folder_iam_audit_config</code>: Authoritative for a given service. Updates the IAM policy to enable audit logging for the given service.</li></ul><p>~&gt; <strong>Note:</strong> <code>google_folder_iam_policy</code> <strong>cannot</strong> be used in conjunction with <code>google_folder_iam_binding</code>, <code>google_folder_iam_member</code>, or <code>google_folder_iam_audit_config</code> or they will fight over what your policy should be.</p><p>~&gt; <strong>Note:</strong> <code>google_folder_iam_binding</code> resources <strong>can be</strong> used in conjunction with <code>google_folder_iam_member</code> resources <strong>only if</strong> they do not grant privilege to the same role.</p><p>~&gt; <strong>Note:</strong> The underlying API method <code>projects.setIamPolicy</code> has constraints which are documented <a href=\"https://cloud.google.com/resource-manager/reference/rest/v1/projects/setIamPolicy\">here</a>. In addition to these constraints, <br />   IAM Conditions cannot be used with Basic Roles such as Owner. Violating these constraints will result in the API returning a 400 error code so please review these if you encounter errors with this resource.</p>", "google-folder-iam-policy": "<h2 id=\"google_folder_iam_policy\">google_folder_iam_policy</h2><p>!&gt; <strong>Be careful!</strong> You can accidentally lock yourself out of your folder<br />   using this resource. Deleting a <code>google_folder_iam_policy</code> removes access<br />   from anyone without permissions on its parent folder/organization. Proceed with caution.<br />   It's not recommended to use <code>google_folder_iam_policy</code> with your provider folder<br />   to avoid locking yourself out, and it should generally only be used with folders<br />   fully managed by Terraform. If you do use this resource, it is recommended to <strong>import</strong> the policy before<br />   applying the change.</p><p>resource \"google_folder_iam_policy\" \"folder\" {<br />  folder      = \"folders/1234567\"<br />  policy_data = data.google_iam_policy.admin.policy_data<br />}</p><p>data \"google_iam_policy\" \"admin\" {<br />  binding {<br />    role = \"roles/editor\"</p><pre><code>members = [  \"user:jane@example.com\",]</code></pre><p>}<br />}</p><p>With IAM Conditions:</p><p>resource \"google_folder_iam_policy\" \"folder\" {<br />  folder      = \"folders/1234567\"<br />  policy_data = \"${data.google_iam_policy.admin.policy_data}\"<br />}</p><p>data \"google_iam_policy\" \"admin\" {<br />  binding {<br />    role = \"roles/compute.admin\"</p><pre><code>members = [  \"user:jane@example.com\",]condition {  title       = \"expires_after_2019_12_31\"  description = \"Expiring at midnight of 2019-12-31\"  expression  = \"request.time &lt; timestamp(\\\"2020-01-01T00:00:00Z\\\")\"}</code></pre><p>}<br />}</p>", "google-folder-iam-binding": "<h2 id=\"google_folder_iam_binding\">google_folder_iam_binding</h2><p>resource \"google_folder_iam_binding\" \"folder\" {<br />  folder  = \"folders/1234567\"<br />  role    = \"roles/editor\"</p><p>members = [<br />    \"user:jane@example.com\",<br />  ]<br />}</p><p>With IAM Conditions:</p><p>resource \"google_folder_iam_binding\" \"folder\" {<br />  folder  = \"folders/1234567\"<br />  role    = \"roles/container.admin\"</p><p>members = [<br />    \"user:jane@example.com\",<br />  ]</p><p>condition {<br />    title       = \"expires_after_2019_12_31\"<br />    description = \"Expiring at midnight of 2019-12-31\"<br />    expression  = \"request.time &lt; timestamp(\\\"2020-01-01T00:00:00Z\\\")\"<br />  }<br />}</p>", "google-folder-iam-member": "<h2 id=\"google_folder_iam_member\">google_folder_iam_member</h2><p>resource \"google_folder_iam_member\" \"folder\" {<br />  folder  = \"folders/1234567\"<br />  role    = \"roles/editor\"<br />  member  = \"user:jane@example.com\"<br />}</p><p>With IAM Conditions:</p><p>resource \"google_folder_iam_member\" \"folder\" {<br />  folder  = \"folders/1234567\"<br />  role    = \"roles/firebase.admin\"<br />  member  = \"user:jane@example.com\"</p><p>condition {<br />    title       = \"expires_after_2019_12_31\"<br />    description = \"Expiring at midnight of 2019-12-31\"<br />    expression  = \"request.time &lt; timestamp(\\\"2020-01-01T00:00:00Z\\\")\"<br />  }<br />}</p>", "google-folder-iam-audit-config": "<h2 id=\"google_folder_iam_audit_config\">google_folder_iam_audit_config</h2><p>resource \"google_folder_iam_audit_config\" \"folder\" {<br />  folder  = \"folders/1234567\"<br />  service = \"allServices\"<br />  audit_log_config {<br />    log_type = \"ADMIN_READ\"<br />  }<br />  audit_log_config {<br />    log_type = \"DATA_READ\"<br />    exempted_members = [<br />      \"user:joebloggs@hashicorp.com\",<br />    ]<br />  }<br />}</p>", "argument-reference": "<h2 id=\"argument-reference\">Argument Reference</h2><p>The following arguments are supported:</p><ul><li><code>member/members</code> - (Required except for google_folder_iam_audit_config) Identities that will be granted the privilege in <code>role</code>.<br />  Each entry can have one of the following values:</li><li><strong>user:{emailid}</strong>: An email address that represents a specific Google account. For example, alice@gmail.com or joe@example.com.</li><li><strong>serviceAccount:{emailid}</strong>: An email address that represents a service account. For example, my-other-app@appspot.gserviceaccount.com.</li><li><strong>group:{emailid}</strong>: An email address that represents a Google group. For example, admins@example.com.</li><li><p><strong>domain:{domain}</strong>: A G Suite domain (primary, instead of alias) name that represents all the users of that domain. For example, google.com or example.com.</p></li><li><p><code>role</code> - (Required except for google_folder_iam_audit_config) The role that should be applied. Only one<br /><code>google_folder_iam_binding</code> can be used per role. Note that custom roles must be of the format<br /><code>organizations/{{org_id}}/roles/{{role_id}}</code>.</p></li><li><p><code>policy_data</code> - (Required only by <code>google_folder_iam_policy</code>) The <code>google_iam_policy</code> data source that represents<br />    the IAM policy that will be applied to the folder. The policy will be<br />    merged with any existing policy applied to the folder.</p><p>Changing this updates the policy.</p><p>Deleting this removes all policies from the folder, locking out users without<br />folder-level access.</p></li><li><p><code>folder</code> - (Required) The resource name of the folder the policy is attached to. Its format is folders/{folder_id}.</p></li><li><p><code>service</code> - (Required only by google_folder_iam_audit_config) Service which will be enabled for audit logging.  The special value <code>allServices</code> covers all services.  Note that if there are google_folder_iam_audit_config resources covering both <code>allServices</code> and a specific service then the union of the two AuditConfigs is used for that service: the <code>log_types</code> specified in each <code>audit_log_config</code> are enabled, and the <code>exempted_members</code> in each <code>audit_log_config</code> are exempted.</p></li><li><p><code>audit_log_config</code> - (Required only by google_folder_iam_audit_config) The configuration for logging of each type of permission.  This can be specified multiple times.  Structure is <a href=\"#nested_audit_log_config\">documented below</a>.</p></li><li><p><code>condition</code> - (Optional) An <a href=\"https://cloud.google.com/iam/docs/conditions-overview\">IAM Condition</a> for a given binding.<br />  Structure is <a href=\"#nested_condition\">documented below</a>.</p></li></ul><hr /><p><a name=\"nested_audit_log_config\"></a>The <code>audit_log_config</code> block supports:</p><ul><li><p><code>log_type</code> - (Required) Permission type for which logging is to be configured.  Must be one of <code>DATA_READ</code>, <code>DATA_WRITE</code>, or <code>ADMIN_READ</code>.</p></li><li><p><code>exempted_members</code> - (Optional) Identities that do not cause logging for this type of permission.  The format is the same as that for <code>members</code>.</p></li></ul><p><a name=\"nested_condition\"></a>The <code>condition</code> block supports:</p><ul><li><p><code>expression</code> - (Required) Textual representation of an expression in Common Expression Language syntax.</p></li><li><p><code>title</code> - (Required) A title for the expression, i.e. a short string describing its purpose.</p></li><li><p><code>description</code> - (Optional) An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.</p></li></ul><p>~&gt; <strong>Warning:</strong> Terraform considers the <code>role</code> and condition contents (<code>title</code>+<code>description</code>+<code>expression</code>) as the<br />  identifier for the binding. This means that if any part of the condition is changed out-of-band, Terraform will<br />  consider it to be an entirely different resource and will treat it as such.</p>", "attributes-reference": "<h2 id=\"attributes-reference\">Attributes Reference</h2><p>In addition to the arguments listed above, the following computed attributes are<br />exported:</p><ul><li><code>etag</code> - (Computed) The etag of the folder's IAM policy.</li></ul>", "import": "<h2 id=\"import\">Import</h2><p>IAM member imports use space-delimited identifiers; the resource in question, the role, and the account.  This member resource can be imported using the <code>folder</code>, role, and member e.g.</p><p>$ terraform import google_folder_iam_member.my_folder \"folder roles/viewer user:foo@example.com\"</p><p>IAM binding imports use space-delimited identifiers; the resource in question and the role.  This binding resource can be imported using the <code>folder</code> and role, e.g.</p><p>terraform import google_folder_iam_binding.my_folder \"folder roles/viewer\"</p><p>IAM policy imports use the identifier of the resource in question.  This policy resource can be imported using the <code>folder</code>.</p><p>$ terraform import google_folder_iam_policy.my_folder folder</p><p>IAM audit config imports use the identifier of the resource in question and the service, e.g.</p><p>terraform import google_folder_iam_audit_config.my_folder \"folder foo.googleapis.com\"</p><p>-&gt; <strong>Custom Roles</strong>: If you're importing a IAM resource with a custom role, make sure to use the<br /> full name of the custom role, e.g. <code>organizations/{{org_id}}/roles/{{role_id}}</code>.</p><p>-&gt; <strong>Conditional IAM Bindings</strong>: If you're importing a IAM binding with a condition block, make sure<br /> to include the title of condition, e.g. <code>terraform import google_folder_iam_binding.my_folder \"folder roles/{{role_id}} condition-title\"</code></p>", "description": "<h2 id=\"google_folder_iam_policy\">google_folder_iam_policy</h2><p>!&gt; <strong>Be careful!</strong> You can accidentally lock yourself out of your folder<br />   using this resource. Deleting a <code>google_folder_iam_policy</code> removes access<br />   from anyone without permissions on its parent folder/organization. Proceed with caution.<br />   It's not recommended to use <code>google_folder_iam_policy</code> with your provider folder<br />   to avoid locking yourself out, and it should generally only be used with folders<br />   fully managed by Terraform. If you do use this resource, it is recommended to <strong>import</strong> the policy before<br />   applying the change.</p><p>resource \"google_folder_iam_policy\" \"folder\" {<br />  folder      = \"folders/1234567\"<br />  policy_data = data.google_iam_policy.admin.policy_data<br />}</p><p>data \"google_iam_policy\" \"admin\" {<br />  binding {<br />    role = \"roles/editor\"</p><pre><code>members = [  \"user:jane@example.com\",]</code></pre><p>}<br />}</p><p>With IAM Conditions:</p><p>resource \"google_folder_iam_policy\" \"folder\" {<br />  folder      = \"folders/1234567\"<br />  policy_data = \"${data.google_iam_policy.admin.policy_data}\"<br />}</p><p>data \"google_iam_policy\" \"admin\" {<br />  binding {<br />    role = \"roles/compute.admin\"</p><pre><code>members = [  \"user:jane@example.com\",]condition {  title       = \"expires_after_2019_12_31\"  description = \"Expiring at midnight of 2019-12-31\"  expression  = \"request.time &lt; timestamp(\\\"2020-01-01T00:00:00Z\\\")\"}</code></pre><p>}<br />}</p>"}