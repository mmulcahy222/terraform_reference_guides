{"google-sql-user": "<h1 id=\"google_sql_user\">google_sql_user</h1><p>Creates a new Google SQL User on a Google SQL User Instance. For more information, see the <a href=\"https://cloud.google.com/sql/\">official documentation</a>, or the <a href=\"https://cloud.google.com/sql/docs/admin-api/v1beta4/users\">JSON API</a>.</p><p>~&gt; <strong>Note:</strong> All arguments including the username and password will be stored in the raw state as plain-text.<br /><a href=\"https://www.terraform.io/language/state/sensitive-data\">Read more about sensitive data in state</a>. Passwords will not be retrieved when running<br />\"terraform import\".</p>", "example-usage": "<h2 id=\"example-usage\">Example Usage</h2><p>Example creating a SQL User.</p><p><br />resource \"random_id\" \"db_name_suffix\" {<br />  byte_length = 4<br />}</p><p>resource \"google_sql_database_instance\" \"main\" {<br />  name             = \"main-instance-${random_id.db_name_suffix.hex}\"<br />  database_version = \"MYSQL_5_7\"</p><p>settings {<br />    tier = \"db-f1-micro\"<br />  }<br />}</p><p>resource \"google_sql_user\" \"users\" {<br />  name     = \"me\"<br />  instance = google_sql_database_instance.main.name<br />  host     = \"me.com\"<br />  password = \"changeme\"<br />}<br /></p><p>Example using <a href=\"https://cloud.google.com/sql/docs/mysql/authentication\">Cloud SQL IAM database authentication</a>.</p><p><br />resource \"random_id\" \"db_name_suffix\" {<br />  byte_length = 4<br />}</p><p>resource \"google_sql_database_instance\" \"main\" {<br />  name             = \"main-instance-${random_id.db_name_suffix.hex}\"<br />  database_version = \"POSTGRES_15\"</p><p>settings {<br />    tier = \"db-f1-micro\"</p><pre><code>database_flags {  name  = \"cloudsql.iam_authentication\"  value = \"on\"}</code></pre><p>}<br />}</p><p>resource \"google_sql_user\" \"iam_user\" {<br />  name     = \"me@example.com\"<br />  instance = google_sql_database_instance.main.name<br />  type     = \"CLOUD_IAM_USER\"<br />}</p><p>resource \"google_sql_user\" \"iam_service_account_user\" {<br />  # Note: for Postgres only, GCP requires omitting the \".gserviceaccount.com\" suffix<br />  # from the service account email due to length limits on database usernames.<br />  name     = trimsuffix(google_service_account.service_account.email, \".gserviceaccount.com\")<br />  instance = google_sql_database_instance.main.name<br />  type     = \"CLOUD_IAM_SERVICE_ACCOUNT\"<br />}<br /></p>", "argument-reference": "<h2 id=\"argument-reference\">Argument Reference</h2><p>The following arguments are supported:</p><ul><li><p><code>instance</code> - (Required) The name of the Cloud SQL instance. Changing this<br />    forces a new resource to be created.</p></li><li><p><code>name</code> - (Required) The name of the user. Changing this forces a new resource<br />    to be created.</p></li><li><p><code>password</code> - (Optional) The password for the user. Can be updated. For Postgres<br />    instances this is a Required field, unless type is set to either CLOUD_IAM_USER<br />    or CLOUD_IAM_SERVICE_ACCOUNT. Don't set this field for CLOUD_IAM_USER<br />    and CLOUD_IAM_SERVICE_ACCOUNT user types for any Cloud SQL instance.</p></li><li><p><code>type</code> - (Optional) The user type. It determines the method to authenticate the<br />    user during login. The default is the database's built-in user type. Flags<br />    include \"BUILT_IN\", \"CLOUD_IAM_USER\", or \"CLOUD_IAM_SERVICE_ACCOUNT\".</p></li><li><p><code>deletion_policy</code> - (Optional) The deletion policy for the user.<br />    Setting <code>ABANDON</code> allows the resource to be abandoned rather than deleted. This is useful<br />    for Postgres, where users cannot be deleted from the API if they have been granted SQL roles.</p><p>Possible values are: <code>ABANDON</code>.</p></li></ul><hr /><ul><li><p><code>host</code> - (Optional) The host the user can connect from. This is only supported<br />    for BUILT_IN users in MySQL instances. Don't set this field for PostgreSQL and SQL Server instances.<br />    Can be an IP address. Changing this forces a new resource to be created.</p></li><li><p><code>project</code> - (Optional) The ID of the project in which the resource belongs. If it<br />    is not provided, the provider project is used.</p></li></ul><p>The optional <code>password_policy</code> block is only supported by Mysql. The <code>password_policy</code> block supports:</p><ul><li><p><code>allowed_failed_attempts</code> - (Optional) Number of failed attempts allowed before the user get locked.</p></li><li><p><code>password_expiration_duration</code> - (Optional) Password expiration duration with one week grace period.</p></li><li><p><code>enable_failed_attempts_check</code> - (Optional) If true, the check that will lock user after too many failed login attempts will be enabled.</p></li><li><p><code>enable_password_verification</code> - (Optional) If true, the user must specify the current password before changing the password. This flag is supported only for MySQL.</p></li></ul><p>The read only <code>password_policy.status</code> subblock supports:</p><ul><li><p><code>locked</code> - (read only) If true, user does not have login privileges.</p></li><li><p><code>password_expiration_time</code> - (read only) Password expiration duration with one week grace period.</p></li></ul>", "attributes-reference": "<h2 id=\"attributes-reference\">Attributes Reference</h2><p>Only the arguments listed above are exposed as attributes.</p>", "timeouts": "<h2 id=\"timeouts\">Timeouts</h2><p>This resource provides the following<br /><a href=\"https://developer.hashicorp.com/terraform/plugin/sdkv2/resources/retries-and-customizable-timeouts\">Timeouts</a> configuration options: configuration options:</p><ul><li><code>create</code> - Default is 10 minutes.</li><li><code>update</code> - Default is 10 minutes.</li><li><code>delete</code> - Default is 10 minutes.</li></ul>", "import": "<h2 id=\"import\">Import</h2><p>SQL users for MySQL databases can be imported using the <code>project</code>, <code>instance</code>, <code>host</code> and <code>name</code>, e.g.</p><p><code>$ terraform import google_sql_user.users my-project/main-instance/my-domain.com/me</code></p><p>SQL users for PostgreSQL databases can be imported using the <code>project</code>, <code>instance</code> and <code>name</code>, e.g.</p><p><code>$ terraform import google_sql_user.users my-project/main-instance/me</code></p>", "description": "<h1 id=\"google_sql_user\">google_sql_user</h1><p>Creates a new Google SQL User on a Google SQL User Instance. For more information, see the <a href=\"https://cloud.google.com/sql/\">official documentation</a>, or the <a href=\"https://cloud.google.com/sql/docs/admin-api/v1beta4/users\">JSON API</a>.</p><p>~&gt; <strong>Note:</strong> All arguments including the username and password will be stored in the raw state as plain-text.<br /><a href=\"https://www.terraform.io/language/state/sensitive-data\">Read more about sensitive data in state</a>. Passwords will not be retrieved when running<br />\"terraform import\".</p>"}