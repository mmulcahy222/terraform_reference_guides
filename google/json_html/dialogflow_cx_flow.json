{"": "<h1 id=\"-_2\">----------------------------------------------------------------------------</h1><p>subcategory: \"Dialogflow CX\"<br />description: |-<br />  Flows represents the conversation flows when you build your chatbot agent.</p><hr />", "auto-generated-code-type-mmv1": "<h1 id=\"auto-generated-code-type-mmv1\"><strong><em>     AUTO GENERATED CODE    </em></strong>    Type: MMv1     ***</h1>", "this-file-is-automatically-generated-by-magic-modules-and-manual": "<h1 id=\"this-file-is-automatically-generated-by-magic-modules-and-manual\">This file is automatically generated by Magic Modules and manual</h1>", "changes-will-be-clobbered-when-the-file-is-regenerated": "<h1 id=\"changes-will-be-clobbered-when-the-file-is-regenerated\">changes will be clobbered when the file is regenerated.</h1>", "please-read-more-about-how-to-change-this-file-in": "<h1 id=\"please-read-more-about-how-to-change-this-file-in\">Please read more about how to change this file in</h1>", "github-contributing-md": "<h1 id=\"githubcontributingmd\">.github/CONTRIBUTING.md.</h1>", "google-dialogflow-cx-flow": "<h1 id=\"google_dialogflow_cx_flow\">google_dialogflow_cx_flow</h1><p>Flows represents the conversation flows when you build your chatbot agent.</p><p>To get more information about Flow, see:</p><ul><li><a href=\"https://cloud.google.com/dialogflow/cx/docs/reference/rest/v3/projects.locations.agents.flows\">API documentation</a></li><li>How-to Guides<ul><li><a href=\"https://cloud.google.com/dialogflow/cx/docs\">Official Documentation</a></li></ul></li></ul><div class = \"oics-button\" style=\"float: right; margin: 0 0 -15px\">  <a href=\"https://console.cloud.google.com/cloudshell/open?cloudshell_git_repo=https%3A%2F%2Fgithub.com%2Fterraform-google-modules%2Fdocs-examples.git&cloudshell_working_dir=dialogflowcx_flow_full&cloudshell_image=gcr.io%2Fcloudshell-images%2Fcloudshell%3Alatest&open_in_editor=main.tf&cloudshell_print=.%2Fmotd&cloudshell_tutorial=.%2Ftutorial.md\" target=\"_blank\">    <img alt=\"Open in Cloud Shell\" src=\"//gstatic.com/cloudssh/images/open-btn.svg\" style=\"max-height: 44px; margin: 32px auto; max-width: 100%;\">  </a></div>", "example-usage---dialogflowcx-flow-full": "<h2 id=\"example-usage-dialogflowcx-flow-full\">Example Usage - Dialogflowcx Flow Full</h2><p>resource \"google_dialogflow_cx_agent\" \"agent\" {<br />  display_name               = \"dialogflowcx-agent\"<br />  location                   = \"global\"<br />  default_language_code      = \"en\"<br />  supported_language_codes   = [\"fr\", \"de\", \"es\"]<br />  time_zone                  = \"America/New_York\"<br />  description                = \"Example description.\"<br />  avatar_uri                 = \"https://cloud.google.com/_static/images/cloud/icons/favicons/onecloud/super_cloud.png\"<br />  enable_stackdriver_logging = true<br />  enable_spell_correction    = true<br />  speech_to_text_settings {<br />    enable_speech_adaptation = true<br />  }<br />}</p><p>resource \"google_dialogflow_cx_flow\" \"basic_flow\" {<br />  parent       = google_dialogflow_cx_agent.agent.id<br />  display_name = \"MyFlow\"<br />  description  = \"Test Flow\"</p><p>nlu_settings {<br />    classification_threshold = 0.3<br />    model_type               = \"MODEL_TYPE_STANDARD\"<br />  }</p><p>event_handlers {<br />    event = \"custom-event\"<br />    trigger_fulfillment {<br />      return_partial_responses = false<br />      messages {<br />        text {<br />          text = [\"I didn't get that. Can you say it again?\"]<br />        }<br />      }<br />    }<br />  }</p><p>event_handlers {<br />    event = \"sys.no-match-default\"<br />    trigger_fulfillment {<br />      return_partial_responses = false<br />      messages {<br />        text {<br />          text = [\"Sorry, could you say that again?\"]<br />        }<br />      }<br />    }<br />  }</p><p>event_handlers {<br />    event = \"sys.no-input-default\"<br />    trigger_fulfillment {<br />      return_partial_responses = false<br />      messages {<br />        text {<br />          text = [\"One more time?\"]<br />        }<br />      }<br />    }<br />  }</p><p>event_handlers {<br />    event = \"another-event\"<br />    trigger_fulfillment {<br />      return_partial_responses = true<br />      messages {<br />        channel = \"some-channel\"<br />        text {<br />          text = [\"Some text\"]<br />        }<br />      }<br />      messages {<br />        payload = &lt;&lt;EOF<br />          {\"some-key\": \"some-value\", \"other-key\": [\"other-value\"]}<br />        EOF<br />      }<br />      messages {<br />        conversation_success {<br />          metadata = &lt;&lt;EOF<br />            {\"some-metadata-key\": \"some-value\", \"other-metadata-key\": 1234}<br />          EOF<br />        }<br />      }<br />      messages {<br />        output_audio_text {<br />          text = \"some output text\"<br />        }<br />      }<br />      messages {<br />        output_audio_text {<br />          ssml = &lt;&lt;EOF<br />            <speak>Some example <say-as interpret-as=\"characters\">SSML XML</say-as></speak><br />          EOF<br />        }<br />      }<br />      messages {<br />        live_agent_handoff {<br />          metadata = &lt;&lt;EOF<br />            {\"some-metadata-key\": \"some-value\", \"other-metadata-key\": 1234}<br />          EOF<br />        }<br />      }<br />      messages {<br />        play_audio {<br />          audio_uri = \"http://example.com/some-audio-file.mp3\"<br />        }<br />      }<br />      messages {<br />        telephony_transfer_call {<br />          phone_number = \"1-234-567-8901\"<br />        }<br />      }</p><pre><code>  set_parameter_actions {    parameter = \"some-param\"    value     = \"123.45\"  }  set_parameter_actions {    parameter = \"another-param\"    value     = jsonencode(\"abc\")  }  set_parameter_actions {    parameter = \"other-param\"    value     = jsonencode([\"foo\"])  }  conditional_cases {    cases = jsonencode([      {        condition = \"$sys.func.RAND() &lt; 0.5\",        caseContent = [          {            message = { text = { text = [\"First case\"] } }          },          {            additionalCases = {              cases = [                {                  condition = \"$sys.func.RAND() &lt; 0.2\"                  caseContent = [                    {                      message = { text = { text = [\"Nested case\"] } }                    }                  ]                }              ]            }          }        ]      },      {        caseContent = [          {            message = { text = { text = [\"Final case\"] } }          }        ]      },    ])  }}</code></pre><p>}</p><p>transition_routes {<br />    condition = \"true\"<br />    trigger_fulfillment {<br />      return_partial_responses = true<br />      messages {<br />        channel = \"some-channel\"<br />        text {<br />          text = [\"Some text\"]<br />        }<br />      }<br />      messages {<br />        payload = &lt;&lt;EOF<br />          {\"some-key\": \"some-value\", \"other-key\": [\"other-value\"]}<br />        EOF<br />      }<br />      messages {<br />        conversation_success {<br />          metadata = &lt;&lt;EOF<br />            {\"some-metadata-key\": \"some-value\", \"other-metadata-key\": 1234}<br />          EOF<br />        }<br />      }<br />      messages {<br />        output_audio_text {<br />          text = \"some output text\"<br />        }<br />      }<br />      messages {<br />        output_audio_text {<br />          ssml = &lt;&lt;EOF<br />            <speak>Some example <say-as interpret-as=\"characters\">SSML XML</say-as></speak><br />          EOF<br />        }<br />      }<br />      messages {<br />        live_agent_handoff {<br />          metadata = &lt;&lt;EOF<br />            {\"some-metadata-key\": \"some-value\", \"other-metadata-key\": 1234}<br />          EOF<br />        }<br />      }<br />      messages {<br />        play_audio {<br />          audio_uri = \"http://example.com/some-audio-file.mp3\"<br />        }<br />      }<br />      messages {<br />        telephony_transfer_call {<br />          phone_number = \"1-234-567-8901\"<br />        }<br />      }</p><pre><code>  set_parameter_actions {    parameter = \"some-param\"    value     = \"123.45\"  }  set_parameter_actions {    parameter = \"another-param\"    value     = jsonencode(\"abc\")  }  set_parameter_actions {    parameter = \"other-param\"    value     = jsonencode([\"foo\"])  }  conditional_cases {    cases = jsonencode([      {        condition = \"$sys.func.RAND() &lt; 0.5\",        caseContent = [          {            message = { text = { text = [\"First case\"] } }          },          {            additionalCases = {              cases = [                {                  condition = \"$sys.func.RAND() &lt; 0.2\"                  caseContent = [                    {                      message = { text = { text = [\"Nested case\"] } }                    }                  ]                }              ]            }          }        ]      },      {        caseContent = [          {            message = { text = { text = [\"Final case\"] } }          }        ]      },    ])  }}target_flow = google_dialogflow_cx_agent.agent.start_flow</code></pre><p>}<br />} </p>", "argument-reference": "<h2 id=\"argument-reference\">Argument Reference</h2><p>The following arguments are supported:</p><ul><li><code>display_name</code> -<br />  (Required)<br />  The human-readable name of the flow.</li></ul><hr /><ul><li><p><code>description</code> -<br />  (Optional)<br />  The description of the flow. The maximum length is 500 characters. If exceeded, the request is rejected.</p></li><li><p><code>transition_routes</code> -<br />  (Optional)<br />  A flow's transition routes serve two purposes:<br />  They are responsible for matching the user's first utterances in the flow.<br />  They are inherited by every page's [transition routes][Page.transition_routes] and can support use cases such as the user saying \"help\" or \"can I talk to a human?\", which can be handled in a common way regardless of the current page. Transition routes defined in the page have higher priority than those defined in the flow.<br />  TransitionRoutes are evalauted in the following order:<br />    TransitionRoutes with intent specified.<br />    TransitionRoutes with only condition specified.<br />    TransitionRoutes with intent specified are inherited by pages in the flow.<br />  Structure is <a href=\"#nested_transition_routes\">documented below</a>.</p></li><li><p><code>event_handlers</code> -<br />  (Optional)<br />  A flow's event handlers serve two purposes:<br />  They are responsible for handling events (e.g. no match, webhook errors) in the flow.<br />  They are inherited by every page's [event handlers][Page.event_handlers], which can be used to handle common events regardless of the current page. Event handlers defined in the page have higher priority than those defined in the flow.<br />  Unlike transitionRoutes, these handlers are evaluated on a first-match basis. The first one that matches the event get executed, with the rest being ignored.<br />  Structure is <a href=\"#nested_event_handlers\">documented below</a>.</p></li><li><p><code>transition_route_groups</code> -<br />  (Optional)<br />  A flow's transition route group serve two purposes:<br />  They are responsible for matching the user's first utterances in the flow.<br />  They are inherited by every page's [transition route groups][Page.transition_route_groups]. Transition route groups defined in the page have higher priority than those defined in the flow.<br />  Format:projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>/flows/<Flow ID>/transitionRouteGroups/<TransitionRouteGroup ID>.</p></li><li><p><code>nlu_settings</code> -<br />  (Optional)<br />  NLU related settings of the flow.<br />  Structure is <a href=\"#nested_nlu_settings\">documented below</a>.</p></li><li><p><code>parent</code> -<br />  (Optional)<br />  The agent to create a flow for.<br />  Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>.</p></li><li><p><code>language_code</code> -<br />  (Optional)<br />  The language of the following fields in flow:<br />  Flow.event_handlers.trigger_fulfillment.messages<br />  Flow.event_handlers.trigger_fulfillment.conditional_cases<br />  Flow.transition_routes.trigger_fulfillment.messages<br />  Flow.transition_routes.trigger_fulfillment.conditional_cases<br />  If not specified, the agent's default language is used. Many languages are supported. Note: languages must be enabled in the agent before they can be used.</p></li></ul><p><a name=\"nested_transition_routes\"></a>The <code>transition_routes</code> block supports:</p><ul><li><p><code>name</code> -<br />  (Output)<br />  The unique identifier of this transition route.</p></li><li><p><code>intent</code> -<br />  (Optional)<br />  The unique identifier of an Intent.<br />  Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>/intents/<Intent ID>. Indicates that the transition can only happen when the given intent is matched. At least one of intent or condition must be specified. When both intent and condition are specified, the transition can only happen when both are fulfilled.</p></li><li><p><code>condition</code> -<br />  (Optional)<br />  The condition to evaluate against form parameters or session parameters.<br />  At least one of intent or condition must be specified. When both intent and condition are specified, the transition can only happen when both are fulfilled.</p></li><li><p><code>trigger_fulfillment</code> -<br />  (Optional)<br />  The fulfillment to call when the condition is satisfied. At least one of triggerFulfillment and target must be specified. When both are defined, triggerFulfillment is executed first.<br />  Structure is <a href=\"#nested_trigger_fulfillment\">documented below</a>.</p></li><li><p><code>target_page</code> -<br />  (Optional)<br />  The target page to transition to.<br />  Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>/flows/<Flow ID>/pages/<Page ID>.</p></li><li><p><code>target_flow</code> -<br />  (Optional)<br />  The target flow to transition to.<br />  Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>/flows/<Flow ID>.</p></li></ul><p><a name=\"nested_trigger_fulfillment\"></a>The <code>trigger_fulfillment</code> block supports:</p><ul><li><p><code>messages</code> -<br />  (Optional)<br />  The list of rich message responses to present to the user.<br />  Structure is <a href=\"#nested_messages\">documented below</a>.</p></li><li><p><code>webhook</code> -<br />  (Optional)<br />  The webhook to call. Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>/webhooks/<Webhook ID>.</p></li><li><p><code>return_partial_responses</code> -<br />  (Optional)<br />  Whether Dialogflow should return currently queued fulfillment response messages in streaming APIs. If a webhook is specified, it happens before Dialogflow invokes webhook. Warning: 1) This flag only affects streaming API. Responses are still queued and returned once in non-streaming API. 2) The flag can be enabled in any fulfillment but only the first 3 partial responses will be returned. You may only want to apply it to fulfillments that have slow webhooks.</p></li><li><p><code>tag</code> -<br />  (Optional)<br />  The tag used by the webhook to identify which fulfillment is being called. This field is required if webhook is specified.</p></li><li><p><code>set_parameter_actions</code> -<br />  (Optional)<br />  Set parameter values before executing the webhook.<br />  Structure is <a href=\"#nested_set_parameter_actions\">documented below</a>.</p></li><li><p><code>conditional_cases</code> -<br />  (Optional)<br />  Conditional cases for this fulfillment.<br />  Structure is <a href=\"#nested_conditional_cases\">documented below</a>.</p></li></ul><p><a name=\"nested_messages\"></a>The <code>messages</code> block supports:</p><ul><li><p><code>channel</code> -<br />  (Optional)<br />  The channel which the response is associated with. Clients can specify the channel via QueryParameters.channel, and only associated channel response will be returned.</p></li><li><p><code>text</code> -<br />  (Optional)<br />  The text response message.<br />  Structure is <a href=\"#nested_text\">documented below</a>.</p></li><li><p><code>payload</code> -<br />  (Optional)<br />  A custom, platform-specific payload.</p></li><li><p><code>conversation_success</code> -<br />  (Optional)<br />  Indicates that the conversation succeeded, i.e., the bot handled the issue that the customer talked to it about.<br />  Dialogflow only uses this to determine which conversations should be counted as successful and doesn't process the metadata in this message in any way. Note that Dialogflow also considers conversations that get to the conversation end page as successful even if they don't return ConversationSuccess.<br />  You may set this, for example:</p></li><li>In the entryFulfillment of a Page if entering the page indicates that the conversation succeeded.</li><li><p>In a webhook response when you determine that you handled the customer issue.<br />  Structure is <a href=\"#nested_conversation_success\">documented below</a>.</p></li><li><p><code>output_audio_text</code> -<br />  (Optional)<br />  A text or ssml response that is preferentially used for TTS output audio synthesis, as described in the comment on the ResponseMessage message.<br />  Structure is <a href=\"#nested_output_audio_text\">documented below</a>.</p></li><li><p><code>live_agent_handoff</code> -<br />  (Optional)<br />  Indicates that the conversation should be handed off to a live agent.<br />  Dialogflow only uses this to determine which conversations were handed off to a human agent for measurement purposes. What else to do with this signal is up to you and your handoff procedures.<br />  You may set this, for example:</p></li><li>In the entryFulfillment of a Page if entering the page indicates something went extremely wrong in the conversation.</li><li><p>In a webhook response when you determine that the customer issue can only be handled by a human.<br />  Structure is <a href=\"#nested_live_agent_handoff\">documented below</a>.</p></li><li><p><code>play_audio</code> -<br />  (Optional)<br />  Specifies an audio clip to be played by the client as part of the response.<br />  Structure is <a href=\"#nested_play_audio\">documented below</a>.</p></li><li><p><code>telephony_transfer_call</code> -<br />  (Optional)<br />  Represents the signal that telles the client to transfer the phone call connected to the agent to a third-party endpoint.<br />  Structure is <a href=\"#nested_telephony_transfer_call\">documented below</a>.</p></li></ul><p><a name=\"nested_text\"></a>The <code>text</code> block supports:</p><ul><li><p><code>text</code> -<br />  (Optional)<br />  A collection of text responses.</p></li><li><p><code>allow_playback_interruption</code> -<br />  (Output)<br />  Whether the playback of this message can be interrupted by the end user's speech and the client can then starts the next Dialogflow request.</p></li></ul><p><a name=\"nested_conversation_success\"></a>The <code>conversation_success</code> block supports:</p><ul><li><code>metadata</code> -<br />  (Optional)<br />  Custom metadata. Dialogflow doesn't impose any structure on this.</li></ul><p><a name=\"nested_output_audio_text\"></a>The <code>output_audio_text</code> block supports:</p><ul><li><p><code>allow_playback_interruption</code> -<br />  (Output)<br />  Whether the playback of this message can be interrupted by the end user's speech and the client can then starts the next Dialogflow request.</p></li><li><p><code>text</code> -<br />  (Optional)<br />  The raw text to be synthesized.</p></li><li><p><code>ssml</code> -<br />  (Optional)<br />  The SSML text to be synthesized. For more information, see SSML.</p></li></ul><p><a name=\"nested_live_agent_handoff\"></a>The <code>live_agent_handoff</code> block supports:</p><ul><li><code>metadata</code> -<br />  (Optional)<br />  Custom metadata. Dialogflow doesn't impose any structure on this.</li></ul><p><a name=\"nested_play_audio\"></a>The <code>play_audio</code> block supports:</p><ul><li><p><code>audio_uri</code> -<br />  (Required)<br />  URI of the audio clip. Dialogflow does not impose any validation on this value. It is specific to the client that reads it.</p></li><li><p><code>allow_playback_interruption</code> -<br />  (Output)<br />  Whether the playback of this message can be interrupted by the end user's speech and the client can then starts the next Dialogflow request.</p></li></ul><p><a name=\"nested_telephony_transfer_call\"></a>The <code>telephony_transfer_call</code> block supports:</p><ul><li><code>phone_number</code> -<br />  (Required)<br />  Transfer the call to a phone number in E.164 format.</li></ul><p><a name=\"nested_set_parameter_actions\"></a>The <code>set_parameter_actions</code> block supports:</p><ul><li><p><code>parameter</code> -<br />  (Optional)<br />  Display name of the parameter.</p></li><li><p><code>value</code> -<br />  (Optional)<br />  The new JSON-encoded value of the parameter. A null value clears the parameter.</p></li></ul><p><a name=\"nested_conditional_cases\"></a>The <code>conditional_cases</code> block supports:</p><ul><li><code>cases</code> -<br />  (Optional)<br />  A JSON encoded list of cascading if-else conditions. Cases are mutually exclusive. The first one with a matching condition is selected, all the rest ignored.<br />  See <a href=\"https://cloud.google.com/dialogflow/cx/docs/reference/rest/v3/Fulfillment#case\">Case</a> for the schema.</li></ul><p><a name=\"nested_event_handlers\"></a>The <code>event_handlers</code> block supports:</p><ul><li><p><code>name</code> -<br />  (Output)<br />  The unique identifier of this event handler.</p></li><li><p><code>event</code> -<br />  (Optional)<br />  The name of the event to handle.</p></li><li><p><code>trigger_fulfillment</code> -<br />  (Optional)<br />  The fulfillment to call when the event occurs. Handling webhook errors with a fulfillment enabled with webhook could cause infinite loop. It is invalid to specify such fulfillment for a handler handling webhooks.<br />  Structure is <a href=\"#nested_trigger_fulfillment\">documented below</a>.</p></li><li><p><code>target_page</code> -<br />  (Optional)<br />  The target page to transition to.<br />  Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>/flows/<Flow ID>/pages/<Page ID>.</p></li><li><p><code>target_flow</code> -<br />  (Optional)<br />  The target flow to transition to.<br />  Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>/flows/<Flow ID>.</p></li></ul><p><a name=\"nested_trigger_fulfillment\"></a>The <code>trigger_fulfillment</code> block supports:</p><ul><li><p><code>messages</code> -<br />  (Optional)<br />  The list of rich message responses to present to the user.<br />  Structure is <a href=\"#nested_messages\">documented below</a>.</p></li><li><p><code>webhook</code> -<br />  (Optional)<br />  The webhook to call. Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>/webhooks/<Webhook ID>.</p></li><li><p><code>return_partial_responses</code> -<br />  (Optional)<br />  Whether Dialogflow should return currently queued fulfillment response messages in streaming APIs. If a webhook is specified, it happens before Dialogflow invokes webhook. Warning: 1) This flag only affects streaming API. Responses are still queued and returned once in non-streaming API. 2) The flag can be enabled in any fulfillment but only the first 3 partial responses will be returned. You may only want to apply it to fulfillments that have slow webhooks.</p></li><li><p><code>tag</code> -<br />  (Optional)<br />  The tag used by the webhook to identify which fulfillment is being called. This field is required if webhook is specified.</p></li><li><p><code>set_parameter_actions</code> -<br />  (Optional)<br />  Set parameter values before executing the webhook.<br />  Structure is <a href=\"#nested_set_parameter_actions\">documented below</a>.</p></li><li><p><code>conditional_cases</code> -<br />  (Optional)<br />  Conditional cases for this fulfillment.<br />  Structure is <a href=\"#nested_conditional_cases\">documented below</a>.</p></li></ul><p><a name=\"nested_messages\"></a>The <code>messages</code> block supports:</p><ul><li><p><code>channel</code> -<br />  (Optional)<br />  The channel which the response is associated with. Clients can specify the channel via QueryParameters.channel, and only associated channel response will be returned.</p></li><li><p><code>text</code> -<br />  (Optional)<br />  The text response message.<br />  Structure is <a href=\"#nested_text\">documented below</a>.</p></li><li><p><code>payload</code> -<br />  (Optional)<br />  A custom, platform-specific payload.</p></li><li><p><code>conversation_success</code> -<br />  (Optional)<br />  Indicates that the conversation succeeded, i.e., the bot handled the issue that the customer talked to it about.<br />  Dialogflow only uses this to determine which conversations should be counted as successful and doesn't process the metadata in this message in any way. Note that Dialogflow also considers conversations that get to the conversation end page as successful even if they don't return ConversationSuccess.<br />  You may set this, for example:</p></li><li>In the entryFulfillment of a Page if entering the page indicates that the conversation succeeded.</li><li><p>In a webhook response when you determine that you handled the customer issue.<br />  Structure is <a href=\"#nested_conversation_success\">documented below</a>.</p></li><li><p><code>output_audio_text</code> -<br />  (Optional)<br />  A text or ssml response that is preferentially used for TTS output audio synthesis, as described in the comment on the ResponseMessage message.<br />  Structure is <a href=\"#nested_output_audio_text\">documented below</a>.</p></li><li><p><code>live_agent_handoff</code> -<br />  (Optional)<br />  Indicates that the conversation should be handed off to a live agent.<br />  Dialogflow only uses this to determine which conversations were handed off to a human agent for measurement purposes. What else to do with this signal is up to you and your handoff procedures.<br />  You may set this, for example:</p></li><li>In the entryFulfillment of a Page if entering the page indicates something went extremely wrong in the conversation.</li><li><p>In a webhook response when you determine that the customer issue can only be handled by a human.<br />  Structure is <a href=\"#nested_live_agent_handoff\">documented below</a>.</p></li><li><p><code>play_audio</code> -<br />  (Optional)<br />  Specifies an audio clip to be played by the client as part of the response.<br />  Structure is <a href=\"#nested_play_audio\">documented below</a>.</p></li><li><p><code>telephony_transfer_call</code> -<br />  (Optional)<br />  Represents the signal that telles the client to transfer the phone call connected to the agent to a third-party endpoint.<br />  Structure is <a href=\"#nested_telephony_transfer_call\">documented below</a>.</p></li></ul><p><a name=\"nested_text\"></a>The <code>text</code> block supports:</p><ul><li><p><code>text</code> -<br />  (Optional)<br />  A collection of text responses.</p></li><li><p><code>allow_playback_interruption</code> -<br />  (Output)<br />  Whether the playback of this message can be interrupted by the end user's speech and the client can then starts the next Dialogflow request.</p></li></ul><p><a name=\"nested_conversation_success\"></a>The <code>conversation_success</code> block supports:</p><ul><li><code>metadata</code> -<br />  (Optional)<br />  Custom metadata. Dialogflow doesn't impose any structure on this.</li></ul><p><a name=\"nested_output_audio_text\"></a>The <code>output_audio_text</code> block supports:</p><ul><li><p><code>allow_playback_interruption</code> -<br />  (Output)<br />  Whether the playback of this message can be interrupted by the end user's speech and the client can then starts the next Dialogflow request.</p></li><li><p><code>text</code> -<br />  (Optional)<br />  The raw text to be synthesized.</p></li><li><p><code>ssml</code> -<br />  (Optional)<br />  The SSML text to be synthesized. For more information, see SSML.</p></li></ul><p><a name=\"nested_live_agent_handoff\"></a>The <code>live_agent_handoff</code> block supports:</p><ul><li><code>metadata</code> -<br />  (Optional)<br />  Custom metadata. Dialogflow doesn't impose any structure on this.</li></ul><p><a name=\"nested_play_audio\"></a>The <code>play_audio</code> block supports:</p><ul><li><p><code>audio_uri</code> -<br />  (Required)<br />  URI of the audio clip. Dialogflow does not impose any validation on this value. It is specific to the client that reads it.</p></li><li><p><code>allow_playback_interruption</code> -<br />  (Output)<br />  Whether the playback of this message can be interrupted by the end user's speech and the client can then starts the next Dialogflow request.</p></li></ul><p><a name=\"nested_telephony_transfer_call\"></a>The <code>telephony_transfer_call</code> block supports:</p><ul><li><code>phone_number</code> -<br />  (Required)<br />  Transfer the call to a phone number in E.164 format.</li></ul><p><a name=\"nested_set_parameter_actions\"></a>The <code>set_parameter_actions</code> block supports:</p><ul><li><p><code>parameter</code> -<br />  (Optional)<br />  Display name of the parameter.</p></li><li><p><code>value</code> -<br />  (Optional)<br />  The new JSON-encoded value of the parameter. A null value clears the parameter.</p></li></ul><p><a name=\"nested_conditional_cases\"></a>The <code>conditional_cases</code> block supports:</p><ul><li><code>cases</code> -<br />  (Optional)<br />  A JSON encoded list of cascading if-else conditions. Cases are mutually exclusive. The first one with a matching condition is selected, all the rest ignored.<br />  See <a href=\"https://cloud.google.com/dialogflow/cx/docs/reference/rest/v3/Fulfillment#case\">Case</a> for the schema.</li></ul><p><a name=\"nested_nlu_settings\"></a>The <code>nlu_settings</code> block supports:</p><ul><li><code>model_type</code> -<br />  (Optional)<br />  Indicates the type of NLU model.</li><li>MODEL_TYPE_STANDARD: Use standard NLU model.</li><li><p>MODEL_TYPE_ADVANCED: Use advanced NLU model.<br />  Possible values are: <code>MODEL_TYPE_STANDARD</code>, <code>MODEL_TYPE_ADVANCED</code>.</p></li><li><p><code>classification_threshold</code> -<br />  (Optional)<br />  To filter out false positive results and still get variety in matched natural language inputs for your agent, you can tune the machine learning classification threshold.<br />  If the returned score value is less than the threshold value, then a no-match event will be triggered. The score values range from 0.0 (completely uncertain) to 1.0 (completely certain). If set to 0.0, the default of 0.3 is used.</p></li><li><p><code>model_training_mode</code> -<br />  (Optional)<br />  Indicates NLU model training mode.</p></li><li>MODEL_TRAINING_MODE_AUTOMATIC: NLU model training is automatically triggered when a flow gets modified. User can also manually trigger model training in this mode.</li><li>MODEL_TRAINING_MODE_MANUAL: User needs to manually trigger NLU model training. Best for large flows whose models take long time to train.<br />  Possible values are: <code>MODEL_TRAINING_MODE_AUTOMATIC</code>, <code>MODEL_TRAINING_MODE_MANUAL</code>.</li></ul>", "attributes-reference": "<h2 id=\"attributes-reference\">Attributes Reference</h2><p>In addition to the arguments listed above, the following computed attributes are exported:</p><ul><li><p><code>id</code> - an identifier for the resource with format <code>{{parent}}/flows/{{name}}</code></p></li><li><p><code>name</code> -<br />  The unique identifier of the flow.<br />  Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>/flows/<Flow ID>.</p></li></ul>", "timeouts": "<h2 id=\"timeouts\">Timeouts</h2><p>This resource provides the following<br /><a href=\"https://developer.hashicorp.com/terraform/plugin/sdkv2/resources/retries-and-customizable-timeouts\">Timeouts</a> configuration options:</p><ul><li><code>create</code> - Default is 40 minutes.</li><li><code>update</code> - Default is 40 minutes.</li><li><code>delete</code> - Default is 20 minutes.</li></ul>", "import": "<h2 id=\"import\">Import</h2><p>Flow can be imported using any of these accepted formats:</p><p>$ terraform import google_dialogflow_cx_flow.default {{parent}}/flows/{{name}}<br />$ terraform import google_dialogflow_cx_flow.default {{parent}}/{{name}}</p>", "description": "<h1 id=\"google_dialogflow_cx_flow\">google_dialogflow_cx_flow</h1><p>Flows represents the conversation flows when you build your chatbot agent.</p><p>To get more information about Flow, see:</p><ul><li><a href=\"https://cloud.google.com/dialogflow/cx/docs/reference/rest/v3/projects.locations.agents.flows\">API documentation</a></li><li>How-to Guides<ul><li><a href=\"https://cloud.google.com/dialogflow/cx/docs\">Official Documentation</a></li></ul></li></ul><div class = \"oics-button\" style=\"float: right; margin: 0 0 -15px\">  <a href=\"https://console.cloud.google.com/cloudshell/open?cloudshell_git_repo=https%3A%2F%2Fgithub.com%2Fterraform-google-modules%2Fdocs-examples.git&cloudshell_working_dir=dialogflowcx_flow_full&cloudshell_image=gcr.io%2Fcloudshell-images%2Fcloudshell%3Alatest&open_in_editor=main.tf&cloudshell_print=.%2Fmotd&cloudshell_tutorial=.%2Ftutorial.md\" target=\"_blank\">    <img alt=\"Open in Cloud Shell\" src=\"//gstatic.com/cloudssh/images/open-btn.svg\" style=\"max-height: 44px; margin: 32px auto; max-width: 100%;\">  </a></div>"}