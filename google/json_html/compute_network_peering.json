{"google-compute-network-peering": "<h1 id=\"google_compute_network_peering\">google_compute_network_peering</h1><p>Manages a network peering within GCE. For more information see<br /><a href=\"https://cloud.google.com/compute/docs/vpc/vpc-peering\">the official documentation</a><br />and<br /><a href=\"https://cloud.google.com/compute/docs/reference/latest/networks\">API</a>.</p><p>-&gt; Both networks must create a peering with each other for the peering<br />to be functional.</p><p>~&gt; Subnets IP ranges across peered VPC networks cannot overlap.</p>", "example-usage": "<h2 id=\"example-usage\">Example Usage</h2><p><br />resource \"google_compute_network_peering\" \"peering1\" {<br />  name         = \"peering1\"<br />  network      = google_compute_network.default.self_link<br />  peer_network = google_compute_network.other.self_link<br />}</p><p>resource \"google_compute_network_peering\" \"peering2\" {<br />  name         = \"peering2\"<br />  network      = google_compute_network.other.self_link<br />  peer_network = google_compute_network.default.self_link<br />}</p><p>resource \"google_compute_network\" \"default\" {<br />  name                    = \"foobar\"<br />  auto_create_subnetworks = \"false\"<br />}</p><p>resource \"google_compute_network\" \"other\" {<br />  name                    = \"other\"<br />  auto_create_subnetworks = \"false\"<br />}<br /></p>", "argument-reference": "<h2 id=\"argument-reference\">Argument Reference</h2><p>The following arguments are supported:</p><ul><li><p><code>name</code> - (Required) Name of the peering.</p></li><li><p><code>network</code> - (Required) The primary network of the peering.</p></li><li><p><code>peer_network</code> - (Required) The peer network in the peering. The peer network<br />may belong to a different project.</p></li><li><p><code>export_custom_routes</code> - (Optional)<br />Whether to export the custom routes to the peer network. Defaults to <code>false</code>.</p></li><li><p><code>import_custom_routes</code> - (Optional)<br />Whether to import the custom routes from the peer network. Defaults to <code>false</code>.</p></li><li><p><code>export_subnet_routes_with_public_ip</code> - (Optional)<br />Whether subnet routes with public IP range are exported. The default value is true, all subnet routes are exported. The IPv4 special-use ranges (https://en.wikipedia.org/wiki/IPv4#Special_addresses) are always exported to peers and are not controlled by this field.</p></li><li><p><code>import_subnet_routes_with_public_ip</code> - (Optional)<br />Whether subnet routes with public IP range are imported. The default value is false. The IPv4 special-use ranges (https://en.wikipedia.org/wiki/IPv4#Special_addresses) are always imported from peers and are not controlled by this field.</p></li><li><p><code>stack_type</code> - (Optional)<br />Which IP version(s) of traffic and routes are allowed to be imported or exported between peer networks. The default value is IPV4_ONLY. Possible values: [\"IPV4_ONLY\", \"IPV4_IPV6\"].</p></li></ul>", "attributes-reference": "<h2 id=\"attributes-reference\">Attributes Reference</h2><p>In addition to the arguments listed above, the following computed attributes are<br />exported:</p><ul><li><p><code>id</code> - an identifier for the resource with format <code>{{network}}/{{name}}</code></p></li><li><p><code>state</code> - State for the peering, either <code>ACTIVE</code> or <code>INACTIVE</code>. The peering is<br /><code>ACTIVE</code> when there's a matching configuration in the peer network.</p></li><li><p><code>state_details</code> - Details about the current state of the peering.</p></li></ul>", "timeouts": "<h2 id=\"timeouts\">Timeouts</h2><p>This resource provides the following<br /><a href=\"https://developer.hashicorp.com/terraform/plugin/sdkv2/resources/retries-and-customizable-timeouts\">Timeouts</a> configuration options: configuration options:</p><ul><li><code>create</code> - Default is 4 minutes.</li><li><code>delete</code> - Default is 4 minutes.</li></ul>", "import": "<h2 id=\"import\">Import</h2><p>VPC network peerings can be imported using the name and project of the primary network the peering exists in and the name of the network peering</p><p><code>$ terraform import google_compute_network_peering.peering_network project-name/network-name/peering-name</code></p>", "description": "<h1 id=\"google_compute_network_peering\">google_compute_network_peering</h1><p>Manages a network peering within GCE. For more information see<br /><a href=\"https://cloud.google.com/compute/docs/vpc/vpc-peering\">the official documentation</a><br />and<br /><a href=\"https://cloud.google.com/compute/docs/reference/latest/networks\">API</a>.</p><p>-&gt; Both networks must create a peering with each other for the peering<br />to be functional.</p><p>~&gt; Subnets IP ranges across peered VPC networks cannot overlap.</p>"}