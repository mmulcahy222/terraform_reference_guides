{"": "<h1 id=\"-_2\">----------------------------------------------------------------------------</h1><p>subcategory: \"Cloud (Stackdriver) Monitoring\"<br />description: |-<br />  A Service-Level Objective (SLO) describes the level of desired good<br />  service.</p><hr />", "auto-generated-code-type-mmv1": "<h1 id=\"auto-generated-code-type-mmv1\"><strong><em>     AUTO GENERATED CODE    </em></strong>    Type: MMv1     ***</h1>", "this-file-is-automatically-generated-by-magic-modules-and-manual": "<h1 id=\"this-file-is-automatically-generated-by-magic-modules-and-manual\">This file is automatically generated by Magic Modules and manual</h1>", "changes-will-be-clobbered-when-the-file-is-regenerated": "<h1 id=\"changes-will-be-clobbered-when-the-file-is-regenerated\">changes will be clobbered when the file is regenerated.</h1>", "please-read-more-about-how-to-change-this-file-in": "<h1 id=\"please-read-more-about-how-to-change-this-file-in\">Please read more about how to change this file in</h1>", "github-contributing-md": "<h1 id=\"githubcontributingmd\">.github/CONTRIBUTING.md.</h1>", "google-monitoring-slo": "<h1 id=\"google_monitoring_slo\">google_monitoring_slo</h1><p>A Service-Level Objective (SLO) describes the level of desired good<br />service. It consists of a service-level indicator (SLI), a performance<br />goal, and a period over which the objective is to be evaluated against<br />that goal. The SLO can use SLIs defined in a number of different manners.<br />Typical SLOs might include \"99% of requests in each rolling week have<br />latency below 200 milliseconds\" or \"99.5% of requests in each calendar<br />month return successfully.\"</p><p>To get more information about Slo, see:</p><ul><li><a href=\"https://cloud.google.com/monitoring/api/ref_v3/rest/v3/services.serviceLevelObjectives\">API documentation</a></li><li>How-to Guides<ul><li><a href=\"https://cloud.google.com/monitoring/service-monitoring\">Service Monitoring</a></li><li><a href=\"https://cloud.google.com/monitoring/api/v3/\">Monitoring API Documentation</a></li></ul></li></ul><div class = \"oics-button\" style=\"float: right; margin: 0 0 -15px\">  <a href=\"https://console.cloud.google.com/cloudshell/open?cloudshell_git_repo=https%3A%2F%2Fgithub.com%2Fterraform-google-modules%2Fdocs-examples.git&cloudshell_working_dir=monitoring_slo_appengine&cloudshell_image=gcr.io%2Fcloudshell-images%2Fcloudshell%3Alatest&open_in_editor=main.tf&cloudshell_print=.%2Fmotd&cloudshell_tutorial=.%2Ftutorial.md\" target=\"_blank\">    <img alt=\"Open in Cloud Shell\" src=\"//gstatic.com/cloudssh/images/open-btn.svg\" style=\"max-height: 44px; margin: 32px auto; max-width: 100%;\">  </a></div>", "example-usage---monitoring-slo-appengine": "<h2 id=\"example-usage-monitoring-slo-appengine\">Example Usage - Monitoring Slo Appengine</h2><p>data \"google_monitoring_app_engine_service\" \"default\" {<br />  module_id = \"default\"<br />}</p><p>resource \"google_monitoring_slo\" \"appeng_slo\" {<br />  service = data.google_monitoring_app_engine_service.default.service_id</p><p>slo_id = \"ae-slo\"<br />  display_name = \"Terraform Test SLO for App Engine\"</p><p>goal = 0.9<br />  calendar_period = \"DAY\"</p><p>basic_sli {<br />    latency {<br />      threshold = \"1s\"<br />    }<br />  }</p><p>user_labels = {<br />    my_key       = \"my_value\"<br />    my_other_key = \"my_other_value\"<br />  }<br />}</p>", "example-usage---monitoring-slo-request-based": "<h2 id=\"example-usage-monitoring-slo-request-based\">Example Usage - Monitoring Slo Request Based</h2><p>resource \"google_monitoring_custom_service\" \"customsrv\" {<br />  service_id = \"custom-srv-request-slos\"<br />  display_name = \"My Custom Service\"<br />}</p><p>resource \"google_monitoring_slo\" \"request_based_slo\" {<br />  service = google_monitoring_custom_service.customsrv.service_id<br />  slo_id = \"consumed-api-slo\"<br />  display_name = \"Terraform Test SLO with request based SLI (good total ratio)\"</p><p>goal = 0.9<br />  rolling_period_days = 30</p><p>request_based_sli {<br />    distribution_cut {<br />          distribution_filter = \"metric.type=\\\"serviceruntime.googleapis.com/api/request_latencies\\\" resource.type=\\\"api\\\"  \"<br />          range {<br />            max = 0.5<br />          }<br />        }<br />  }<br />}</p><div class = \"oics-button\" style=\"float: right; margin: 0 0 -15px\">  <a href=\"https://console.cloud.google.com/cloudshell/open?cloudshell_git_repo=https%3A%2F%2Fgithub.com%2Fterraform-google-modules%2Fdocs-examples.git&cloudshell_working_dir=monitoring_slo_windows_based_good_bad_metric_filter&cloudshell_image=gcr.io%2Fcloudshell-images%2Fcloudshell%3Alatest&open_in_editor=main.tf&cloudshell_print=.%2Fmotd&cloudshell_tutorial=.%2Ftutorial.md\" target=\"_blank\">    <img alt=\"Open in Cloud Shell\" src=\"//gstatic.com/cloudssh/images/open-btn.svg\" style=\"max-height: 44px; margin: 32px auto; max-width: 100%;\">  </a></div>", "example-usage---monitoring-slo-windows-based-good-bad-metric-filter": "<h2 id=\"example-usage-monitoring-slo-windows-based-good-bad-metric-filter\">Example Usage - Monitoring Slo Windows Based Good Bad Metric Filter</h2><p>resource \"google_monitoring_custom_service\" \"customsrv\" {<br />  service_id = \"custom-srv-windows-slos\"<br />  display_name = \"My Custom Service\"<br />}</p><p>resource \"google_monitoring_slo\" \"windows_based\" {<br />  service = google_monitoring_custom_service.customsrv.service_id<br />  display_name = \"Terraform Test SLO with window based SLI\"</p><p>goal = 0.95<br />  calendar_period = \"FORTNIGHT\"</p><p>windows_based_sli {<br />    window_period = \"400s\"<br />    good_bad_metric_filter =  join(\" AND \", [<br />      \"metric.type=\\\"monitoring.googleapis.com/uptime_check/check_passed\\\"\",<br />      \"resource.type=\\\"uptime_url\\\"\",<br />    ])<br />  }<br />}</p><div class = \"oics-button\" style=\"float: right; margin: 0 0 -15px\">  <a href=\"https://console.cloud.google.com/cloudshell/open?cloudshell_git_repo=https%3A%2F%2Fgithub.com%2Fterraform-google-modules%2Fdocs-examples.git&cloudshell_working_dir=monitoring_slo_windows_based_metric_mean&cloudshell_image=gcr.io%2Fcloudshell-images%2Fcloudshell%3Alatest&open_in_editor=main.tf&cloudshell_print=.%2Fmotd&cloudshell_tutorial=.%2Ftutorial.md\" target=\"_blank\">    <img alt=\"Open in Cloud Shell\" src=\"//gstatic.com/cloudssh/images/open-btn.svg\" style=\"max-height: 44px; margin: 32px auto; max-width: 100%;\">  </a></div>", "example-usage---monitoring-slo-windows-based-metric-mean": "<h2 id=\"example-usage-monitoring-slo-windows-based-metric-mean\">Example Usage - Monitoring Slo Windows Based Metric Mean</h2><p>resource \"google_monitoring_custom_service\" \"customsrv\" {<br />  service_id = \"custom-srv-windows-slos\"<br />  display_name = \"My Custom Service\"<br />}</p><p>resource \"google_monitoring_slo\" \"windows_based\" {<br />  service = google_monitoring_custom_service.customsrv.service_id<br />  display_name = \"Terraform Test SLO with window based SLI\"</p><p>goal = 0.9<br />  rolling_period_days = 20</p><p>windows_based_sli {<br />    window_period = \"600s\"<br />    metric_mean_in_range {<br />      time_series = join(\" AND \", [<br />        \"metric.type=\\\"agent.googleapis.com/cassandra/client_request/latency/95p\\\"\",<br />        \"resource.type=\\\"gce_instance\\\"\",<br />      ])</p><pre><code>  range {    max = 5  }}</code></pre><p>}<br />}</p><div class = \"oics-button\" style=\"float: right; margin: 0 0 -15px\">  <a href=\"https://console.cloud.google.com/cloudshell/open?cloudshell_git_repo=https%3A%2F%2Fgithub.com%2Fterraform-google-modules%2Fdocs-examples.git&cloudshell_working_dir=monitoring_slo_windows_based_metric_sum&cloudshell_image=gcr.io%2Fcloudshell-images%2Fcloudshell%3Alatest&open_in_editor=main.tf&cloudshell_print=.%2Fmotd&cloudshell_tutorial=.%2Ftutorial.md\" target=\"_blank\">    <img alt=\"Open in Cloud Shell\" src=\"//gstatic.com/cloudssh/images/open-btn.svg\" style=\"max-height: 44px; margin: 32px auto; max-width: 100%;\">  </a></div>", "example-usage---monitoring-slo-windows-based-metric-sum": "<h2 id=\"example-usage-monitoring-slo-windows-based-metric-sum\">Example Usage - Monitoring Slo Windows Based Metric Sum</h2><p>resource \"google_monitoring_custom_service\" \"customsrv\" {<br />  service_id = \"custom-srv-windows-slos\"<br />  display_name = \"My Custom Service\"<br />}</p><p>resource \"google_monitoring_slo\" \"windows_based\" {<br />  service = google_monitoring_custom_service.customsrv.service_id<br />  display_name = \"Terraform Test SLO with window based SLI\"</p><p>goal = 0.9<br />  rolling_period_days = 20</p><p>windows_based_sli {<br />    window_period = \"400s\"<br />    metric_sum_in_range {<br />      time_series = join(\" AND \", [<br />        \"metric.type=\\\"monitoring.googleapis.com/uptime_check/request_latency\\\"\",<br />        \"resource.type=\\\"uptime_url\\\"\",<br />      ])</p><pre><code>  range {    max = 5000  }}</code></pre><p>}<br />}</p><div class = \"oics-button\" style=\"float: right; margin: 0 0 -15px\">  <a href=\"https://console.cloud.google.com/cloudshell/open?cloudshell_git_repo=https%3A%2F%2Fgithub.com%2Fterraform-google-modules%2Fdocs-examples.git&cloudshell_working_dir=monitoring_slo_windows_based_ratio_threshold&cloudshell_image=gcr.io%2Fcloudshell-images%2Fcloudshell%3Alatest&open_in_editor=main.tf&cloudshell_print=.%2Fmotd&cloudshell_tutorial=.%2Ftutorial.md\" target=\"_blank\">    <img alt=\"Open in Cloud Shell\" src=\"//gstatic.com/cloudssh/images/open-btn.svg\" style=\"max-height: 44px; margin: 32px auto; max-width: 100%;\">  </a></div>", "example-usage---monitoring-slo-windows-based-ratio-threshold": "<h2 id=\"example-usage-monitoring-slo-windows-based-ratio-threshold\">Example Usage - Monitoring Slo Windows Based Ratio Threshold</h2><p>resource \"google_monitoring_custom_service\" \"customsrv\" {<br />  service_id = \"custom-srv-windows-slos\"<br />  display_name = \"My Custom Service\"<br />}</p><p>resource \"google_monitoring_slo\" \"windows_based\" {<br />  service = google_monitoring_custom_service.customsrv.service_id<br />  display_name = \"Terraform Test SLO with window based SLI\"</p><p>goal = 0.9<br />  rolling_period_days = 20</p><p>windows_based_sli {<br />    window_period = \"100s\"</p><pre><code>good_total_ratio_threshold {  threshold = 0.1  performance {    distribution_cut {      distribution_filter = join(\" AND \", [        \"metric.type=\\\"serviceruntime.googleapis.com/api/request_latencies\\\"\",        \"resource.type=\\\"consumed_api\\\"\",      ])      range {        min = 1        max = 9      }    }  }}</code></pre><p>}<br />}</p>", "argument-reference": "<h2 id=\"argument-reference\">Argument Reference</h2><p>The following arguments are supported:</p><ul><li><p><code>goal</code> -<br />  (Required)<br />  The fraction of service that must be good in order for this objective<br />  to be met. 0 &lt; goal &lt;= 0.999</p></li><li><p><code>service</code> -<br />  (Required)<br />  ID of the service to which this SLO belongs.</p></li></ul><hr /><ul><li><p><code>display_name</code> -<br />  (Optional)<br />  Name used for UI elements listing this SLO.</p></li><li><p><code>rolling_period_days</code> -<br />  (Optional)<br />  A rolling time period, semantically \"in the past X days\".<br />  Must be between 1 to 30 days, inclusive.</p></li><li><p><code>calendar_period</code> -<br />  (Optional)<br />  A calendar period, semantically \"since the start of the current<br />  <calendarPeriod>\".<br />  Possible values are: <code>DAY</code>, <code>WEEK</code>, <code>FORTNIGHT</code>, <code>MONTH</code>.</p></li><li><p><code>user_labels</code> -<br />  (Optional)<br />  This field is intended to be used for organizing and identifying the AlertPolicy<br />  objects.The field can contain up to 64 entries. Each key and value is limited<br />  to 63 Unicode characters or 128 bytes, whichever is smaller. Labels and values<br />  can contain only lowercase letters, numerals, underscores, and dashes. Keys<br />  must begin with a letter.</p></li><li><p><code>basic_sli</code> -<br />  (Optional)<br />  Basic Service-Level Indicator (SLI) on a well-known service type.<br />  Performance will be computed on the basis of pre-defined metrics.<br />  SLIs are used to measure and calculate the quality of the Service's<br />  performance with respect to a single aspect of service quality.<br />  Exactly one of the following must be set:<br /><code>basic_sli</code>, <code>request_based_sli</code>, <code>windows_based_sli</code><br />  Structure is <a href=\"#nested_basic_sli\">documented below</a>.</p></li><li><p><code>request_based_sli</code> -<br />  (Optional)<br />  A request-based SLI defines a SLI for which atomic units of<br />  service are counted directly.<br />  A SLI describes a good service.<br />  It is used to measure and calculate the quality of the Service's<br />  performance with respect to a single aspect of service quality.<br />  Exactly one of the following must be set:<br /><code>basic_sli</code>, <code>request_based_sli</code>, <code>windows_based_sli</code><br />  Structure is <a href=\"#nested_request_based_sli\">documented below</a>.</p></li><li><p><code>windows_based_sli</code> -<br />  (Optional)<br />  A windows-based SLI defines the criteria for time windows.<br />  good_service is defined based off the count of these time windows<br />  for which the provided service was of good quality.<br />  A SLI describes a good service. It is used to measure and calculate<br />  the quality of the Service's performance with respect to a single<br />  aspect of service quality.<br />  Exactly one of the following must be set:<br /><code>basic_sli</code>, <code>request_based_sli</code>, <code>windows_based_sli</code><br />  Structure is <a href=\"#nested_windows_based_sli\">documented below</a>.</p></li><li><p><code>slo_id</code> -<br />  (Optional)<br />  The id to use for this ServiceLevelObjective. If omitted, an id will be generated instead.</p></li><li><p><code>project</code> - (Optional) The ID of the project in which the resource belongs.<br />    If it is not provided, the provider project is used.</p></li></ul><p><a name=\"nested_basic_sli\"></a>The <code>basic_sli</code> block supports:</p><ul><li><p><code>method</code> -<br />  (Optional)<br />  An optional set of RPCs to which this SLI is relevant.<br />  Telemetry from other methods will not be used to calculate<br />  performance for this SLI. If omitted, this SLI applies to all<br />  the Service's methods. For service types that don't support<br />  breaking down by method, setting this field will result in an<br />  error.</p></li><li><p><code>location</code> -<br />  (Optional)<br />  An optional set of locations to which this SLI is relevant.<br />  Telemetry from other locations will not be used to calculate<br />  performance for this SLI. If omitted, this SLI applies to all<br />  locations in which the Service has activity. For service types<br />  that don't support breaking down by location, setting this<br />  field will result in an error.</p></li><li><p><code>version</code> -<br />  (Optional)<br />  The set of API versions to which this SLI is relevant.<br />  Telemetry from other API versions will not be used to<br />  calculate performance for this SLI. If omitted,<br />  this SLI applies to all API versions. For service types<br />  that don't support breaking down by version, setting this<br />  field will result in an error.</p></li><li><p><code>latency</code> -<br />  (Optional)<br />  Parameters for a latency threshold SLI.<br />  Structure is <a href=\"#nested_latency\">documented below</a>.</p></li><li><p><code>availability</code> -<br />  (Optional)<br />  Availability based SLI, dervied from count of requests made to this service that return successfully.<br />  Structure is <a href=\"#nested_availability\">documented below</a>.</p></li></ul><p><a name=\"nested_latency\"></a>The <code>latency</code> block supports:</p><ul><li><code>threshold</code> -<br />  (Required)<br />  A duration string, e.g. 10s.<br />  Good service is defined to be the count of requests made to<br />  this service that return in no more than threshold.</li></ul><p><a name=\"nested_availability\"></a>The <code>availability</code> block supports:</p><ul><li><code>enabled</code> -<br />  (Optional)<br />  Whether an availability SLI is enabled or not. Must be set to true. Defaults to <code>true</code>.</li></ul><p><a name=\"nested_request_based_sli\"></a>The <code>request_based_sli</code> block supports:</p><ul><li><p><code>good_total_ratio</code> -<br />  (Optional)<br />  A means to compute a ratio of <code>good_service</code> to <code>total_service</code>.<br />  Defines computing this ratio with two TimeSeries <a href=\"https://cloud.google.com/monitoring/api/v3/filters\">monitoring filters</a><br />  Must specify exactly two of good, bad, and total service filters.<br />  The relationship good_service + bad_service = total_service<br />  will be assumed.<br />  Exactly one of <code>distribution_cut</code> or <code>good_total_ratio</code> can be set.<br />  Structure is <a href=\"#nested_good_total_ratio\">documented below</a>.</p></li><li><p><code>distribution_cut</code> -<br />  (Optional)<br />  Used when good_service is defined by a count of values aggregated in a<br />  Distribution that fall into a good range. The total_service is the<br />  total count of all values aggregated in the Distribution.<br />  Defines a distribution TimeSeries filter and thresholds used for<br />  measuring good service and total service.<br />  Exactly one of <code>distribution_cut</code> or <code>good_total_ratio</code> can be set.<br />  Structure is <a href=\"#nested_distribution_cut\">documented below</a>.</p></li></ul><p><a name=\"nested_good_total_ratio\"></a>The <code>good_total_ratio</code> block supports:</p><ul><li><p><code>good_service_filter</code> -<br />  (Optional)<br />  A TimeSeries <a href=\"https://cloud.google.com/monitoring/api/v3/filters\">monitoring filter</a><br />  quantifying good service provided.<br />  Must have ValueType = DOUBLE or ValueType = INT64 and<br />  must have MetricKind = DELTA or MetricKind = CUMULATIVE.<br />  Exactly two of <code>good_service_filter</code>,<code>bad_service_filter</code>,<code>total_service_filter</code><br />  must be set (good + bad = total is assumed).</p></li><li><p><code>bad_service_filter</code> -<br />  (Optional)<br />  A TimeSeries <a href=\"https://cloud.google.com/monitoring/api/v3/filters\">monitoring filter</a><br />  quantifying bad service provided, either demanded service that<br />  was not provided or demanded service that was of inadequate<br />  quality.<br />  Must have ValueType = DOUBLE or ValueType = INT64 and<br />  must have MetricKind = DELTA or MetricKind = CUMULATIVE.<br />  Exactly two of <code>good_service_filter</code>,<code>bad_service_filter</code>,<code>total_service_filter</code><br />  must be set (good + bad = total is assumed).</p></li><li><p><code>total_service_filter</code> -<br />  (Optional)<br />  A TimeSeries <a href=\"https://cloud.google.com/monitoring/api/v3/filters\">monitoring filter</a><br />  quantifying total demanded service.<br />  Must have ValueType = DOUBLE or ValueType = INT64 and<br />  must have MetricKind = DELTA or MetricKind = CUMULATIVE.<br />  Exactly two of <code>good_service_filter</code>,<code>bad_service_filter</code>,<code>total_service_filter</code><br />  must be set (good + bad = total is assumed).</p></li></ul><p><a name=\"nested_distribution_cut\"></a>The <code>distribution_cut</code> block supports:</p><ul><li><p><code>distribution_filter</code> -<br />  (Required)<br />  A TimeSeries <a href=\"https://cloud.google.com/monitoring/api/v3/filters\">monitoring filter</a><br />  aggregating values to quantify the good service provided.<br />  Must have ValueType = DISTRIBUTION and<br />  MetricKind = DELTA or MetricKind = CUMULATIVE.</p></li><li><p><code>range</code> -<br />  (Required)<br />  Range of numerical values. The computed good_service<br />  will be the count of values x in the Distribution such<br />  that range.min &lt;= x &lt;= range.max. inclusive of min and<br />  max. Open ranges can be defined by setting<br />  just one of min or max.<br />  Structure is <a href=\"#nested_range\">documented below</a>.</p></li></ul><p><a name=\"nested_range\"></a>The <code>range</code> block supports:</p><ul><li><p><code>min</code> -<br />  (Optional)<br />  Min value for the range (inclusive). If not given,<br />  will be set to 0</p></li><li><p><code>max</code> -<br />  (Optional)<br />  max value for the range (inclusive). If not given,<br />  will be set to 0</p></li></ul><p><a name=\"nested_windows_based_sli\"></a>The <code>windows_based_sli</code> block supports:</p><ul><li><p><code>window_period</code> -<br />  (Optional)<br />  Duration over which window quality is evaluated, given as a<br />  duration string \"{X}s\" representing X seconds. Must be an<br />  integer fraction of a day and at least 60s.</p></li><li><p><code>good_bad_metric_filter</code> -<br />  (Optional)<br />  A TimeSeries <a href=\"https://cloud.google.com/monitoring/api/v3/filters\">monitoring filter</a><br />  with ValueType = BOOL. The window is good if any true values<br />  appear in the window. One of <code>good_bad_metric_filter</code>,<br /><code>good_total_ratio_threshold</code>, <code>metric_mean_in_range</code>,<br /><code>metric_sum_in_range</code> must be set for <code>windows_based_sli</code>.</p></li><li><p><code>good_total_ratio_threshold</code> -<br />  (Optional)<br />  Criterion that describes a window as good if its performance is<br />  high enough. One of <code>good_bad_metric_filter</code>,<br /><code>good_total_ratio_threshold</code>, <code>metric_mean_in_range</code>,<br /><code>metric_sum_in_range</code> must be set for <code>windows_based_sli</code>.<br />  Structure is <a href=\"#nested_good_total_ratio_threshold\">documented below</a>.</p></li><li><p><code>metric_mean_in_range</code> -<br />  (Optional)<br />  Criterion that describes a window as good if the metric's value<br />  is in a good range, <em>averaged</em> across returned streams.<br />  One of <code>good_bad_metric_filter</code>,<br /><code>good_total_ratio_threshold</code>, <code>metric_mean_in_range</code>,<br /><code>metric_sum_in_range</code> must be set for <code>windows_based_sli</code>.<br />  Average value X of <code>time_series</code> should satisfy<br /><code>range.min &lt;= X &lt;= range.max</code> for a good window.<br />  Structure is <a href=\"#nested_metric_mean_in_range\">documented below</a>.</p></li><li><p><code>metric_sum_in_range</code> -<br />  (Optional)<br />  Criterion that describes a window as good if the metric's value<br />  is in a good range, <em>summed</em> across returned streams.<br />  Summed value <code>X</code> of <code>time_series</code> should satisfy<br /><code>range.min &lt;= X &lt;= range.max</code> for a good window.<br />  One of <code>good_bad_metric_filter</code>,<br /><code>good_total_ratio_threshold</code>, <code>metric_mean_in_range</code>,<br /><code>metric_sum_in_range</code> must be set for <code>windows_based_sli</code>.<br />  Structure is <a href=\"#nested_metric_sum_in_range\">documented below</a>.</p></li></ul><p><a name=\"nested_good_total_ratio_threshold\"></a>The <code>good_total_ratio_threshold</code> block supports:</p><ul><li><p><code>threshold</code> -<br />  (Optional)<br />  If window performance &gt;= threshold, the window is counted<br />  as good.</p></li><li><p><code>performance</code> -<br />  (Optional)<br />  Request-based SLI to evaluate to judge window quality.<br />  Structure is <a href=\"#nested_performance\">documented below</a>.</p></li><li><p><code>basic_sli_performance</code> -<br />  (Optional)<br />  Basic SLI to evaluate to judge window quality.<br />  Structure is <a href=\"#nested_basic_sli_performance\">documented below</a>.</p></li></ul><p><a name=\"nested_performance\"></a>The <code>performance</code> block supports:</p><ul><li><p><code>good_total_ratio</code> -<br />  (Optional)<br />  A means to compute a ratio of <code>good_service</code> to <code>total_service</code>.<br />  Defines computing this ratio with two TimeSeries <a href=\"https://cloud.google.com/monitoring/api/v3/filters\">monitoring filters</a><br />  Must specify exactly two of good, bad, and total service filters.<br />  The relationship good_service + bad_service = total_service<br />  will be assumed.<br />  Structure is <a href=\"#nested_good_total_ratio\">documented below</a>.</p></li><li><p><code>distribution_cut</code> -<br />  (Optional)<br />  Used when good_service is defined by a count of values aggregated in a<br />  Distribution that fall into a good range. The total_service is the<br />  total count of all values aggregated in the Distribution.<br />  Defines a distribution TimeSeries filter and thresholds used for<br />  measuring good service and total service.<br />  Structure is <a href=\"#nested_distribution_cut\">documented below</a>.</p></li></ul><p><a name=\"nested_good_total_ratio\"></a>The <code>good_total_ratio</code> block supports:</p><ul><li><p><code>good_service_filter</code> -<br />  (Optional)<br />  A TimeSeries <a href=\"https://cloud.google.com/monitoring/api/v3/filters\">monitoring filter</a><br />  quantifying good service provided. Exactly two of<br />  good, bad, or total service filter must be defined (where<br />  good + bad = total is assumed)<br />  Must have ValueType = DOUBLE or ValueType = INT64 and<br />  must have MetricKind = DELTA or MetricKind = CUMULATIVE.</p></li><li><p><code>bad_service_filter</code> -<br />  (Optional)<br />  A TimeSeries <a href=\"https://cloud.google.com/monitoring/api/v3/filters\">monitoring filter</a><br />  quantifying bad service provided, either demanded service that<br />  was not provided or demanded service that was of inadequate<br />  quality. Exactly two of<br />  good, bad, or total service filter must be defined (where<br />  good + bad = total is assumed)<br />  Must have ValueType = DOUBLE or ValueType = INT64 and<br />  must have MetricKind = DELTA or MetricKind = CUMULATIVE.</p></li><li><p><code>total_service_filter</code> -<br />  (Optional)<br />  A TimeSeries <a href=\"https://cloud.google.com/monitoring/api/v3/filters\">monitoring filter</a><br />  quantifying total demanded service. Exactly two of<br />  good, bad, or total service filter must be defined (where<br />  good + bad = total is assumed)<br />  Must have ValueType = DOUBLE or ValueType = INT64 and<br />  must have MetricKind = DELTA or MetricKind = CUMULATIVE.</p></li></ul><p><a name=\"nested_distribution_cut\"></a>The <code>distribution_cut</code> block supports:</p><ul><li><p><code>distribution_filter</code> -<br />  (Required)<br />  A TimeSeries <a href=\"https://cloud.google.com/monitoring/api/v3/filters\">monitoring filter</a><br />  aggregating values to quantify the good service provided.<br />  Must have ValueType = DISTRIBUTION and<br />  MetricKind = DELTA or MetricKind = CUMULATIVE.</p></li><li><p><code>range</code> -<br />  (Required)<br />  Range of numerical values. The computed good_service<br />  will be the count of values x in the Distribution such<br />  that range.min &lt;= x &lt;= range.max. inclusive of min and<br />  max. Open ranges can be defined by setting<br />  just one of min or max.<br />  Structure is <a href=\"#nested_range\">documented below</a>.</p></li></ul><p><a name=\"nested_range\"></a>The <code>range</code> block supports:</p><ul><li><p><code>min</code> -<br />  (Optional)<br />  Min value for the range (inclusive). If not given,<br />  will be set to 0</p></li><li><p><code>max</code> -<br />  (Optional)<br />  max value for the range (inclusive). If not given,<br />  will be set to 0</p></li></ul><p><a name=\"nested_basic_sli_performance\"></a>The <code>basic_sli_performance</code> block supports:</p><ul><li><p><code>method</code> -<br />  (Optional)<br />  An optional set of RPCs to which this SLI is relevant.<br />  Telemetry from other methods will not be used to calculate<br />  performance for this SLI. If omitted, this SLI applies to all<br />  the Service's methods. For service types that don't support<br />  breaking down by method, setting this field will result in an<br />  error.</p></li><li><p><code>location</code> -<br />  (Optional)<br />  An optional set of locations to which this SLI is relevant.<br />  Telemetry from other locations will not be used to calculate<br />  performance for this SLI. If omitted, this SLI applies to all<br />  locations in which the Service has activity. For service types<br />  that don't support breaking down by location, setting this<br />  field will result in an error.</p></li><li><p><code>version</code> -<br />  (Optional)<br />  The set of API versions to which this SLI is relevant.<br />  Telemetry from other API versions will not be used to<br />  calculate performance for this SLI. If omitted,<br />  this SLI applies to all API versions. For service types<br />  that don't support breaking down by version, setting this<br />  field will result in an error.</p></li><li><p><code>latency</code> -<br />  (Optional)<br />  Parameters for a latency threshold SLI.<br />  Structure is <a href=\"#nested_latency\">documented below</a>.</p></li><li><p><code>availability</code> -<br />  (Optional)<br />  Availability based SLI, dervied from count of requests made to this service that return successfully.<br />  Structure is <a href=\"#nested_availability\">documented below</a>.</p></li></ul><p><a name=\"nested_latency\"></a>The <code>latency</code> block supports:</p><ul><li><code>threshold</code> -<br />  (Required)<br />  A duration string, e.g. 10s.<br />  Good service is defined to be the count of requests made to<br />  this service that return in no more than threshold.</li></ul><p><a name=\"nested_availability\"></a>The <code>availability</code> block supports:</p><ul><li><code>enabled</code> -<br />  (Optional)<br />  Whether an availability SLI is enabled or not. Must be set to <code>true. Defaults to</code>true`.</li></ul><p><a name=\"nested_metric_mean_in_range\"></a>The <code>metric_mean_in_range</code> block supports:</p><ul><li><p><code>time_series</code> -<br />  (Required)<br />  A <a href=\"https://cloud.google.com/monitoring/api/v3/filters\">monitoring filter</a><br />  specifying the TimeSeries to use for evaluating window<br />  The provided TimeSeries must have ValueType = INT64 or<br />  ValueType = DOUBLE and MetricKind = GAUGE. Mean value <code>X</code><br />  should satisfy <code>range.min &lt;= X &lt;= range.max</code><br />  under good service.</p></li><li><p><code>range</code> -<br />  (Required)<br />  Range of numerical values. The computed good_service<br />  will be the count of values x in the Distribution such<br />  that range.min &lt;= x &lt;= range.max. inclusive of min and<br />  max. Open ranges can be defined by setting<br />  just one of min or max. Mean value <code>X</code> of <code>time_series</code><br />  values should satisfy <code>range.min &lt;= X &lt;= range.max</code> for a<br />  good service.<br />  Structure is <a href=\"#nested_range\">documented below</a>.</p></li></ul><p><a name=\"nested_range\"></a>The <code>range</code> block supports:</p><ul><li><p><code>min</code> -<br />  (Optional)<br />  Min value for the range (inclusive). If not given,<br />  will be set to \"-infinity\", defining an open range<br />  \"&lt; range.max\"</p></li><li><p><code>max</code> -<br />  (Optional)<br />  max value for the range (inclusive). If not given,<br />  will be set to \"infinity\", defining an open range<br />  \"&gt;= range.min\"</p></li></ul><p><a name=\"nested_metric_sum_in_range\"></a>The <code>metric_sum_in_range</code> block supports:</p><ul><li><p><code>time_series</code> -<br />  (Required)<br />  A <a href=\"https://cloud.google.com/monitoring/api/v3/filters\">monitoring filter</a><br />  specifying the TimeSeries to use for evaluating window<br />  quality. The provided TimeSeries must have<br />  ValueType = INT64 or ValueType = DOUBLE and<br />  MetricKind = GAUGE.<br />  Summed value <code>X</code> should satisfy<br /><code>range.min &lt;= X &lt;= range.max</code> for a good window.</p></li><li><p><code>range</code> -<br />  (Required)<br />  Range of numerical values. The computed good_service<br />  will be the count of values x in the Distribution such<br />  that range.min &lt;= x &lt;= range.max. inclusive of min and<br />  max. Open ranges can be defined by setting<br />  just one of min or max. Summed value <code>X</code> should satisfy<br /><code>range.min &lt;= X &lt;= range.max</code> for a good window.<br />  Structure is <a href=\"#nested_range\">documented below</a>.</p></li></ul><p><a name=\"nested_range\"></a>The <code>range</code> block supports:</p><ul><li><p><code>min</code> -<br />  (Optional)<br />  Min value for the range (inclusive). If not given,<br />  will be set to \"-infinity\", defining an open range<br />  \"&lt; range.max\"</p></li><li><p><code>max</code> -<br />  (Optional)<br />  max value for the range (inclusive). If not given,<br />  will be set to \"infinity\", defining an open range<br />  \"&gt;= range.min\"</p></li></ul>", "attributes-reference": "<h2 id=\"attributes-reference\">Attributes Reference</h2><p>In addition to the arguments listed above, the following computed attributes are exported:</p><ul><li><p><code>id</code> - an identifier for the resource with format <code>{{name}}</code></p></li><li><p><code>name</code> -<br />  The full resource name for this service. The syntax is:<br />  projects/[PROJECT_ID_OR_NUMBER]/services/[SERVICE_ID]/serviceLevelObjectives/[SLO_NAME]</p></li></ul>", "timeouts": "<h2 id=\"timeouts\">Timeouts</h2><p>This resource provides the following<br /><a href=\"https://developer.hashicorp.com/terraform/plugin/sdkv2/resources/retries-and-customizable-timeouts\">Timeouts</a> configuration options:</p><ul><li><code>create</code> - Default is 20 minutes.</li><li><code>update</code> - Default is 20 minutes.</li><li><code>delete</code> - Default is 20 minutes.</li></ul>", "import": "<h2 id=\"import\">Import</h2><p>Slo can be imported using any of these accepted formats:</p><p>$ terraform import google_monitoring_slo.default {{name}}</p>", "user-project-overrides": "<h2 id=\"user-project-overrides\">User Project Overrides</h2><p>This resource supports <a href=\"https://registry.terraform.io/providers/hashicorp/google/latest/docs/guides/provider_reference#user_project_override\">User Project Overrides</a>.</p>", "description": "<h1 id=\"google_monitoring_slo\">google_monitoring_slo</h1><p>A Service-Level Objective (SLO) describes the level of desired good<br />service. It consists of a service-level indicator (SLI), a performance<br />goal, and a period over which the objective is to be evaluated against<br />that goal. The SLO can use SLIs defined in a number of different manners.<br />Typical SLOs might include \"99% of requests in each rolling week have<br />latency below 200 milliseconds\" or \"99.5% of requests in each calendar<br />month return successfully.\"</p><p>To get more information about Slo, see:</p><ul><li><a href=\"https://cloud.google.com/monitoring/api/ref_v3/rest/v3/services.serviceLevelObjectives\">API documentation</a></li><li>How-to Guides<ul><li><a href=\"https://cloud.google.com/monitoring/service-monitoring\">Service Monitoring</a></li><li><a href=\"https://cloud.google.com/monitoring/api/v3/\">Monitoring API Documentation</a></li></ul></li></ul><div class = \"oics-button\" style=\"float: right; margin: 0 0 -15px\">  <a href=\"https://console.cloud.google.com/cloudshell/open?cloudshell_git_repo=https%3A%2F%2Fgithub.com%2Fterraform-google-modules%2Fdocs-examples.git&cloudshell_working_dir=monitoring_slo_appengine&cloudshell_image=gcr.io%2Fcloudshell-images%2Fcloudshell%3Alatest&open_in_editor=main.tf&cloudshell_print=.%2Fmotd&cloudshell_tutorial=.%2Ftutorial.md\" target=\"_blank\">    <img alt=\"Open in Cloud Shell\" src=\"//gstatic.com/cloudssh/images/open-btn.svg\" style=\"max-height: 44px; margin: 32px auto; max-width: 100%;\">  </a></div>"}