{"": "<h1 id=\"-_2\">----------------------------------------------------------------------------</h1><p>subcategory: \"Network security\"<br />description: |-<br />  ClientTlsPolicy is a resource that specifies how a client should authenticate connections to backends of a service.</p><hr />", "auto-generated-code-type-mmv1": "<h1 id=\"auto-generated-code-type-mmv1\"><strong><em>     AUTO GENERATED CODE    </em></strong>    Type: MMv1     ***</h1>", "this-file-is-automatically-generated-by-magic-modules-and-manual": "<h1 id=\"this-file-is-automatically-generated-by-magic-modules-and-manual\">This file is automatically generated by Magic Modules and manual</h1>", "changes-will-be-clobbered-when-the-file-is-regenerated": "<h1 id=\"changes-will-be-clobbered-when-the-file-is-regenerated\">changes will be clobbered when the file is regenerated.</h1>", "please-read-more-about-how-to-change-this-file-in": "<h1 id=\"please-read-more-about-how-to-change-this-file-in\">Please read more about how to change this file in</h1>", "github-contributing-md": "<h1 id=\"githubcontributingmd\">.github/CONTRIBUTING.md.</h1>", "google-network-security-server-tls-policy": "<h1 id=\"google_network_security_server_tls_policy\">google_network_security_server_tls_policy</h1><p>ClientTlsPolicy is a resource that specifies how a client should authenticate connections to backends of a service. This resource itself does not affect configuration unless it is attached to a backend service resource.</p><p>~&gt; <strong>Warning:</strong> This resource is in beta, and should be used with the terraform-provider-google-beta provider.<br />See <a href=\"https://terraform.io/docs/providers/google/guides/provider_versions.html\">Provider Versions</a> for more details on beta resources.</p><p>To get more information about ServerTlsPolicy, see:</p><ul><li><a href=\"https://cloud.google.com/traffic-director/docs/reference/network-security/rest/v1beta1/projects.locations.serverTlsPolicies\">API documentation</a></li></ul><div class = \"oics-button\" style=\"float: right; margin: 0 0 -15px\">  <a href=\"https://console.cloud.google.com/cloudshell/open?cloudshell_git_repo=https%3A%2F%2Fgithub.com%2Fterraform-google-modules%2Fdocs-examples.git&cloudshell_working_dir=network_security_server_tls_policy_basic&cloudshell_image=gcr.io%2Fcloudshell-images%2Fcloudshell%3Alatest&open_in_editor=main.tf&cloudshell_print=.%2Fmotd&cloudshell_tutorial=.%2Ftutorial.md\" target=\"_blank\">    <img alt=\"Open in Cloud Shell\" src=\"//gstatic.com/cloudssh/images/open-btn.svg\" style=\"max-height: 44px; margin: 32px auto; max-width: 100%;\">  </a></div>", "example-usage---network-security-server-tls-policy-basic": "<h2 id=\"example-usage-network-security-server-tls-policy-basic\">Example Usage - Network Security Server Tls Policy Basic</h2><p>resource \"google_network_security_server_tls_policy\" \"default\" {<br />  provider               = google-beta<br />  name                   = \"my-server-tls-policy\"<br />  labels                 = {<br />    foo = \"bar\"<br />  }<br />  description            = \"my description\"<br />  allow_open             = \"false\"<br />  server_certificate {<br />    certificate_provider_instance {<br />        plugin_instance = \"google_cloud_private_spiffe\"<br />      }<br />  }<br />  mtls_policy {<br />    client_validation_ca {<br />      grpc_endpoint {<br />        target_uri = \"unix:mypath\"<br />      }<br />    }<br />    client_validation_ca {<br />      grpc_endpoint {<br />        target_uri = \"unix:abc/mypath\"<br />      }<br />    }<br />    client_validation_ca {<br />      certificate_provider_instance {<br />        plugin_instance = \"google_cloud_private_spiffe\"<br />      }<br />    }<br />  }<br />}</p><div class = \"oics-button\" style=\"float: right; margin: 0 0 -15px\">  <a href=\"https://console.cloud.google.com/cloudshell/open?cloudshell_git_repo=https%3A%2F%2Fgithub.com%2Fterraform-google-modules%2Fdocs-examples.git&cloudshell_working_dir=network_security_server_tls_policy_advanced&cloudshell_image=gcr.io%2Fcloudshell-images%2Fcloudshell%3Alatest&open_in_editor=main.tf&cloudshell_print=.%2Fmotd&cloudshell_tutorial=.%2Ftutorial.md\" target=\"_blank\">    <img alt=\"Open in Cloud Shell\" src=\"//gstatic.com/cloudssh/images/open-btn.svg\" style=\"max-height: 44px; margin: 32px auto; max-width: 100%;\">  </a></div>", "example-usage---network-security-server-tls-policy-advanced": "<h2 id=\"example-usage-network-security-server-tls-policy-advanced\">Example Usage - Network Security Server Tls Policy Advanced</h2><p>resource \"google_network_security_server_tls_policy\" \"default\" {<br />  provider               = google-beta<br />  name                   = \"my-server-tls-policy\"<br />  labels                 = {<br />    foo = \"bar\"<br />  }<br />  description            = \"my description\"<br />  location               = \"global\"<br />  allow_open             = \"false\"<br />  mtls_policy {<br />    client_validation_mode = \"ALLOW_INVALID_OR_MISSING_CLIENT_CERT\"<br />  }<br />}</p><div class = \"oics-button\" style=\"float: right; margin: 0 0 -15px\">  <a href=\"https://console.cloud.google.com/cloudshell/open?cloudshell_git_repo=https%3A%2F%2Fgithub.com%2Fterraform-google-modules%2Fdocs-examples.git&cloudshell_working_dir=network_security_server_tls_policy_server_cert&cloudshell_image=gcr.io%2Fcloudshell-images%2Fcloudshell%3Alatest&open_in_editor=main.tf&cloudshell_print=.%2Fmotd&cloudshell_tutorial=.%2Ftutorial.md\" target=\"_blank\">    <img alt=\"Open in Cloud Shell\" src=\"//gstatic.com/cloudssh/images/open-btn.svg\" style=\"max-height: 44px; margin: 32px auto; max-width: 100%;\">  </a></div>", "example-usage---network-security-server-tls-policy-server-cert": "<h2 id=\"example-usage-network-security-server-tls-policy-server-cert\">Example Usage - Network Security Server Tls Policy Server Cert</h2><p>resource \"google_network_security_server_tls_policy\" \"default\" {<br />  provider               = google-beta<br />  name                   = \"my-server-tls-policy\"<br />  labels                 = {<br />    foo = \"bar\"<br />  }<br />  description            = \"my description\"<br />  location               = \"global\"<br />  allow_open             = \"false\"<br />  server_certificate {<br />    grpc_endpoint {<br />        target_uri = \"unix:mypath\"<br />      }<br />  }<br />}</p>", "argument-reference": "<h2 id=\"argument-reference\">Argument Reference</h2><p>The following arguments are supported:</p><ul><li><code>name</code> -<br />  (Required)<br />  Name of the ServerTlsPolicy resource.</li></ul><hr /><ul><li><p><code>labels</code> -<br />  (Optional)<br />  Set of label tags associated with the ServerTlsPolicy resource.</p></li><li><p><code>description</code> -<br />  (Optional)<br />  A free-text description of the resource. Max length 1024 characters.</p></li><li><p><code>allow_open</code> -<br />  (Optional)<br />  This field applies only for Traffic Director policies. It is must be set to false for external HTTPS load balancer policies.<br />  Determines if server allows plaintext connections. If set to true, server allows plain text connections. By default, it is set to false. This setting is not exclusive of other encryption modes. For example, if allowOpen and mtlsPolicy are set, server allows both plain text and mTLS connections. See documentation of other encryption modes to confirm compatibility.<br />  Consider using it if you wish to upgrade in place your deployment to TLS while having mixed TLS and non-TLS traffic reaching port :80.</p></li><li><p><code>server_certificate</code> -<br />  (Optional)<br />  Defines a mechanism to provision client identity (public and private keys) for peer to peer authentication. The presence of this dictates mTLS.<br />  Structure is <a href=\"#nested_server_certificate\">documented below</a>.</p></li><li><p><code>mtls_policy</code> -<br />  (Optional)<br />  This field is required if the policy is used with external HTTPS load balancers. This field can be empty for Traffic Director.<br />  Defines a mechanism to provision peer validation certificates for peer to peer authentication (Mutual TLS - mTLS). If not specified, client certificate will not be requested. The connection is treated as TLS and not mTLS. If allowOpen and mtlsPolicy are set, server allows both plain text and mTLS connections.<br />  Structure is <a href=\"#nested_mtls_policy\">documented below</a>.</p></li><li><p><code>location</code> -<br />  (Optional)<br />  The location of the server tls policy.<br />  The default value is <code>global</code>.</p></li><li><p><code>project</code> - (Optional) The ID of the project in which the resource belongs.<br />    If it is not provided, the provider project is used.</p></li></ul><p><a name=\"nested_server_certificate\"></a>The <code>server_certificate</code> block supports:</p><ul><li><p><code>grpc_endpoint</code> -<br />  (Optional)<br />  gRPC specific configuration to access the gRPC server to obtain the cert and private key.<br />  Structure is <a href=\"#nested_grpc_endpoint\">documented below</a>.</p></li><li><p><code>certificate_provider_instance</code> -<br />  (Optional)<br />  Optional if policy is to be used with Traffic Director. For external HTTPS load balancer must be empty.<br />  Defines a mechanism to provision server identity (public and private keys). Cannot be combined with allowOpen as a permissive mode that allows both plain text and TLS is not supported.<br />  Structure is <a href=\"#nested_certificate_provider_instance\">documented below</a>.</p></li></ul><p><a name=\"nested_grpc_endpoint\"></a>The <code>grpc_endpoint</code> block supports:</p><ul><li><code>target_uri</code> -<br />  (Required)<br />  The target URI of the gRPC endpoint. Only UDS path is supported, and should start with \"unix:\".</li></ul><p><a name=\"nested_certificate_provider_instance\"></a>The <code>certificate_provider_instance</code> block supports:</p><ul><li><code>plugin_instance</code> -<br />  (Required)<br />  Plugin instance name, used to locate and load CertificateProvider instance configuration. Set to \"google_cloud_private_spiffe\" to use Certificate Authority Service certificate provider instance.</li></ul><p><a name=\"nested_mtls_policy\"></a>The <code>mtls_policy</code> block supports:</p><ul><li><p><code>client_validation_mode</code> -<br />  (Optional)<br />  When the client presents an invalid certificate or no certificate to the load balancer, the clientValidationMode specifies how the client connection is handled.<br />  Required if the policy is to be used with the external HTTPS load balancing. For Traffic Director it must be empty.<br />  Possible values are: <code>CLIENT_VALIDATION_MODE_UNSPECIFIED</code>, <code>ALLOW_INVALID_OR_MISSING_CLIENT_CERT</code>, <code>REJECT_INVALID</code>.</p></li><li><p><code>client_validation_trust_config</code> -<br />  (Optional)<br />  Reference to the TrustConfig from certificatemanager.googleapis.com namespace.<br />  If specified, the chain validation will be performed against certificates configured in the given TrustConfig.<br />  Allowed only if the policy is to be used with external HTTPS load balancers.</p></li><li><p><code>client_validation_ca</code> -<br />  (Optional)<br />  Required if the policy is to be used with Traffic Director. For external HTTPS load balancers it must be empty.<br />  Defines the mechanism to obtain the Certificate Authority certificate to validate the client certificate.<br />  Structure is <a href=\"#nested_client_validation_ca\">documented below</a>.</p></li></ul><p><a name=\"nested_client_validation_ca\"></a>The <code>client_validation_ca</code> block supports:</p><ul><li><p><code>grpc_endpoint</code> -<br />  (Optional)<br />  gRPC specific configuration to access the gRPC server to obtain the cert and private key.<br />  Structure is <a href=\"#nested_grpc_endpoint\">documented below</a>.</p></li><li><p><code>certificate_provider_instance</code> -<br />  (Optional)<br />  Optional if policy is to be used with Traffic Director. For external HTTPS load balancer must be empty.<br />  Defines a mechanism to provision server identity (public and private keys). Cannot be combined with allowOpen as a permissive mode that allows both plain text and TLS is not supported.<br />  Structure is <a href=\"#nested_certificate_provider_instance\">documented below</a>.</p></li></ul><p><a name=\"nested_grpc_endpoint\"></a>The <code>grpc_endpoint</code> block supports:</p><ul><li><code>target_uri</code> -<br />  (Required)<br />  The target URI of the gRPC endpoint. Only UDS path is supported, and should start with \"unix:\".</li></ul><p><a name=\"nested_certificate_provider_instance\"></a>The <code>certificate_provider_instance</code> block supports:</p><ul><li><code>plugin_instance</code> -<br />  (Required)<br />  Plugin instance name, used to locate and load CertificateProvider instance configuration. Set to \"google_cloud_private_spiffe\" to use Certificate Authority Service certificate provider instance.</li></ul>", "attributes-reference": "<h2 id=\"attributes-reference\">Attributes Reference</h2><p>In addition to the arguments listed above, the following computed attributes are exported:</p><ul><li><p><code>id</code> - an identifier for the resource with format <code>projects/{{project}}/locations/{{location}}/serverTlsPolicies/{{name}}</code></p></li><li><p><code>create_time</code> -<br />  Time the ServerTlsPolicy was created in UTC.</p></li><li><p><code>update_time</code> -<br />  Time the ServerTlsPolicy was updated in UTC.</p></li></ul>", "timeouts": "<h2 id=\"timeouts\">Timeouts</h2><p>This resource provides the following<br /><a href=\"https://developer.hashicorp.com/terraform/plugin/sdkv2/resources/retries-and-customizable-timeouts\">Timeouts</a> configuration options:</p><ul><li><code>create</code> - Default is 30 minutes.</li><li><code>update</code> - Default is 30 minutes.</li><li><code>delete</code> - Default is 30 minutes.</li></ul>", "import": "<h2 id=\"import\">Import</h2><p>ServerTlsPolicy can be imported using any of these accepted formats:</p><p>$ terraform import google_network_security_server_tls_policy.default projects/{{project}}/locations/{{location}}/serverTlsPolicies/{{name}}<br />$ terraform import google_network_security_server_tls_policy.default {{project}}/{{location}}/{{name}}<br />$ terraform import google_network_security_server_tls_policy.default {{location}}/{{name}}</p>", "user-project-overrides": "<h2 id=\"user-project-overrides\">User Project Overrides</h2><p>This resource supports <a href=\"https://registry.terraform.io/providers/hashicorp/google/latest/docs/guides/provider_reference#user_project_override\">User Project Overrides</a>.</p>", "description": "<h1 id=\"google_network_security_server_tls_policy\">google_network_security_server_tls_policy</h1><p>ClientTlsPolicy is a resource that specifies how a client should authenticate connections to backends of a service. This resource itself does not affect configuration unless it is attached to a backend service resource.</p><p>~&gt; <strong>Warning:</strong> This resource is in beta, and should be used with the terraform-provider-google-beta provider.<br />See <a href=\"https://terraform.io/docs/providers/google/guides/provider_versions.html\">Provider Versions</a> for more details on beta resources.</p><p>To get more information about ServerTlsPolicy, see:</p><ul><li><a href=\"https://cloud.google.com/traffic-director/docs/reference/network-security/rest/v1beta1/projects.locations.serverTlsPolicies\">API documentation</a></li></ul><div class = \"oics-button\" style=\"float: right; margin: 0 0 -15px\">  <a href=\"https://console.cloud.google.com/cloudshell/open?cloudshell_git_repo=https%3A%2F%2Fgithub.com%2Fterraform-google-modules%2Fdocs-examples.git&cloudshell_working_dir=network_security_server_tls_policy_basic&cloudshell_image=gcr.io%2Fcloudshell-images%2Fcloudshell%3Alatest&open_in_editor=main.tf&cloudshell_print=.%2Fmotd&cloudshell_tutorial=.%2Ftutorial.md\" target=\"_blank\">    <img alt=\"Open in Cloud Shell\" src=\"//gstatic.com/cloudssh/images/open-btn.svg\" style=\"max-height: 44px; margin: 32px auto; max-width: 100%;\">  </a></div>"}