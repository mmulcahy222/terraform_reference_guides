{"": "<h1 id=\"-_2\">----------------------------------------------------------------------------</h1><p>subcategory: \"Access Context Manager (VPC Service Controls)\"<br />description: |-<br />  Replace all existing Access Levels in an Access Policy with the Access Levels provided.</p><hr />", "auto-generated-code-type-mmv1": "<h1 id=\"auto-generated-code-type-mmv1\"><strong><em>     AUTO GENERATED CODE    </em></strong>    Type: MMv1     ***</h1>", "this-file-is-automatically-generated-by-magic-modules-and-manual": "<h1 id=\"this-file-is-automatically-generated-by-magic-modules-and-manual\">This file is automatically generated by Magic Modules and manual</h1>", "changes-will-be-clobbered-when-the-file-is-regenerated": "<h1 id=\"changes-will-be-clobbered-when-the-file-is-regenerated\">changes will be clobbered when the file is regenerated.</h1>", "please-read-more-about-how-to-change-this-file-in": "<h1 id=\"please-read-more-about-how-to-change-this-file-in\">Please read more about how to change this file in</h1>", "github-contributing-md": "<h1 id=\"githubcontributingmd\">.github/CONTRIBUTING.md.</h1>", "google-access-context-manager-access-levels": "<h1 id=\"google_access_context_manager_access_levels\">google_access_context_manager_access_levels</h1><p>Replace all existing Access Levels in an Access Policy with the Access Levels provided. This is done atomically.<br />This is a bulk edit of all Access Levels and may override existing Access Levels created by <code>google_access_context_manager_access_level</code>,<br />thus causing a permadiff if used alongside <code>google_access_context_manager_access_level</code> on the same parent.</p><p>To get more information about AccessLevels, see:</p><ul><li><a href=\"https://cloud.google.com/access-context-manager/docs/reference/rest/v1/accessPolicies.accessLevels\">API documentation</a></li><li>How-to Guides<ul><li><a href=\"https://cloud.google.com/access-context-manager/docs/quickstart\">Access Policy Quickstart</a></li></ul></li></ul>", "example-usage---access-context-manager-access-levels-basic": "<h2 id=\"example-usage-access-context-manager-access-levels-basic\">Example Usage - Access Context Manager Access Levels Basic</h2><p><br />resource \"google_access_context_manager_access_levels\" \"access-levels\" {<br />  parent = \"accessPolicies/${google_access_context_manager_access_policy.access-policy.name}\"<br />  access_levels {<br />    name   = \"accessPolicies/${google_access_context_manager_access_policy.access-policy.name}/accessLevels/chromeos_no_lock\"<br />    title  = \"chromeos_no_lock\"<br />    basic {<br />      conditions {<br />        device_policy {<br />          require_screen_lock = true<br />          os_constraints {<br />            os_type = \"DESKTOP_CHROME_OS\"<br />          }<br />        }<br />        regions = [<br />    \"CH\",<br />    \"IT\",<br />    \"US\",<br />        ]<br />      }<br />    }<br />  }</p><p>access_levels {<br />    name   = \"accessPolicies/${google_access_context_manager_access_policy.access-policy.name}/accessLevels/mac_no_lock\"<br />    title  = \"mac_no_lock\"<br />    basic {<br />      conditions {<br />        device_policy {<br />          require_screen_lock = true<br />          os_constraints {<br />            os_type = \"DESKTOP_MAC\"<br />          }<br />        }<br />        regions = [<br />    \"CH\",<br />    \"IT\",<br />    \"US\",<br />        ]<br />      }<br />    }<br />  }<br />}</p><p>resource \"google_access_context_manager_access_policy\" \"access-policy\" {<br />  parent = \"organizations/123456789\"<br />  title  = \"my policy\"<br />}<br /></p>", "argument-reference": "<h2 id=\"argument-reference\">Argument Reference</h2><p>The following arguments are supported:</p><ul><li><code>parent</code> -<br />  (Required)<br />  The AccessPolicy this AccessLevel lives in.<br />  Format: accessPolicies/{policy_id}</li></ul><hr /><ul><li><code>access_levels</code> -<br />  (Optional)<br />  The desired Access Levels that should replace all existing Access Levels in the Access Policy.<br />  Structure is <a href=\"#nested_access_levels\">documented below</a>.</li></ul><p><a name=\"nested_access_levels\"></a>The <code>access_levels</code> block supports:</p><ul><li><p><code>name</code> -<br />  (Required)<br />  Resource name for the Access Level. The short_name component must begin<br />  with a letter and only include alphanumeric and '_'.<br />  Format: accessPolicies/{policy_id}/accessLevels/{short_name}</p></li><li><p><code>title</code> -<br />  (Required)<br />  Human readable title. Must be unique within the Policy.</p></li><li><p><code>description</code> -<br />  (Optional)<br />  Description of the AccessLevel and its use. Does not affect behavior.</p></li><li><p><code>basic</code> -<br />  (Optional)<br />  A set of predefined conditions for the access level and a combining function.<br />  Structure is <a href=\"#nested_basic\">documented below</a>.</p></li><li><p><code>custom</code> -<br />  (Optional)<br />  Custom access level conditions are set using the Cloud Common Expression Language to represent the necessary conditions for the level to apply to a request.<br />  See CEL spec at: https://github.com/google/cel-spec.<br />  Structure is <a href=\"#nested_custom\">documented below</a>.</p></li></ul><p><a name=\"nested_basic\"></a>The <code>basic</code> block supports:</p><ul><li><p><code>combining_function</code> -<br />  (Optional)<br />  How the conditions list should be combined to determine if a request<br />  is granted this AccessLevel. If AND is used, each Condition in<br />  conditions must be satisfied for the AccessLevel to be applied. If<br />  OR is used, at least one Condition in conditions must be satisfied<br />  for the AccessLevel to be applied.<br />  Default value is <code>AND</code>.<br />  Possible values are: <code>AND</code>, <code>OR</code>.</p></li><li><p><code>conditions</code> -<br />  (Required)<br />  A set of requirements for the AccessLevel to be granted.<br />  Structure is <a href=\"#nested_conditions\">documented below</a>.</p></li></ul><p><a name=\"nested_conditions\"></a>The <code>conditions</code> block supports:</p><ul><li><p><code>ip_subnetworks</code> -<br />  (Optional)<br />  A list of CIDR block IP subnetwork specification. May be IPv4<br />  or IPv6.<br />  Note that for a CIDR IP address block, the specified IP address<br />  portion must be properly truncated (i.e. all the host bits must<br />  be zero) or the input is considered malformed. For example,<br />  \"192.0.2.0/24\" is accepted but \"192.0.2.1/24\" is not. Similarly,<br />  for IPv6, \"2001:db8::/32\" is accepted whereas \"2001:db8::1/32\"<br />  is not. The originating IP of a request must be in one of the<br />  listed subnets in order for this Condition to be true.<br />  If empty, all IP addresses are allowed.</p></li><li><p><code>required_access_levels</code> -<br />  (Optional)<br />  A list of other access levels defined in the same Policy,<br />  referenced by resource name. Referencing an AccessLevel which<br />  does not exist is an error. All access levels listed must be<br />  granted for the Condition to be true.<br />  Format: accessPolicies/{policy_id}/accessLevels/{short_name}</p></li><li><p><code>members</code> -<br />  (Optional)<br />  An allowed list of members (users, service accounts).<br />  Using groups is not supported yet.<br />  The signed-in user originating the request must be a part of one<br />  of the provided members. If not specified, a request may come<br />  from any user (logged in/not logged in, not present in any<br />  groups, etc.).<br />  Formats: <code>user:{emailid}</code>, <code>serviceAccount:{emailid}</code></p></li><li><p><code>negate</code> -<br />  (Optional)<br />  Whether to negate the Condition. If true, the Condition becomes<br />  a NAND over its non-empty fields, each field must be false for<br />  the Condition overall to be satisfied. Defaults to false.</p></li><li><p><code>device_policy</code> -<br />  (Optional)<br />  Device specific restrictions, all restrictions must hold for<br />  the Condition to be true. If not specified, all devices are<br />  allowed.<br />  Structure is <a href=\"#nested_device_policy\">documented below</a>.</p></li><li><p><code>regions</code> -<br />  (Optional)<br />  The request must originate from one of the provided<br />  countries/regions.<br />  Format: A valid ISO 3166-1 alpha-2 code.</p></li></ul><p><a name=\"nested_device_policy\"></a>The <code>device_policy</code> block supports:</p><ul><li><p><code>require_screen_lock</code> -<br />  (Optional)<br />  Whether or not screenlock is required for the DevicePolicy<br />  to be true. Defaults to false.</p></li><li><p><code>allowed_encryption_statuses</code> -<br />  (Optional)<br />  A list of allowed encryptions statuses.<br />  An empty list allows all statuses.<br />  Each value may be one of: <code>ENCRYPTION_UNSPECIFIED</code>, <code>ENCRYPTION_UNSUPPORTED</code>, <code>UNENCRYPTED</code>, <code>ENCRYPTED</code>.</p></li><li><p><code>allowed_device_management_levels</code> -<br />  (Optional)<br />  A list of allowed device management levels.<br />  An empty list allows all management levels.<br />  Each value may be one of: <code>MANAGEMENT_UNSPECIFIED</code>, <code>NONE</code>, <code>BASIC</code>, <code>COMPLETE</code>.</p></li><li><p><code>os_constraints</code> -<br />  (Optional)<br />  A list of allowed OS versions.<br />  An empty list allows all types and all versions.<br />  Structure is <a href=\"#nested_os_constraints\">documented below</a>.</p></li><li><p><code>require_admin_approval</code> -<br />  (Optional)<br />  Whether the device needs to be approved by the customer admin.</p></li><li><p><code>require_corp_owned</code> -<br />  (Optional)<br />  Whether the device needs to be corp owned.</p></li></ul><p><a name=\"nested_os_constraints\"></a>The <code>os_constraints</code> block supports:</p><ul><li><p><code>minimum_version</code> -<br />  (Optional)<br />  The minimum allowed OS version. If not set, any version<br />  of this OS satisfies the constraint.<br />  Format: \"major.minor.patch\" such as \"10.5.301\", \"9.2.1\".</p></li><li><p><code>os_type</code> -<br />  (Required)<br />  The operating system type of the device.<br />  Possible values are: <code>OS_UNSPECIFIED</code>, <code>DESKTOP_MAC</code>, <code>DESKTOP_WINDOWS</code>, <code>DESKTOP_LINUX</code>, <code>DESKTOP_CHROME_OS</code>, <code>ANDROID</code>, <code>IOS</code>.</p></li></ul><p><a name=\"nested_custom\"></a>The <code>custom</code> block supports:</p><ul><li><code>expr</code> -<br />  (Required)<br />  Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language.<br />  This page details the objects and attributes that are used to the build the CEL expressions for<br />  custom access levels - https://cloud.google.com/access-context-manager/docs/custom-access-level-spec.<br />  Structure is <a href=\"#nested_expr\">documented below</a>.</li></ul><p><a name=\"nested_expr\"></a>The <code>expr</code> block supports:</p><ul><li><p><code>expression</code> -<br />  (Required)<br />  Textual representation of an expression in Common Expression Language syntax.</p></li><li><p><code>title</code> -<br />  (Optional)<br />  Title for the expression, i.e. a short string describing its purpose.</p></li><li><p><code>description</code> -<br />  (Optional)<br />  Description of the expression</p></li><li><p><code>location</code> -<br />  (Optional)<br />  String indicating the location of the expression for error reporting, e.g. a file name and a position in the file</p></li></ul>", "attributes-reference": "<h2 id=\"attributes-reference\">Attributes Reference</h2><p>In addition to the arguments listed above, the following computed attributes are exported:</p><ul><li><code>id</code> - an identifier for the resource with format <code>{{parent}}/accessLevels</code></li></ul>", "timeouts": "<h2 id=\"timeouts\">Timeouts</h2><p>This resource provides the following<br /><a href=\"https://developer.hashicorp.com/terraform/plugin/sdkv2/resources/retries-and-customizable-timeouts\">Timeouts</a> configuration options:</p><ul><li><code>create</code> - Default is 20 minutes.</li><li><code>update</code> - Default is 20 minutes.</li><li><code>delete</code> - Default is 20 minutes.</li></ul>", "import": "<h2 id=\"import\">Import</h2><p>AccessLevels can be imported using any of these accepted formats:</p><p><code>$ terraform import google_access_context_manager_access_levels.default {{parent}}/accessLevels$ terraform import google_access_context_manager_access_levels.default {{parent}}</code></p>", "description": "<h1 id=\"google_access_context_manager_access_levels\">google_access_context_manager_access_levels</h1><p>Replace all existing Access Levels in an Access Policy with the Access Levels provided. This is done atomically.<br />This is a bulk edit of all Access Levels and may override existing Access Levels created by <code>google_access_context_manager_access_level</code>,<br />thus causing a permadiff if used alongside <code>google_access_context_manager_access_level</code> on the same parent.</p><p>To get more information about AccessLevels, see:</p><ul><li><a href=\"https://cloud.google.com/access-context-manager/docs/reference/rest/v1/accessPolicies.accessLevels\">API documentation</a></li><li>How-to Guides<ul><li><a href=\"https://cloud.google.com/access-context-manager/docs/quickstart\">Access Policy Quickstart</a></li></ul></li></ul>"}