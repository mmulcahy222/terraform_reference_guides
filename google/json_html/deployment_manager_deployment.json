{"": "<h1 id=\"-_2\">----------------------------------------------------------------------------</h1><p>subcategory: \"Cloud Deployment Manager\"<br />description: |-<br />  A collection of resources that are deployed and managed together using<br />  a configuration file</p><hr />", "auto-generated-code-type-mmv1": "<h1 id=\"auto-generated-code-type-mmv1\"><strong><em>     AUTO GENERATED CODE    </em></strong>    Type: MMv1     ***</h1>", "this-file-is-automatically-generated-by-magic-modules-and-manual": "<h1 id=\"this-file-is-automatically-generated-by-magic-modules-and-manual\">This file is automatically generated by Magic Modules and manual</h1>", "changes-will-be-clobbered-when-the-file-is-regenerated": "<h1 id=\"changes-will-be-clobbered-when-the-file-is-regenerated\">changes will be clobbered when the file is regenerated.</h1>", "please-read-more-about-how-to-change-this-file-in": "<h1 id=\"please-read-more-about-how-to-change-this-file-in\">Please read more about how to change this file in</h1>", "github-contributing-md": "<h1 id=\"githubcontributingmd\">.github/CONTRIBUTING.md.</h1>", "google-deployment-manager-deployment": "<h1 id=\"google_deployment_manager_deployment\">google_deployment_manager_deployment</h1><p>A collection of resources that are deployed and managed together using<br />a configuration file</p><p>~&gt; <strong>Warning:</strong> Deployment Manager shares similar behavior with Terraform as both<br />products manage GCP resource lifecycle and state. This Terraform<br />resource is intended only to manage a Deployment resource,<br />and attempts to manage the Deployment's resources in Terraform as well<br />will likely result in errors or unexpected behavior as the two tools<br />fight over ownership. We strongly discourage doing so unless you are an<br />experienced user of both tools.</p><p>In addition, due to limitations of the API, Terraform will treat<br />deployments in preview as recreate-only for any update operation other<br />than actually deploying an in-preview deployment (i.e. <code>preview=true</code> to<br /><code>preview=false</code>).</p>", "example-usage---deployment-manager-deployment-basic": "<h2 id=\"example-usage-deployment-manager-deployment-basic\">Example Usage - Deployment Manager Deployment Basic</h2><p>resource \"google_deployment_manager_deployment\" \"deployment\" {<br />  name = \"my-deployment\"</p><p>target {<br />    config {<br />      content = file(\"path/to/config.yml\")<br />    }<br />  }</p><p>labels {<br />    key = \"foo\"<br />    value = \"bar\"<br />  }<br />}</p>", "example-usage---deployment-manager-deployment-imports": "<h2 id=\"example-usage-deployment-manager-deployment-imports\">Example Usage - Deployment Manager Deployment Imports</h2><p>resource \"google_deployment_manager_deployment\" \"deployment\" {<br />  name = \"my-deployment\"<br />  target {<br />    config {<br />      content = &lt;&lt;EOF<br />imports:<br />- path: service_account.jinja<br />- path: vm.jinja</p><p>resources:<br />- name: &amp;SA_NAME my-vm-account<br />  type: service_account.jinja<br />- name: my-vm<br />  type: vm.jinja<br />  properties:<br />    serviceAccountId: *SA_NAME<br />EOF</p><pre><code>imports {  name = \"vm.jinja\"  content = file(\"path/to/vm.jinja\")}imports {  name = \"service_account.jinja\"  content = file(\"path/to/service_account.jinja\")}</code></pre><p>}<br />}</p>", "argument-reference": "<h2 id=\"argument-reference\">Argument Reference</h2><p>The following arguments are supported:</p><ul><li><p><code>name</code> -<br />  (Required)<br />  Unique name for the deployment</p></li><li><p><code>target</code> -<br />  (Required)<br />  Parameters that define your deployment, including the deployment<br />  configuration and relevant templates.<br />  Structure is <a href=\"#nested_target\">documented below</a>.</p></li></ul><p><a name=\"nested_target\"></a>The <code>target</code> block supports:</p><ul><li><p><code>config</code> -<br />  (Required)<br />  The root configuration file to use for this deployment.<br />  Structure is <a href=\"#nested_config\">documented below</a>.</p></li><li><p><code>imports</code> -<br />  (Optional)<br />  Specifies import files for this configuration. This can be<br />  used to import templates or other files. For example, you might<br />  import a text file in order to use the file in a template.<br />  Structure is <a href=\"#nested_imports\">documented below</a>.</p></li></ul><p><a name=\"nested_config\"></a>The <code>config</code> block supports:</p><ul><li><code>content</code> -<br />  (Required)<br />  The full YAML contents of your configuration file.</li></ul><p><a name=\"nested_imports\"></a>The <code>imports</code> block supports:</p><ul><li><p><code>content</code> -<br />  (Optional)<br />  The full contents of the template that you want to import.</p></li><li><p><code>name</code> -<br />  (Optional)<br />  The name of the template to import, as declared in the YAML<br />  configuration.</p></li></ul><hr /><ul><li><p><code>description</code> -<br />  (Optional)<br />  Optional user-provided description of deployment.</p></li><li><p><code>labels</code> -<br />  (Optional)<br />  Key-value pairs to apply to this labels.<br />  Structure is <a href=\"#nested_labels\">documented below</a>.</p></li><li><p><code>create_policy</code> -<br />  (Optional)<br />  Set the policy to use for creating new resources. Only used on<br />  create and update. Valid values are <code>CREATE_OR_ACQUIRE</code> (default) or<br /><code>ACQUIRE</code>. If set to <code>ACQUIRE</code> and resources do not already exist,<br />  the deployment will fail. Note that updating this field does not<br />  actually affect the deployment, just how it is updated.<br />  Default value is <code>CREATE_OR_ACQUIRE</code>.<br />  Possible values are: <code>ACQUIRE</code>, <code>CREATE_OR_ACQUIRE</code>.</p></li><li><p><code>delete_policy</code> -<br />  (Optional)<br />  Set the policy to use for deleting new resources on update/delete.<br />  Valid values are <code>DELETE</code> (default) or <code>ABANDON</code>. If <code>DELETE</code>,<br />  resource is deleted after removal from Deployment Manager. If<br /><code>ABANDON</code>, the resource is only removed from Deployment Manager<br />  and is not actually deleted. Note that updating this field does not<br />  actually change the deployment, just how it is updated.<br />  Default value is <code>DELETE</code>.<br />  Possible values are: <code>ABANDON</code>, <code>DELETE</code>.</p></li><li><p><code>preview</code> -<br />  (Optional)<br />  If set to true, a deployment is created with \"shell\" resources<br />  that are not actually instantiated. This allows you to preview a<br />  deployment. It can be updated to false to actually deploy<br />  with real resources.<br />   ~&gt;<strong>NOTE:</strong> Deployment Manager does not allow update<br />  of a deployment in preview (unless updating to preview=false). Thus,<br />  Terraform will force-recreate deployments if either preview is updated<br />  to true or if other fields are updated while preview is true.</p></li><li><p><code>project</code> - (Optional) The ID of the project in which the resource belongs.<br />    If it is not provided, the provider project is used.</p></li></ul><p><a name=\"nested_labels\"></a>The <code>labels</code> block supports:</p><ul><li><p><code>key</code> -<br />  (Optional)<br />  Key for label.</p></li><li><p><code>value</code> -<br />  (Optional)<br />  Value of label.</p></li></ul>", "attributes-reference": "<h2 id=\"attributes-reference\">Attributes Reference</h2><p>In addition to the arguments listed above, the following computed attributes are exported:</p><ul><li><p><code>id</code> - an identifier for the resource with format <code>projects/{{project}}/deployments/{{name}}</code></p></li><li><p><code>deployment_id</code> -<br />  Unique identifier for deployment. Output only.</p></li><li><p><code>manifest</code> -<br />  Output only. URL of the manifest representing the last manifest that<br />  was successfully deployed.</p></li><li><p><code>self_link</code> -<br />  Output only. Server defined URL for the resource.</p></li></ul>", "timeouts": "<h2 id=\"timeouts\">Timeouts</h2><p>This resource provides the following<br /><a href=\"https://developer.hashicorp.com/terraform/plugin/sdkv2/resources/retries-and-customizable-timeouts\">Timeouts</a> configuration options:</p><ul><li><code>create</code> - Default is 60 minutes.</li><li><code>update</code> - Default is 60 minutes.</li><li><code>delete</code> - Default is 60 minutes.</li></ul>", "import": "<h2 id=\"import\">Import</h2><p>Deployment can be imported using any of these accepted formats:</p><p>$ terraform import google_deployment_manager_deployment.default projects/{{project}}/deployments/{{name}}<br />$ terraform import google_deployment_manager_deployment.default {{project}}/{{name}}<br />$ terraform import google_deployment_manager_deployment.default {{name}}</p>", "user-project-overrides": "<h2 id=\"user-project-overrides\">User Project Overrides</h2><p>This resource supports <a href=\"https://registry.terraform.io/providers/hashicorp/google/latest/docs/guides/provider_reference#user_project_override\">User Project Overrides</a>.</p>", "description": "<h1 id=\"google_deployment_manager_deployment\">google_deployment_manager_deployment</h1><p>A collection of resources that are deployed and managed together using<br />a configuration file</p><p>~&gt; <strong>Warning:</strong> Deployment Manager shares similar behavior with Terraform as both<br />products manage GCP resource lifecycle and state. This Terraform<br />resource is intended only to manage a Deployment resource,<br />and attempts to manage the Deployment's resources in Terraform as well<br />will likely result in errors or unexpected behavior as the two tools<br />fight over ownership. We strongly discourage doing so unless you are an<br />experienced user of both tools.</p><p>In addition, due to limitations of the API, Terraform will treat<br />deployments in preview as recreate-only for any update operation other<br />than actually deploying an in-preview deployment (i.e. <code>preview=true</code> to<br /><code>preview=false</code>).</p>"}