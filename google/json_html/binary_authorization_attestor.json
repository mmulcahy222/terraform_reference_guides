{"": "<h1 id=\"-_2\">----------------------------------------------------------------------------</h1><p>subcategory: \"Binary Authorization\"<br />description: |-<br />  An attestor that attests to container image artifacts.</p><hr />", "auto-generated-code-type-mmv1": "<h1 id=\"auto-generated-code-type-mmv1\"><strong><em>     AUTO GENERATED CODE    </em></strong>    Type: MMv1     ***</h1>", "this-file-is-automatically-generated-by-magic-modules-and-manual": "<h1 id=\"this-file-is-automatically-generated-by-magic-modules-and-manual\">This file is automatically generated by Magic Modules and manual</h1>", "changes-will-be-clobbered-when-the-file-is-regenerated": "<h1 id=\"changes-will-be-clobbered-when-the-file-is-regenerated\">changes will be clobbered when the file is regenerated.</h1>", "please-read-more-about-how-to-change-this-file-in": "<h1 id=\"please-read-more-about-how-to-change-this-file-in\">Please read more about how to change this file in</h1>", "github-contributing-md": "<h1 id=\"githubcontributingmd\">.github/CONTRIBUTING.md.</h1>", "google-binary-authorization-attestor": "<h1 id=\"google_binary_authorization_attestor\">google_binary_authorization_attestor</h1><p>An attestor that attests to container image artifacts.</p><p>To get more information about Attestor, see:</p><ul><li><a href=\"https://cloud.google.com/binary-authorization/docs/reference/rest/\">API documentation</a></li><li>How-to Guides<ul><li><a href=\"https://cloud.google.com/binary-authorization/\">Official Documentation</a></li></ul></li></ul><div class = \"oics-button\" style=\"float: right; margin: 0 0 -15px\">  <a href=\"https://console.cloud.google.com/cloudshell/open?cloudshell_git_repo=https%3A%2F%2Fgithub.com%2Fterraform-google-modules%2Fdocs-examples.git&cloudshell_working_dir=binary_authorization_attestor_basic&cloudshell_image=gcr.io%2Fcloudshell-images%2Fcloudshell%3Alatest&open_in_editor=main.tf&cloudshell_print=.%2Fmotd&cloudshell_tutorial=.%2Ftutorial.md\" target=\"_blank\">    <img alt=\"Open in Cloud Shell\" src=\"//gstatic.com/cloudssh/images/open-btn.svg\" style=\"max-height: 44px; margin: 32px auto; max-width: 100%;\">  </a></div>", "example-usage---binary-authorization-attestor-basic": "<h2 id=\"example-usage-binary-authorization-attestor-basic\">Example Usage - Binary Authorization Attestor Basic</h2><p>resource \"google_binary_authorization_attestor\" \"attestor\" {<br />  name = \"test-attestor\"<br />  attestation_authority_note {<br />    note_reference = google_container_analysis_note.note.name<br />    public_keys {<br />      ascii_armored_pgp_public_key = &lt;&lt;EOF<br />mQENBFtP0doBCADF+joTiXWKVuP8kJt3fgpBSjT9h8ezMfKA4aXZctYLx5wslWQl<br />bB7Iu2ezkECNzoEeU7WxUe8a61pMCh9cisS9H5mB2K2uM4Jnf8tgFeXn3akJDVo0<br />oR1IC+Dp9mXbRSK3MAvKkOwWlG99sx3uEdvmeBRHBOO+grchLx24EThXFOyP9Fk6<br />V39j6xMjw4aggLD15B4V0v9JqBDdJiIYFzszZDL6pJwZrzcP0z8JO4rTZd+f64bD<br />Mpj52j/pQfA8lZHOaAgb1OrthLdMrBAjoDjArV4Ek7vSbrcgYWcI6BhsQrFoxKdX<br />83TZKai55ZCfCLIskwUIzA1NLVwyzCS+fSN/ABEBAAG0KCJUZXN0IEF0dGVzdG9y<br />IiA8ZGFuYWhvZmZtYW5AZ29vZ2xlLmNvbT6JAU4EEwEIADgWIQRfWkqHt6hpTA1L<br />uY060eeM4dc66AUCW0/R2gIbLwULCQgHAgYVCgkICwIEFgIDAQIeAQIXgAAKCRA6<br />0eeM4dc66HdpCAC4ot3b0OyxPb0Ip+WT2U0PbpTBPJklesuwpIrM4Lh0N+1nVRLC<br />51WSmVbM8BiAFhLbN9LpdHhds1kUrHF7+wWAjdR8sqAj9otc6HGRM/3qfa2qgh+U<br />WTEk/3us/rYSi7T7TkMuutRMIa1IkR13uKiW56csEMnbOQpn9rDqwIr5R8nlZP5h<br />MAU9vdm1DIv567meMqTaVZgR3w7bck2P49AO8lO5ERFpVkErtu/98y+rUy9d789l<br />+OPuS1NGnxI1YKsNaWJF4uJVuvQuZ1twrhCbGNtVorO2U12+cEq+YtUxj7kmdOC1<br />qoIRW6y0+UlAc+MbqfL0ziHDOAmcqz1GnROg<br />=6Bvm<br />EOF</p><pre><code>}</code></pre><p>}<br />}</p><p>resource \"google_container_analysis_note\" \"note\" {<br />  name = \"test-attestor-note\"<br />  attestation_authority {<br />    hint {<br />      human_readable_name = \"Attestor Note\"<br />    }<br />  }<br />}</p>", "example-usage---binary-authorization-attestor-kms": "<h2 id=\"example-usage-binary-authorization-attestor-kms\">Example Usage - Binary Authorization Attestor Kms</h2><p>resource \"google_binary_authorization_attestor\" \"attestor\" {<br />  name = \"test-attestor\"<br />  attestation_authority_note {<br />    note_reference = google_container_analysis_note.note.name<br />    public_keys {<br />      id = data.google_kms_crypto_key_version.version.id<br />      pkix_public_key {<br />        public_key_pem      = data.google_kms_crypto_key_version.version.public_key[0].pem<br />        signature_algorithm = data.google_kms_crypto_key_version.version.public_key[0].algorithm<br />      }<br />    }<br />  }<br />}</p><p>data \"google_kms_crypto_key_version\" \"version\" {<br />  crypto_key = google_kms_crypto_key.crypto-key.id<br />}</p><p>resource \"google_container_analysis_note\" \"note\" {<br />  name = \"test-attestor-note\"<br />  attestation_authority {<br />    hint {<br />      human_readable_name = \"Attestor Note\"<br />    }<br />  }<br />}</p><p>resource \"google_kms_crypto_key\" \"crypto-key\" {<br />  name     = \"test-attestor-key\"<br />  key_ring = google_kms_key_ring.keyring.id<br />  purpose  = \"ASYMMETRIC_SIGN\"</p><p>version_template {<br />    algorithm = \"RSA_SIGN_PKCS1_4096_SHA512\"<br />  }</p><p>lifecycle {<br />    prevent_destroy = true<br />  }<br />}</p><p>resource \"google_kms_key_ring\" \"keyring\" {<br />  name     = \"test-attestor-key-ring\"<br />  location = \"global\"<br />}</p>", "argument-reference": "<h2 id=\"argument-reference\">Argument Reference</h2><p>The following arguments are supported:</p><ul><li><p><code>name</code> -<br />  (Required)<br />  The resource name.</p></li><li><p><code>attestation_authority_note</code> -<br />  (Required)<br />  A Container Analysis ATTESTATION_AUTHORITY Note, created by the user.<br />  Structure is <a href=\"#nested_attestation_authority_note\">documented below</a>.</p></li></ul><p><a name=\"nested_attestation_authority_note\"></a>The <code>attestation_authority_note</code> block supports:</p><ul><li><p><code>note_reference</code> -<br />  (Required)<br />  The resource name of a ATTESTATION_AUTHORITY Note, created by the<br />  user. If the Note is in a different project from the Attestor, it<br />  should be specified in the format <code>projects/*/notes/*</code> (or the legacy<br /><code>providers/*/notes/*</code>). This field may not be updated.<br />  An attestation by this attestor is stored as a Container Analysis<br />  ATTESTATION_AUTHORITY Occurrence that names a container image<br />  and that links to this Note.</p></li><li><p><code>public_keys</code> -<br />  (Optional)<br />  Public keys that verify attestations signed by this attestor. This<br />  field may be updated.<br />  If this field is non-empty, one of the specified public keys must<br />  verify that an attestation was signed by this attestor for the<br />  image specified in the admission request.<br />  If this field is empty, this attestor always returns that no valid<br />  attestations exist.<br />  Structure is <a href=\"#nested_public_keys\">documented below</a>.</p></li><li><p><code>delegation_service_account_email</code> -<br />  (Output)<br />  This field will contain the service account email address that<br />  this Attestor will use as the principal when querying Container<br />  Analysis. Attestor administrators must grant this service account<br />  the IAM role needed to read attestations from the noteReference in<br />  Container Analysis (containeranalysis.notes.occurrences.viewer).<br />  This email address is fixed for the lifetime of the Attestor, but<br />  callers should not make any other assumptions about the service<br />  account email; future versions may use an email based on a<br />  different naming pattern.</p></li></ul><p><a name=\"nested_public_keys\"></a>The <code>public_keys</code> block supports:</p><ul><li><p><code>comment</code> -<br />  (Optional)<br />  A descriptive comment. This field may be updated.</p></li><li><p><code>id</code> -<br />  (Optional)<br />  The ID of this public key. Signatures verified by BinAuthz<br />  must include the ID of the public key that can be used to<br />  verify them, and that ID must match the contents of this<br />  field exactly. Additional restrictions on this field can<br />  be imposed based on which public key type is encapsulated.<br />  See the documentation on publicKey cases below for details.</p></li><li><p><code>ascii_armored_pgp_public_key</code> -<br />  (Optional)<br />  ASCII-armored representation of a PGP public key, as the<br />  entire output by the command<br /><code>gpg --export --armor foo@example.com</code> (either LF or CRLF<br />  line endings). When using this field, id should be left<br />  blank. The BinAuthz API handlers will calculate the ID<br />  and fill it in automatically. BinAuthz computes this ID<br />  as the OpenPGP RFC4880 V4 fingerprint, represented as<br />  upper-case hex. If id is provided by the caller, it will<br />  be overwritten by the API-calculated ID.</p></li><li><p><code>pkix_public_key</code> -<br />  (Optional)<br />  A raw PKIX SubjectPublicKeyInfo format public key.<br />  NOTE: id may be explicitly provided by the caller when using this<br />  type of public key, but it MUST be a valid RFC3986 URI. If id is left<br />  blank, a default one will be computed based on the digest of the DER<br />  encoding of the public key.<br />  Structure is <a href=\"#nested_pkix_public_key\">documented below</a>.</p></li></ul><p><a name=\"nested_pkix_public_key\"></a>The <code>pkix_public_key</code> block supports:</p><ul><li><p><code>public_key_pem</code> -<br />  (Optional)<br />  A PEM-encoded public key, as described in<br /><code>https://tools.ietf.org/html/rfc7468#section-13</code></p></li><li><p><code>signature_algorithm</code> -<br />  (Optional)<br />  The signature algorithm used to verify a message against<br />  a signature using this key. These signature algorithm must<br />  match the structure and any object identifiers encoded in<br />  publicKeyPem (i.e. this algorithm must match that of the<br />  public key).</p></li></ul><hr /><ul><li><p><code>description</code> -<br />  (Optional)<br />  A descriptive comment. This field may be updated. The field may be<br />  displayed in chooser dialogs.</p></li><li><p><code>project</code> - (Optional) The ID of the project in which the resource belongs.<br />    If it is not provided, the provider project is used.</p></li></ul>", "attributes-reference": "<h2 id=\"attributes-reference\">Attributes Reference</h2><p>In addition to the arguments listed above, the following computed attributes are exported:</p><ul><li><code>id</code> - an identifier for the resource with format <code>projects/{{project}}/attestors/{{name}}</code></li></ul>", "timeouts": "<h2 id=\"timeouts\">Timeouts</h2><p>This resource provides the following<br /><a href=\"https://developer.hashicorp.com/terraform/plugin/sdkv2/resources/retries-and-customizable-timeouts\">Timeouts</a> configuration options:</p><ul><li><code>create</code> - Default is 20 minutes.</li><li><code>update</code> - Default is 20 minutes.</li><li><code>delete</code> - Default is 20 minutes.</li></ul>", "import": "<h2 id=\"import\">Import</h2><p>Attestor can be imported using any of these accepted formats:</p><p>$ terraform import google_binary_authorization_attestor.default projects/{{project}}/attestors/{{name}}<br />$ terraform import google_binary_authorization_attestor.default {{project}}/{{name}}<br />$ terraform import google_binary_authorization_attestor.default {{name}}</p>", "user-project-overrides": "<h2 id=\"user-project-overrides\">User Project Overrides</h2><p>This resource supports <a href=\"https://registry.terraform.io/providers/hashicorp/google/latest/docs/guides/provider_reference#user_project_override\">User Project Overrides</a>.</p>", "description": "<h1 id=\"google_binary_authorization_attestor\">google_binary_authorization_attestor</h1><p>An attestor that attests to container image artifacts.</p><p>To get more information about Attestor, see:</p><ul><li><a href=\"https://cloud.google.com/binary-authorization/docs/reference/rest/\">API documentation</a></li><li>How-to Guides<ul><li><a href=\"https://cloud.google.com/binary-authorization/\">Official Documentation</a></li></ul></li></ul><div class = \"oics-button\" style=\"float: right; margin: 0 0 -15px\">  <a href=\"https://console.cloud.google.com/cloudshell/open?cloudshell_git_repo=https%3A%2F%2Fgithub.com%2Fterraform-google-modules%2Fdocs-examples.git&cloudshell_working_dir=binary_authorization_attestor_basic&cloudshell_image=gcr.io%2Fcloudshell-images%2Fcloudshell%3Alatest&open_in_editor=main.tf&cloudshell_print=.%2Fmotd&cloudshell_tutorial=.%2Ftutorial.md\" target=\"_blank\">    <img alt=\"Open in Cloud Shell\" src=\"//gstatic.com/cloudssh/images/open-btn.svg\" style=\"max-height: 44px; margin: 32px auto; max-width: 100%;\">  </a></div>"}