{"ibm-cis-healthcheck": "<h1 id=\"ibm_cis_healthcheck\">ibm_cis_healthcheck</h1><p>Create, update, or delete an HTTPS health check for your IBM Cloud Internet Services instance. You can configure a health check monitor to actively check the availability of those servers over HTTP(S). For more information, about CIS health check, see <a href=\"https://cloud.ibm.com/docs/cis?topic=cis-glb-features-healthchecks\">setting up health checks</a>.</p>", "example-usage": "<h2 id=\"example-usage\">Example usage</h2><p><code>terraformresource \"ibm_cis_healthcheck\" \"test\" {  cis_id         = ibm_cis.instance.id  expected_body  = \"alive\"  expected_codes = \"2xx\"  method         = \"GET\"  timeout        = 7  path           = \"/health\"  interval       = 60  retries        = 3  description    = \"example load balancer\"  headers {        header = \"Host\"        values = [\"example.com\", \"example1.com\"]      }    headers {        header = \"Host1\"        values = [\"example3.com\", \"example11.com\"]      }}</code></p>", "argument-reference": "<h2 id=\"argument-reference\">Argument reference</h2><p>Review the argument references that you can specify for your resource.</p><ul><li><code>allow_insecure</code> - (Optional, Bool) If set to <strong>true</strong>, the certificate is not validated when the health check uses HTTPS. If set to <strong>false</strong>, the certificate is validated, even if the health check uses HTTPS. The default value is <strong>false</strong>.</li><li><code>cis_id</code> - (Required, String) The ID of the IBM Cloud Internet Services instance.</li><li><code>description</code> - (Optional, String) A description for your health check.</li><li><code>headers</code> - (Optional, String) The health check headers. Header is not currently supported in this version of the provider.</li></ul><p>Nested scheme for <code>headers</code>:<br />    - <code>header</code> - (Optional, String) The value of a header.<br />    - <code>values</code> - (Optional, String) The list of values for a header field. <code>[expected_body]</code>, and <code>[expected_codes]</code> are required arguments when the type is <code>HTTP</code> or <code>HTTPS</code>. <strong>Note</strong> Header is not currently supported in this version of the provider.<br />- <code>expected_body</code> - (Required, String) A case-insensitive sub-string to look for in the response body. If this string is not found, the origin will be marked as unhealthy. A null value of \u201c\u201d is allowed to match on any content.<br />- <code>expected_codes</code> - (Required, String) The expected HTTP response code or code range of the health check. For example, 200.<br />- <code>follow_redirects</code> - (Optional, Bool) If set to <strong>true</strong>, a redirect is followed when a redirect is returned by the origin pool. Is set to <strong>false</strong>, redirects from the origin pool are not followed.<br />- <code>interval</code> - (Optional, Integer) The interval between each health check. Shorter intervals may improve failover time, but will increase load on the origins as we check from multiple locations. The default value is 60.<br />- <code>method</code> - (Optional, String) The HTTP method to use for the health check. Default: <code>GET</code>.<br />- <code>timeout</code> - (Optional, Integer) The timeout in seconds before marking the health check as failed. Default: 5.<br />- <code>path</code> - (Optional, String) The endpoint path to health check against. Default: <code>/</code>.<br />- <code>port</code> - (Optional, Integer) The TCP port number that you want to use for the health check.<br />- <code>retries</code> - (Optional, Integer) The number of retries to attempt in case of a timeout before marking the origin as unhealthy. Retries are attempted immediately. Default: 2.<br />- <code>type</code> - (Optional, String) The protocol to use for the health check. Currently supported protocols are <code>http</code> and <code>https</code>. Default: <code>http</code>.</p>", "attribute-reference": "<h2 id=\"attribute-reference\">Attribute reference</h2><p>In addition to all argument reference list, you can access the following attribute reference after your resource is created.</p><ul><li><code>id</code> - (String) The ID of the load balancer to monitor.</li><li><code>created_on</code> - (String) The RFC3339 timestamp of when the health check was created.</li><li><code>modified_on</code> - (String) The RFC3339 timestamp of when the health check was last modified.</li><li><code>monitor_id</code> - (String) The load balancer monitor ID.</li></ul>", "import": "<h2 id=\"import\">Import</h2><p>The <code>ibm_cis_health_check</code> resource can be imported by using the <code>id</code>. The ID is formed from the <code>Healthcheck Id</code> and the <code>CRN</code> (Cloud Resource Name) concatentated usinga <code>:</code> character.</p><p>The CRN will be located on the <strong>Overview</strong> page of the Internet Services instance under the <strong>Domain</strong> heading.</p><ul><li><p><strong>CRN</strong> The CRN is a 120 digit character string of the format <code>crn:v1:bluemix:public:internet-svcs:global:a/1aa1111a1a1111aa1a111111111111aa:11aa111a-11a1-1a11-111a-111aaa11a1a1::</code> </p></li><li><p><strong>Healthcheck ID</strong> The health check ID is a 32 digit character string in the format 1aaaa111111aa11111111111a1a11a1. The ID of a health check is not available via the console. It can be retrieved programmatically via the CIS API or via the command line by running <code>ibmcloud cis glb-monitors</code>.</p></li></ul><p><strong>Syntax</strong></p><p><code>$ terraform import ibm_cis_healthcheck.myorg &lt;id&gt;:&lt;crn&gt;</code></p><p><strong>Example</strong></p><p><code>$ terraform import ibm_cis_healthcheck.myorg 1fc7c3247067ee00856729661c7d58c9:crn:v1:bluemix:public:internet-svcs:global:a/4ea1882a2d3401ed1e459979941966ea:31fa970d-51d0-4b05-893e-251cba75a7b3::</code></p>", "description": "<h1 id=\"ibm_cis_healthcheck\">ibm_cis_healthcheck</h1><p>Create, update, or delete an HTTPS health check for your IBM Cloud Internet Services instance. You can configure a health check monitor to actively check the availability of those servers over HTTP(S). For more information, about CIS health check, see <a href=\"https://cloud.ibm.com/docs/cis?topic=cis-glb-features-healthchecks\">setting up health checks</a>.</p>"}