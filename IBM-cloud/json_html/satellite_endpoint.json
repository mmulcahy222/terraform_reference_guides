{"ibm-satellite-endpoint": "<h1 id=\"ibm_satellite_endpoint\">ibm_satellite_endpoint</h1><p>Provides a resource for ibm_satellite_endpoint. This allows ibm_satellite_endpoint to be created, updated and deleted.</p>", "example-usage": "<h2 id=\"example-usage\">Example usage</h2><p><code>terraformresource \"ibm_satellite_endpoint\" \"satellite_endpoint\" {  location = \"location_id\"  connection_type = \"cloud\"  display_name = \"My endpoint\"  server_host = \"example.com\"  server_port = 443  sni = \"example.com\"  client_protocol = \"https\"  client_mutual_auth = true  server_protocol = \"tls\"  server_mutual_auth = true  reject_unauth = true  timeout = 60  created_by = \"My service\"}</code></p>", "argument-reference": "<h2 id=\"argument-reference\">Argument reference</h2><p>The following arguments are supported:</p><ul><li><code>connection_type</code> - (Optional, string) The type of the endpoint.</li><li>Constraints: Allowable values are: cloud, location</li><li><code>created_by</code> - (Optional, string) The service or person who created the endpoint. Must be 1000 characters or fewer.</li><li><code>certs</code> - (Optional, List) The certs.</li><li><code>client</code> - (Optional, AdditionalNewEndpointRequestCertsClient) The CA which Satellite Link trust when receiving the connection from the client application.</li><li><code>server</code> - (Optional, AdditionalNewEndpointRequestCertsServer) The CA which Satellite Link trust when sending the connection to server application.</li><li><code>connector</code> - (Optional, AdditionalNewEndpointRequestCertsConnector) The cert which Satellite Link connector provide to identify itself for connecting to the client/server application.  </li><li><code>client_protocol</code> - (Optional, string) The protocol in the client application side.</li><li>Constraints: Allowable values are: udp, tcp, tls, http, https, http-tunnel</li><li><code>client_mutual_auth</code> - (Optional, bool) Whether enable mutual auth in the client application side, when client_protocol is 'tls' or 'https', this field is required.</li><li>Constraints: The default value is <code>false</code>.  </li><li><code>display_name</code> - (Optional, string) The display name of the endpoint. Endpoint names must start with a letter and end with an alphanumeric character, can contain letters, numbers, and hyphen (-), and must be 63 characters or fewer.</li><li><code>location</code> - (Required, string) The Location ID.</li><li><code>reject_unauth</code> - (Optional, bool) Whether reject any connection to the server application which is not authorized with the list of supplied CAs in the fields certs.server_cert.</li><li>Constraints: The default value is <code>false</code>.</li><li><code>server_host</code> - (Optional, string) The host name or IP address of the server endpoint. For 'http-tunnel' protocol, server_host can start with '<em>.' , which means a wildcard to it's sub domains. Such as '</em>.example.com' can accept request to 'api.example.com' and 'www.example.com'.</li><li><code>server_port</code> - (Optional, int) The port number of the server endpoint. For 'http-tunnel' protocol, server_port can be 0, which means any port. Such as 0 is good for 80 (http) and 443 (https).</li><li><code>sni</code> - (Optional, string) The server name indicator (SNI) which used to connect to the server endpoint. Only useful if server side requires SNI.</li><li><code>server_protocol</code> - (Optional, string) The protocol in the server application side. This parameter will change to default value if it is omitted even when using PATCH API. If client_protocol is 'udp', server_protocol must be 'udp'. If client_protocol is 'tcp'/'http', server_protocol could be 'tcp'/'tls' and default to 'tcp'. If client_protocol is 'tls'/'https', server_protocol could be 'tcp'/'tls' and default to 'tls'. If client_protocol is 'http-tunnel', server_protocol must be 'tcp'.</li><li>Constraints: Allowable values are: udp, tcp, tls</li><li><code>server_mutual_auth</code> - (Optional, bool) Whether enable mutual auth in the server application side, when client_protocol is 'tls', this field is required.</li><li>Constraints: The default value is <code>false</code>.</li><li><code>timeout</code> - (Optional, int) The inactivity timeout in the Endpoint side.</li><li>Constraints: The maximum value is <code>180</code>. The minimum value is <code>1</code>.</li></ul>", "attribute-reference": "<h2 id=\"attribute-reference\">Attribute reference</h2><p>In addition to all arguments above, the following attributes are exported:</p><ul><li><code>crn</code> - Service instance associated with this location.</li><li><code>connector_port</code> - The connector port.</li><li><code>client_host</code> - The hostname which Satellite Link server listen on for the on-location endpoint, or the hostname which the connector server listen on for the on-cloud endpoint destiantion.</li><li><code>client_port</code> - The port which Satellite Link server listen on for the on-location, or the port which the connector server listen on for the on-cloud endpoint destiantion.</li><li><code>created_at</code> - The time when the Endpoint is created.</li><li><code>endpoint_id</code> - The Endpoint ID.</li><li><code>id</code> - The unique identifier of the ibm_satellite_endpoint.</li><li><code>last_change</code> - The last time modify the Endpoint configurations.</li><li><code>performance</code> - The last performance data of the endpoint.</li><li><code>sources</code> - sources</li><li><code>service_name</code> - The service name of the endpoint.</li><li><code>status</code> - Whether the Endpoint is active or not.</li><li>Constraints: Allowable values are: enabled, disabled</li></ul>", "import": "<h2 id=\"import\">Import</h2><p>You can import the <code>ibm_satellite_endpoint</code> resource by using <code>endpoint_id</code>.<br />The <code>endpoint_id</code> property can be formed from <code>location</code>, and <code>endpoint_id</code> in the following format:</p><p><code>&lt;location&gt;/&lt;endpoint_id&gt;</code>* <code>location</code>: A string. The Location ID.* <code>endpoint_id</code>: A string. The Endpoint ID.</p><p><code>$ terraform import ibm_satellite_endpoint.satellite_endpoint &lt;location&gt;/&lt;endpoint_id&gt;</code></p>", "description": "<h1 id=\"ibm_satellite_endpoint\">ibm_satellite_endpoint</h1><p>Provides a resource for ibm_satellite_endpoint. This allows ibm_satellite_endpoint to be created, updated and deleted.</p>"}